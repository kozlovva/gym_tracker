{"version":3,"sources":["api/ExercisesAPI.js","components/base/AddButton.js","components/base/Modal.js","components/Constants.js","components/exercise/ExerciseForm.js","components/exercise/CreateExercise.js","components/exercise/ExerciseInfo.js","components/exercise/ExerciseList.js","components/scenes/ExercisesScene.js","components/base/TextWithIcon.js","components/traning/TraningCard.js","components/scenes/TraningScene.js","components/base/Navigation.js","api/TraningProgramAPI.js","components/exercise/ExercisesSelector.js","components/program/TraningProgramForm.js","components/program/CreateTraningProgram.js","components/program/TraningProgramInfo.js","components/program/TraningProgramCard.js","components/program/TraningProgramList.js","components/scenes/TraningProgramScene.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["GetExercises","items","localStorage","getItem","JSON","parse","SetExercises","exercises","console","log","setItem","stringify","GetExercisesByMuscle","muscle","filter","exercise","AddButton","props","react_default","a","createElement","Paper","sx","position","bottom","left","right","pb","pl","pr","elevation","Button","variant","fullWidth","color","p","onClick","text","Transition","React","forwardRef","ref","Slide","Object","assign","direction","Modal","Dialog","open","TransitionComponent","PaperProps","height","width","m","borderBottomRightRadius","borderBottomLeftRadius","DialogTitle","title","IconButton","aria-label","onClose","top","theme","palette","grey","Close_default","DialogContent","children","MuscleGroupsInfo","BICEPS","locale","TRICEPS","QUADS","GLUTES","ABS","CHEST","SHOULDERS","HAMSTRINGS","FOREARMS","NECK","LATS","LOWER_BACK","MIDDLE_BACK","TRAPS","MuscleGroupsEnum","DefaultExercises","id","DefaultExercise","uuidv4","DefaultModalState","type","DefaultTraningProgram","description","DefaultTraningPrograms","MenuProps","style","maxHeight","ITEM_HEIGHT","ExerciseFrom","Box","TextField","onChange","e","label","value","pt","FormControl","ml","mr","InputLabel","Select","labelId","map","name","MenuItem","key","CreateExercise","Box_Box","display","flexWrap","flexDirection","ExerciseForm","base_AddButton","onSave","ExerciseInfo","onRemove","justifyContent","mt","disableRipple","Accordion","styled","_ref","&:not(:last-child)","borderBottom","AccordionSummary","expandIcon","ArrowForwardIosSharp_default","fontSize","_ref2","padding","spacing","backgroundColor","primary","light","& .MuiAccordionSummary-expandIconWrapper.Mui-expanded","transform","& .MuiAccordionSummary-content","marginLeft","AccordionDetails","MuiAccordionDetails","_ref3","borderTop","ExerciseList","_useState","useState","_useState2","slicedToArray","expanded","setExpanded","calcCount","length","CountExercisesByMuscle","idx","ExerciseList_Accordion","panel","event","newExpanded","ExerciseList_AccordionSummary","ExpandMore_default","aria-controls","alignItems","Badge","showZero","badgeContent","ExerciseList_AccordionDetails","index","stopPropagation","onClickToExercise","textAlign","defaultModalState","ExercisesScene","modalInfo","setModalInfo","_useState3","_useState4","selectedItem","setSelectedItem","handleChangeExercise","field","item","target","objectSpread","closeModal","onChangeModal","overflow","exercise_ExerciseList","base_Modal","exercise_ExerciseInfo","RemoveExercises","UpdateExercise","exercise_CreateExercise","push","AddExercises","TextWithIcon","icon","Typography","gutterBottom","mb","lineHeight","TraningCard","Card","CardActionArea","CardHeader","CardMedia","image","CardActions","flex","base_TextWithIcon","CalendarMonth_default","date","AccessTime_default","concat","duration","TraningScene","status","tranings","traning","traning_TraningCard","Divider","Navigation","BottomNavigation","activeScene","handleChange","showLabels","BottomNavigationAction","ListAlt_default","FitnessCenter_default","Fitbit_default","GetTraningPrograms","SetTraningPrograms","traningPrograms","ExercisesSelector","ExercisesSelector_AccordionSummary","endIcon","isSelected","Check_default","handleCheckItem","TraningProgramForm","selected","setSelected","isOpen","setOpen","useEffect","toConsumableArray","includes","handleChangeOpen","List","exerciseId","find","ListItem","ListItemAvatar","Avatar","ListItemText","secondary","exercise_ExercisesSelector","selectedExercises","setExercises","Add_default","CreateTraningProgram","program_TraningProgramForm","TraningProgramInfo","minHeight","TraningProgramCard","useTheme","TraningProgramCard_Card","CardContent","TraningProgramList","Grid","container","program","xs","program_TraningProgramCard","TraningProgramScene","handleChangeItem","program_TraningProgramList","program_TraningProgramInfo","RemoveTraningProgram","UpdateTraningProgram","program_CreateTraningProgram","AddTraningProgram","darkTheme","createTheme","main","dark","contrastText","background","default","shape","borderRadius","typography","fontFamily","join","initExercises","App","scene","setScene","CssBaseline","ThemeProvider","component","overflowY","scenes_ExercisesScene","scenes_TraningScene","scenes_TraningProgramScene","base_Navigation","newValue","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","URL","process","href","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.11b751fd.chunk.js","sourcesContent":["export const GetExercises = () => {\n    var items = localStorage.getItem(\"exercises\");\n    return JSON.parse(items);\n}\n\nexport const SetExercises = exercises => {\n    console.log(\"Update exercises in local storage...\")\n    localStorage.setItem(\"exercises\", JSON.stringify(exercises))\n}\n\nexport const GetExercisesByMuscle = muscle => {\n    const items = GetExercises();\n    return items.filter(exercise => exercise.muscle == muscle);\n}\n\nexport const AddExercises = exercise => {\n    const items = GetExercises();\n    items.push(exercise);\n    SetExercises(items);\n}\n\nexport const RemoveExercises = id => {\n    const items = GetExercises().filter(exercise => exercise.id != id);\n    SetExercises(items);\n}\n\nexport const UpdateExercise = exercise => {\n    const items = GetExercises().map(e => {\n        if(e.id == exercise.id) {\n            return exercise;\n        }\n\n        return e;\n    })\n    SetExercises(items);\n}\n\nexport const CountExercisesByMuscle = muscle => {\n    return GetExercisesByMuscle(muscle).length;\n}\n\nexport const GetExerciseById = id => {\n    const exercises = GetExercises();\n    return exercises.find(e => e.id == id); \n}","import React from \"react\";\nimport { Button, Paper } from \"@mui/material\"\n\n\n\nconst AddButton = props => {\n    return <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, pb: 8, pl: 1, pr: 1 }} elevation={3}>\n        <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"secondary\"\n            sx={{ p: 2 }}\n            onClick={props.onClick}>\n            {props.text}\n        </Button>\n    </Paper>\n}\n\nexport default AddButton;","import { Dialog, DialogContent, DialogTitle, IconButton, Slide, Typography } from '@mui/material';\nimport React from 'react';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Modal = (props) => {\n    return <Dialog\n        open={props.open}\n        TransitionComponent={Transition}\n        PaperProps={{\n            sx: {\n                height: \"100%\",\n                width: \"100%\",\n                m: 0,\n                position: \"fixed\",\n                bottom: 0,\n                borderBottomRightRadius: 0,\n                borderBottomLeftRadius: 0\n            }\n        }}>\n        <DialogTitle>\n            {props.title}\n            <IconButton\n                aria-label=\"close\"\n                onClick={props.onClose}\n                sx={{\n                    position: 'absolute',\n                    right: 8,\n                    top: 8,\n                    color: (theme) => theme.palette.grey[500],\n                }}\n            >\n                <CloseIcon />\n            </IconButton>\n        </DialogTitle>\n        <DialogContent sx={{}}>\n            {props.children}\n        </DialogContent>\n    </Dialog>\n}\n\nexport default Modal;","import {v4 as uuidv4} from 'uuid';\n\nexport const MuscleGroupsInfo = {\n    \"BICEPS\": {\n        \"locale\": \"Бицепс\"\n    },\n    \"TRICEPS\": {\n        \"locale\": \"Трицепс\"\n    },\n    \"QUADS\": {\n        \"locale\": \"Передняя поверхность бедра\"\n    },\n    \"GLUTES\": {\n        \"locale\": \"Ягодицы\"\n    },\n    \"ABS\": {\n        \"locale\": \"Пресс\"\n    },\n    \"CHEST\": {\n        \"locale\": \"Грудь\"\n    },\n    \"SHOULDERS\": {\n        \"locale\": \"Плечи\"\n    },\n    \"HAMSTRINGS\": {\n        \"locale\": \"Задняя поверхность бедра\"\n    },\n    \"FOREARMS\": {\n        \"locale\": \"Предплечья\"\n    },\n    \"NECK\": {\n        \"locale\": \"Шея\"\n    },\n    \"LATS\": {\n        \"locale\": \"Широчайшие\"\n    },\n    \"LOWER_BACK\": {\n        \"locale\": \"Разгибатели спины/Поясница\"\n    },\n    \"MIDDLE_BACK\": {\n        \"locale\": \"Середина спины\"\n    },\n    \"TRAPS\": {\n        \"locale\": \"Трапеции\"\n    }\n};\n\nexport const MuscleGroupsEnum = [\n    \"BICEPS\", \n    \"TRICEPS\", \n    \"QUADS\", \n    \"GLUTES\", \n    \"ABS\", \n    \"CHEST\", \n    \"SHOULDERS\", \n    \"HAMSTRINGS\", \n    \"FOREARMS\", \n    \"NECK\", \n    \"LATS\", \n    \"LOWER_BACK\", \n    \"MIDDLE_BACK\", \n    \"TRAPS\"\n];\n\nexport const DefaultExercises = [\n    {\n        \"id\": \"1\",\n        \"title\": \"Подъем штанги на бицепс\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"18\",\n        \"title\": \"Подтягивания обратным хватом\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"19\",\n        \"title\": \"Подъем гантелей в скамье Скотта\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"15\",\n        \"title\": \"Молотки с гантелями\",\n        \"muscle\": \"BICEPS\"\n    }, \n    {\n        \"id\": \"2\",\n        \"title\": \"Французский жим со штангой\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"20\",\n        \"title\": \"Французский со штангой\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"21\",\n        \"title\": \"Жим лежа узким хватом\",\n        \"muscle\": \"TRICEPS\"\n    },\n    {\n        \"id\": \"22\",\n        \"title\": \"Разгибания на трицепс в верхнем блоке\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"3\",\n        \"title\": \"Приседания со штангой\",\n        \"muscle\": \"QUADS\"\n    }, \n    {\n        \"id\": \"23\",\n        \"title\": \"Жим ногами\",\n        \"muscle\": \"QUADS\"\n    }, \n    {\n        \"id\": \"24\",\n        \"title\": \"Разгибания в блоке на квадрицепс\",\n        \"muscle\": \"QUADS\"\n    },\n    {\n        \"id\": \"25\",\n        \"title\": \"Выпады с гантелей\",\n        \"muscle\": \"QUADS\"\n    },  \n    {\n        \"id\": \"4\",\n        \"title\": \"Отведения ноги в блоке\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"26\",\n        \"title\": \"Ягодичный мост\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"27\",\n        \"title\": \"Глубокие приседания с широкой постановкой ног\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"28\",\n        \"title\": \"Отведение ног в стороны в тренажере\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"5\",\n        \"title\": \"Скручивания в римском стуле\",\n        \"muscle\": \"ABS\"\n    }, \n    {\n        \"id\": \"29\",\n        \"title\": \"Скручивания в висе на перекладине\",\n        \"muscle\": \"ABS\"\n    }, \n    {\n        \"id\": \"6\",\n        \"title\": \"Жим со штангой лежа\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"30\",\n        \"title\": \"Жим со штангой лежа на наклонной скамье\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"31\",\n        \"title\": \"Бабочка\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"7\",\n        \"title\": \"Махи с шагтелями в стороны\",\n        \"muscle\": \"SHOULDERS\"\n    },\n    {\n        \"id\": \"16\",\n        \"title\": \"Армейский жим\",\n        \"muscle\":\"SHOULDERS\"\n    },\n    {\n        \"id\": \"17\",\n        \"title\": \"Жим гантелей сидя\",\n        \"muscle\": \"SHOULDERS\"\n    }, \n    {\n        \"id\": \"8\",\n        \"title\": \"Румынская тяга\",\n        \"muscle\": \"HAMSTRINGS\"\n    }, \n    {\n        \"id\": \"9\",\n        \"title\": \"Обезьяний хват\",\n        \"muscle\": \"FOREARMS\"\n    }, \n    {\n        \"id\": \"10\",\n        \"title\": \"Скричивания шеи с блином\",\n        \"muscle\": \"NECK\"\n    }, \n    {\n        \"id\": \"11\",\n        \"title\": \"Подтягивания\",\n        \"muscle\": \"LATS\"\n    }, \n    {\n        \"id\": \"12\",\n        \"title\": \"Экстензия\",\n        \"muscle\": \"LOWER_BACK\"\n    }, \n    {\n        \"id\": \"13\",\n        \"title\": \"Тяга нижнего блока\",\n        \"muscle\": \"MIDDLE_BACK\"\n    }, \n    {\n        \"id\": \"14\",\n        \"title\": \"Шраги с гантелями\",\n        \"muscle\": \"TRAPS\"\n    }\n]\n\nexport const ModalTypeInfo = \"INFO\";\nexport const ModalTypeAdd = \"ADD\";\n\nexport const DefaultExercise = {\n    \"id\": uuidv4(),\n    title: \"\",\n    muscle: \"BICEPS\"\n}\n\nexport const DefaultModalState = {\n    open: false,\n    type: null,\n    title: null\n};\n\nexport const DefaultTraningProgram = {\n    \"id\": uuidv4(),\n    \"title\": \"\",\n    \"description\": \"\",\n    \"exercises\": []\n}\n\nexport const DefaultTraningPrograms = [\n    {\n        \"id\": \"1\",\n        \"title\": \"Спина-трицепс\",\n        \"description\": \"\",\n        \"exercises\": [\"1\", \"2\"]\n    },\n    {\n        \"id\": \"2\",\n        \"title\": \"Грудь-бицепс\" ,\n        \"description\": \"\",\n        \"exercises\": []\n    },\n    {\n        \"id\": \"3\",\n        \"title\": \"Ноги-плечи\",\n        \"description\": \"\",\n        \"exercises\": []\n    },\n    {\n        \"id\": \"4\",\n        \"title\": \"Тяни (спина-бицепс)\",\n        \"description\": \"\",\n        \"exercises\": []\n    },\n    {\n        \"id\": \"5\",\n        \"title\": \"Тяни (ноги-плечи)\",\n        \"description\": \"\",\n        \"exercises\": []\n    },\n    {\n        \"id\": \"6\",\n        \"title\": \"Толкай (грудь-трицепс)\",\n        \"description\": \"\",\n        \"exercises\": []\n    },\n    {\n        \"id\": \"7\",\n        \"title\": \"Толкай (ноги-плечи)\",\n        \"description\": \"\",\n        \"exercises\": []\n    }\n]","import { Box, FormControl, InputLabel, MenuItem, Select, TextField } from '@mui/material';\nimport React from 'react';\nimport { MuscleGroupsEnum } from '../Constants';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst ExerciseFrom = (props) => {\n    return <Box>\n        <TextField\n            onChange={(e) => { props.onChange(e, \"title\") }}\n            fullWidth\n            id=\"exercise-title\"\n            label=\"Название\"\n            variant=\"standard\"\n            value={props.exercise.title}\n            sx={{ pt: 1, pb: 1 }} />\n\n        <FormControl\n            variant='standard'\n            sx={{ m: 1, ml: 0, mr: 0, pt: 1, pb: 1 }}\n            fullWidth>\n            <InputLabel id=\"demo-multiple-name-label\">Мышечные группы</InputLabel>\n            <Select\n                onChange={(e) => { props.onChange(e, \"muscle\") }}\n                labelId=\"demo-multiple-name-label\"\n                id=\"demo-multiple-name\"\n                value={props.exercise.muscle}\n                MenuProps={MenuProps}>\n                {MuscleGroupsEnum.map((name) => (\n                    <MenuItem\n                        key={name}\n                        value={name}>\n                        {name}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    </Box>\n}\n\nexport default ExerciseFrom;","import { Button, Card, CardActions, CardContent, createTheme, FormControl, InputLabel, MenuItem, OutlinedInput, Select, TextField, ThemeProvider, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport AddButton from '../base/AddButton';\nimport { MuscleGroupsEnum } from '../Constants';\nimport ExerciseFrom from './ExerciseForm';\n\nconst CreateExercise = (props) => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\" }}>\n            <ExerciseFrom\n                exercise={props.exercise}\n                onChange={props.onChange} />\n\n            <AddButton text=\"Создать\" onClick={props.onSave} />\n        </Box>\n    </div>\n};\n\nexport default CreateExercise;","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport AddButton from '../base/AddButton';\nimport ExerciseFrom from './ExerciseForm';\n\nconst ExerciseInfo = (props) => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\" }}>\n            <ExerciseFrom\n                exercise={props.exercise}\n                onChange={props.onChange} />\n\n            <Button\n                onClick={props.onRemove}\n                fullWidth\n                color=\"error\"\n                sx={{ justifyContent: \"flex-start\", mt: 1, pl: 0 }}\n                disableRipple>\n                Удалить упражнение\n            </Button>\n\n            <AddButton text=\"Сохранить\" onClick={props.onSave} />\n        </Box>\n    </div>\n};\n\nexport default ExerciseInfo;","import { Accordion as MuiAccordion, AccordionDetails as MuiAccordionDetails, AccordionSummary as MuiAccordionSummary, Badge, Button } from \"@mui/material\";\nimport React, { useState } from \"react\";\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport { Box, styled } from \"@mui/system\";\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo } from \"../Constants\";\nimport { CountExercisesByMuscle, GetExercisesByMuscle } from \"../../api/ExercisesAPI\";\n\nconst Accordion = styled((props) => (\n    <MuiAccordion elevation={0} {...props} />\n))(({ theme }) => ({\n    '&:not(:last-child)': {\n        borderBottom: 0,\n    }\n}));\n\nconst AccordionSummary = styled((props) => (\n    <MuiAccordionSummary\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n        {...props}\n    />\n))(({ theme }) => ({\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.primary.light,\n    flexDirection: 'row-reverse',\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(90deg)',\n    },\n    '& .MuiAccordionSummary-content': {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n    padding: theme.spacing(2),\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\nconst ExerciseList = (props) => {\n    const [expanded, setExpanded] = useState(null)\n\n    const handleChangeExpanded = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const onClickToExercise = (e, exercise) => {\n        e.stopPropagation();\n        props.onClick(e, ModalTypeInfo, exercise);\n    }\n\n    const calcCount = (muscle) => {\n        return CountExercisesByMuscle(muscle);\n    }\n\n    return <div>\n        {MuscleGroupsEnum.map((muscle, idx) => <Accordion\n            key={idx}\n            expanded={expanded == muscle}\n            onChange={handleChangeExpanded(muscle)}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1bh-content\"\n                id=\"panel1bh-header\">\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", pr: 2 }}>\n                    {MuscleGroupsInfo[muscle].locale}\n                    <Badge showZero badgeContent={calcCount(muscle)} color=\"secondary\"></Badge>\n                </Box>\n            </AccordionSummary>\n            <AccordionDetails>\n                {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\n                    <Button\n                        color=\"secondary\"\n                        onClick={(e) => onClickToExercise(e, exercise)}\n                        fullWidth\n                        sx={{ justifyContent: \"flex-start\", textAlign: \"left\" }}\n                        disableRipple>\n                        {exercise.title}\n                    </Button>\n                </Box>)}\n            </AccordionDetails>\n        </Accordion>)\n        }\n    </div >\n}\n\nexport default ExerciseList;","import { Box } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { AddExercises, RemoveExercises, UpdateExercise } from \"../../api/ExercisesAPI\";\nimport AddButton from \"../base/AddButton\";\nimport Modal from \"../base/Modal\";\nimport { DefaultExercise, ModalTypeAdd, ModalTypeInfo } from \"../Constants\";\nimport CreateExercise from \"../exercise/CreateExercise\";\nimport ExerciseInfo from \"../exercise/ExerciseInfo\";\nimport ExerciseList from \"../exercise/ExerciseList\";\n\nconst defaultModalState = {\n    open: false,\n    type: null,\n    title: null\n};\n\nconst ExercisesScene = props => {\n    const [modalInfo, setModalInfo] = useState(defaultModalState);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const handleChangeExercise = (e, field) => {\n        var item = selectedItem;\n        item[field] = e.target.value;\n        setSelectedItem({ ...item });\n    }\n\n    const removeExercise = () => {\n        RemoveExercises(selectedItem.id)\n        closeModal();\n    }\n\n    const closeModal = () => {\n        setModalInfo(defaultModalState);\n        setSelectedItem(null)\n    }\n\n    const onChangeModal = (e, type, item) => {\n        if (modalInfo.open) {\n            closeModal();\n        } else {\n            setModalInfo({\n                open: true,\n                type: type,\n                title: type == ModalTypeAdd ? \"Создание упражнения\" : null\n            });\n            setSelectedItem({ ...item });\n        }\n    }\n\n    const saveExercise = (e) => {\n        UpdateExercise(selectedItem);\n        closeModal();\n    }\n\n    const addExeecise = (e) => {\n        AddExercises(selectedItem);\n        closeModal();\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\",\n    }}>\n        <ExerciseList onClick={onChangeModal} />\n        <Modal\n            open={modalInfo.open}\n            onClose={(e) => onChangeModal(e, null, null)}\n            title={modalInfo.title}>\n            {modalInfo.type == ModalTypeInfo && <ExerciseInfo\n                onChange={handleChangeExercise}\n                exercise={selectedItem}\n                onRemove={removeExercise}\n                onSave={saveExercise} />}\n            {modalInfo.type == ModalTypeAdd && <CreateExercise\n                onChange={handleChangeExercise}\n                exercise={selectedItem}\n                onSave={addExeecise} />}\n        </Modal>\n\n        <AddButton text=\"Создать упражнение\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultExercise)} />\n    </Box>\n}\n\nexport default ExercisesScene;","import { Box, Typography } from '@mui/material';\nimport React from 'react';\n\nconst TextWithIcon = (props) => {\n    return <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n        {props.icon}\n        <Typography variant=\"caption\" gutterBottom sx={{ mr: 1, mb: 0, lineHeight: 0 }}>{props.text}</Typography>\n    </Box>\n}\n\nexport default TextWithIcon;","import React from 'react';\nimport { Card, CardActionArea, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport Tag from '../base/Tag';\nimport { Box } from '@mui/system';\n\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport TextWithIcon from '../base/TextWithIcon';\n\nconst TraningCard = (props) => {\n    return <Card sx={{ display: 'flex' }}>\n        <CardActionArea>\n            <CardHeader title={props.title}>\n\n            </CardHeader>\n            <CardMedia sx={{ height: 140 }} image='https://www.hussle.com/blog/wp-content/uploads/2020/12/Gym-structure-1080x675.png' />\n            <CardActions sx={{ justifyContent: \"flex-end\", p: 2 }}>\n                <Box sx={{ display: 'flex', flexDirection: \"column\", flex: \"1 0 auto\" }}>\n                </Box>\n                <Box sx={{ display: \"flex\", alignItems: 'center', pl: 1 }}>\n                    <TextWithIcon\n                        icon={<CalendarMonthIcon />}\n                        text={props.date} />\n                    <TextWithIcon \n                    icon={<AccessTimeIcon />}\n                    text={`${props.duration} минут`}/>\n                </Box>\n            </CardActions>\n        </CardActionArea>\n    </Card>;\n}\n\nexport default TraningCard;","import { Divider } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport AddButton from \"../base/AddButton\";\nimport TraningCard from \"../traning/TraningCard\";\n\nconst TraningScene = props => {\n    const [tranings, setTranings] = useState([{\n        \"title\": \"Толкай\",\n        \"date\": \"2022-10-10\",\n        \"status\": \"ACTIVE\",\n        \"duration\": \"120\"\n    }])\n\n    return <div>\n        {tranings.map((traning, idx) =>\n            <TraningCard\n                key={idx}\n                title={traning.title}\n                date={traning.date}\n                duration={traning.duration} />\n        )}\n        <Divider light sx={{mt: 2}}></Divider>\n        <AddButton text=\"Добавить тренировку\" />\n    </div>\n}\n\nexport default TraningScene;","import React from \"react\";\nimport { BottomNavigation, BottomNavigationAction, Paper } from \"@mui/material\";\n\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\nimport FitbitIcon from '@mui/icons-material/Fitbit';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\n\nconst Navigation = props => {\n    return <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\n        <BottomNavigation value={props.activeScene} onChange={props.handleChange} showLabels>\n            <BottomNavigationAction value=\"program\" label=\"Программы\" icon={<ListAltIcon />} />\n            <BottomNavigationAction value=\"traning\" label=\"Тренировки\" icon={<FitnessCenterIcon />} />\n            <BottomNavigationAction value=\"exercise\" label=\"Упражнения\" icon={<FitbitIcon />} />\n        </BottomNavigation>\n    </Paper>\n}\n\nexport default Navigation;","export const GetTraningPrograms = () => {\n    var items = localStorage.getItem(\"traning_programs\");\n    return items != null ? JSON.parse(items) : [];\n}\n\nexport const SetTraningPrograms = (traningPrograms) => {\n    console.log(\"Update traning program in local storage...\")\n    localStorage.setItem(\"traning_programs\", JSON.stringify(traningPrograms))\n}\n\nexport const AddTraningProgram = exercise => {\n    const items = GetTraningPrograms();\n    items.push(exercise);\n    SetTraningPrograms(items);\n}\n\nexport const RemoveTraningProgram = id => {\n    const items = GetTraningPrograms().filter(exercise => exercise.id != id);\n    SetTraningPrograms(items);\n}\n\nexport const UpdateTraningProgram = exercise => {\n    const items = GetTraningPrograms().map(e => {\n        if(e.id == exercise.id) {\n            \n            return exercise;\n        }\n\n        return e;\n    })\n    SetTraningPrograms(items);\n}\n\n\nexport const GetTraningProgramById = id => {\n    const exercises = GetTraningPrograms();\n    return exercises.find(e => e.id == id); \n}","import { Accordion, AccordionDetails, AccordionSummary as MuiAccordionSummary, Box, Button, styled } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { GetExercisesByMuscle } from '../../api/ExercisesAPI';\nimport AddButton from '../base/AddButton';\nimport { MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\nimport CheckIcon from '@mui/icons-material/Check';\n\nconst AccordionSummary = styled((props) => (\n    <MuiAccordionSummary\n        {...props}\n    />\n))(({ theme }) => ({\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.primary.light,\n    flexDirection: 'row-reverse',\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(90deg)',\n    },\n    '& .MuiAccordionSummary-content': {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst ExercisesSelector = (props) => {\n    return <div>\n        <Box sx={{ pb: 14 }}>\n            {MuscleGroupsEnum.map((muscle, idx) => <Accordion\n                key={idx}\n                expanded={true}>\n                <AccordionSummary\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\">\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", p: 1 }}>\n                        {MuscleGroupsInfo[muscle].locale}\n                    </Box>\n                </AccordionSummary>\n                <AccordionDetails>\n                    {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\n                        <Button\n                            endIcon={props.isSelected(exercise.id) ? <CheckIcon /> : <div></div>}\n                            color=\"secondary\"\n                            onClick={(e) => props.handleCheckItem(exercise.id)}\n                            fullWidth\n                            sx={{ justifyContent: \"space-between\", textAlign: \"left\" }}\n                            disableRipple>\n                            {exercise.title}\n                        </Button>\n                    </Box>)}\n                </AccordionDetails>\n            </Accordion>)}\n        </Box>\n\n        <AddButton text={`Применить`} onClick={props.onSave} />\n    </div>\n}\n\nexport default ExercisesSelector;","import { Avatar, Box, Button, IconButton, List, ListItem, ListItemAvatar, ListItemText, TextField, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport AddIcon from '@mui/icons-material/Add';\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\nimport { GetExerciseById } from '../../api/ExercisesAPI';\nimport Modal from '../base/Modal';\nimport ExercisesSelector from '../exercise/ExercisesSelector';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst TraningProgramForm = props => {\n    const [selected, setSelected] = useState([]);\n    const [isOpen, setOpen] = useState(false)\n\n    useEffect(() => {\n        setSelected([...props.item.exercises])\n    }, [])\n\n    const isSelected = id => {\n        return selected.includes(id)\n    }\n\n    const handleCheckItem = id => {\n        if (!isSelected(id)) {\n            setSelected([...selected, id])\n        } else {\n            setSelected(selected.filter(e => e != id))\n        }\n    }\n\n    const onClose = () => {\n        setSelected(props.item.exercises)\n        handleChangeOpen();\n    }\n\n    const handleChangeOpen = () => {\n        setOpen(!isOpen)\n    }\n\n    const onSaveExercises = () => {\n        props.setExercises(selected);\n        handleChangeOpen();\n    }\n\n    return <Box>\n        <TextField\n            onChange={(e) => { props.onChange(e, \"title\") }}\n            fullWidth\n            id=\"exercise-title\"\n            label=\"Название\"\n            variant=\"standard\"\n            value={props.item.title}\n            sx={{ pt: 1, pb: 1 }} />\n\n        {props.item.exercises.length == 0 && <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 2 }}>\n            <Typography variant='caption'>Упражнения не добавлены</Typography>\n        </Box>}\n\n        {props.item.exercises.length > 0 && <List>\n            {props.item.exercises.map((exerciseId, idx) => {\n                const exercise = GetExerciseById(exerciseId);\n                return <ListItem key={idx} sx={{ pl: 0, pr: 0 }}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <FitnessCenterIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={exercise.title} secondary={exercise.muscle} />\n                </ListItem>\n            })}\n        </List>}\n\n        <Modal\n            open={isOpen}\n            onClose={onClose}\n            title=\"Добавление упражнений\">\n            <ExercisesSelector\n                handleCheckItem={handleCheckItem}\n                selectedExercises={props.item.exercises}\n                isSelected={isSelected}\n                selected={selected}\n                onSave={onSaveExercises} />\n        </Modal>\n\n        <Button fullWidth>\n            <AddIcon color='action' onClick={handleChangeOpen} />\n        </Button>\n    </Box>\n}\n\nexport default TraningProgramForm;","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport AddButton from '../base/AddButton';\nimport TraningProgramForm from './TraningProgramForm';\n\nconst CreateTraningProgram = props => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\n            <TraningProgramForm\n                item={props.item}\n                onChange={props.onChange}\n                setExercises={props.setExercises}\n                onSave={props.setExercises}/>\n\n            <AddButton text=\"Сохранить\" onClick={props.onSave} />\n        </Box>\n    </div>\n}\n \nexport default CreateTraningProgram;","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport AddButton from '../base/AddButton';\nimport TraningProgramForm from './TraningProgramForm';\n\nconst TraningProgramInfo = props => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\n            <TraningProgramForm\n                item={props.item}\n                onChange={props.onChange}\n                setExercises={props.setExercises}\n                onSave={props.setExercises}/>\n\n            <Button\n                onClick={props.onRemove}\n                fullWidth\n                color=\"error\"\n                sx={{ justifyContent: \"flex-start\", mt: 1, pl: 0 }}\n                disableRipple>\n                Удалить программу\n            </Button>\n\n            <AddButton text=\"Сохранить\" onClick={props.onSave} />\n        </Box>\n    </div>\n}\n \nexport default TraningProgramInfo;","import React from 'react';\nimport { Card as MuiCard, CardActionArea, CardContent, CardHeader, styled, Typography } from \"@mui/material\"\nimport { ModalTypeInfo } from '../Constants';\nimport { useTheme } from '@emotion/react';\n\n\nconst Card = styled((props) => (\n    <MuiCard sx={{ display: \"flex\", minHeight: \"180px\" }} {...props} />\n))(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light\n}))\n\nconst TraningProgramCard = (props) => {\n\n    const theme = useTheme();\n\n    return <Card\n        onClick={(e) => props.onClick(e, ModalTypeInfo, props.item)}\n        sx={{\n            \n        }}>\n        <CardActionArea>\n            <CardHeader title={props.item.title}>\n            </CardHeader>\n            <CardContent>\n                <Typography variant='caption'>Кол-во упражнений: {props.item.exercises.length || 0}</Typography>\n            </CardContent>\n        </CardActionArea>\n    </Card>\n}\n\nexport default TraningProgramCard;","import { Grid } from '@mui/material';\nimport React from 'react';\nimport { GetTraningPrograms } from '../../api/TraningProgramAPI';\nimport TraningProgramCard from \"../program/TraningProgramCard\";\n\n\nconst TraningProgramList = (props) => {\n    return <Grid container spacing={2}>\n        {GetTraningPrograms().map((program, idx) => <Grid key={idx} item xs={12}>\n            <TraningProgramCard item={program} onClick={props.onClick}/>\n        </Grid>)}\n    </Grid>\n}\n \nexport default TraningProgramList;","import { Box } from '@mui/material';\nimport React, { useState } from 'react';\nimport { AddTraningProgram, RemoveTraningProgram, UpdateTraningProgram } from '../../api/TraningProgramAPI';\nimport AddButton from '../base/AddButton';\nimport Modal from '../base/Modal';\nimport { DefaultModalState, DefaultTraningProgram, ModalTypeAdd, ModalTypeInfo } from '../Constants';\nimport CreateTraningProgram from '../program/CreateTraningProgram';\nimport TraningProgramInfo from '../program/TraningProgramInfo';\nimport TraningProgramList from '../program/TraningProgramList';\n\nconst TraningProgramScene = (props) => {\n    const [modalInfo, setModalInfo] = useState(DefaultModalState);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const handleChangeItem = (e, field) => {\n        var item = selectedItem;\n        item[field] = e.target.value;\n        setSelectedItem({ ...item });\n    }\n\n    const removeItem = () => {\n        RemoveTraningProgram(selectedItem.id)\n        closeModal();\n    }\n\n    const closeModal = () => {\n        setModalInfo(DefaultModalState);\n        setSelectedItem(null)\n    }\n\n    const onChangeModal = (e, type, item) => {\n        if (modalInfo.open) {\n            closeModal();\n        } else {\n            setModalInfo({\n                open: true,\n                type: type,\n                title: type == ModalTypeAdd ? \"Создание программы\" : null\n            });\n            setSelectedItem({ ...item });\n        }\n    }\n\n    const saveItem = (e) => {\n        UpdateTraningProgram(selectedItem);\n        closeModal();\n    }\n\n    const addItem = (e) => {\n        AddTraningProgram(selectedItem);\n        closeModal();\n    }\n\n    const setExercises = (exercises) => {\n        setSelectedItem({...selectedItem, exercises: exercises})\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\",\n    }}>\n        <TraningProgramList onClick={onChangeModal}/>\n        <Modal\n            open={modalInfo.open}\n            onClose={(e) => onChangeModal(e, null, null)}\n            title={modalInfo.title}>\n            {modalInfo.type == ModalTypeInfo && <TraningProgramInfo\n                onChange={handleChangeItem}\n                item={selectedItem}\n                onRemove={removeItem}\n                onSave={saveItem}\n                setExercises={setExercises} />}\n            {modalInfo.type == ModalTypeAdd && <CreateTraningProgram\n                onChange={handleChangeItem}\n                item={selectedItem}\n                onSave={addItem}\n                setExercises={setExercises} />}\n        </Modal>\n\n\n        <AddButton text=\"Создать программу\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultTraningProgram)}/>\n\n\n    </Box>\n}\n \nexport default TraningProgramScene;","import React, { useState } from \"react\";\nimport './App.css';\nimport { AppBar, Box, Toolbar } from '@mui/material';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nimport { ThemeProvider, createTheme, useTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport ExercisesScene from \"./components/scenes/ExercisesScene\";\nimport TraningScene from \"./components/scenes/TraningScene\";\nimport Navigation from \"./components/base/Navigation\";\nimport { DefaultExercises, DefaultTraningPrograms, ExercisesGrouped } from \"./components/Constants\";\nimport TraningProgramScene from \"./components/scenes/TraningProgramScene\";\n\nconst darkTheme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EAE1DF\",\n      light: \"#f7f3f3\",\n      dark: \"#be9d9d\",\n      contrastText: \"#322E18\"\n    },\n    secondary: {\n      main: \"#545E56\",\n      light: \"#EAECEA\",\n      dark: \"#A9B1A9\"\n    },\n    background: {\n      default: \"#f7f3f3\"\n    }\n  },\n  shape: {\n    borderRadius: '8px'\n  },\n  typography: {\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  }\n});\n\nconst initExercises = () => {\n  if(localStorage.getItem(\"exercises\") == null)\n    localStorage.setItem(\"exercises\", JSON.stringify(DefaultExercises))\n  if(localStorage.getItem(\"traning_programs\") == null)\n    localStorage.setItem(\"traning_programs\", JSON.stringify(DefaultTraningPrograms))\n}\n\nfunction App() {\n\n  initExercises();\n\n  const [scene, setScene] = useState(\"program\")\n\n  const handleChange = (event, newValue) => {\n    setScene(newValue);\n  };\n\n  const theme = useTheme();\n\n  return (\n    <Box sx={{ display: 'flex', height: '100%', justifyContent: 'center', pb: 7, pt: 0}}>\n      <CssBaseline />\n      <ThemeProvider theme={darkTheme}>\n        <Box component={\"main\"} sx={{ p: 1, width: '100%' , height: '100%', overflowY: \"scroll\", pb: 10}}>\n          {scene == \"exercise\" && <ExercisesScene />}\n          {scene == \"traning\" && <TraningScene />}\n          {scene == \"program\" && <TraningProgramScene />}\n          <Navigation activeScene={scene} handleChange={handleChange}/>\n        </Box>\n      </ThemeProvider>\n    </Box>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}