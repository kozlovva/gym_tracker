{"version":3,"sources":["components/Constants.js","api/TraningProgramAPI.js","components/base/MainButton.js","components/base/Modal.js","api/ExercisesAPI.js","components/service/TraningProgramService.js","components/program/TraningProgramCard.js","api/WorkoutAPI.js","utils/DateUtils.js","components/service/WorkoutService.js","components/base/TextWithIcon.js","components/traning/TraningCard.js","components/base/DateSelector.js","components/scenes/TraningScene.js","components/exercise/ExerciseForm.js","components/exercise/CreateExercise.js","components/base/RemoveEntityButton.js","components/exercise/ExerciseInfo.js","components/exercise/ExerciseList.js","components/scenes/ExercisesScene.js","components/exercise/ExercisesSelector.js","components/base/AddSetButton.js","components/program/SetsTable.js","components/program/TraningProgramForm.js","components/program/CreateTraningProgram.js","components/program/TraningProgramInfo.js","components/program/TraningProgramList.tsx","components/scenes/TraningProgramScene.js","components/base/Navigation.js","components/base/Layout.js","components/traning/ChangeExercisesModal.js","components/traning/RejectWorkoutModal.js","components/traning/WorkoutInfo.js","components/scenes/TraningProcessScene.js","components/base/Chart.js","components/base/ChartCard.js","components/base/CountChart.js","components/base/MultilineChartCard.js","components/service/ProgressService.js","components/scenes/ProgressScene.js","components/scenes/DebugScene.js","components/scenes/AccountScene.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["MuscleGroupsInfo","BICEPS","locale","TRICEPS","QUADS","GLUTES","ABS","CHEST","SHOULDERS","HAMSTRINGS","FOREARMS","NECK","LATS","LOWER_BACK","MIDDLE_BACK","TRAPS","MuscleGroupsEnum","DefaultExercises","id","title","muscle","DefaultModalState","open","type","DefaultTraningPrograms","description","exercises","sets","repeats","weight","complited","GenerateProgramExercise","i","push","completed","GetTraningPrograms","items","localStorage","getItem","JSON","parse","SetTraningPrograms","traningPrograms","console","log","setItem","stringify","MainButton","_ref","_ref2","isBottom","onClick","text","sx","React","createElement","Box","position","width","bottom","left","right","pl","pr","_defineProperty","elevation","Button","variant","fullWidth","color","_objectSpread","p","Transition","forwardRef","props","ref","Slide","Object","assign","direction","Modal","Dialog","TransitionComponent","PaperProps","height","m","borderBottomRightRadius","borderBottomLeftRadius","DialogTitle","pb","IconButton","aria-label","onClose","top","theme","palette","grey","CloseIcon","DialogContent","children","GetExercises","SetExercises","GetExercisesByMuscle","filter","exercise","GetExerciseById","find","e","GetTraningProgramById","TraningProgramCard","useTheme","muscleGroups","program","res","_toConsumableArray","Set","map","item","GetUniqueMuscleGroups","join","Paper","display","minHeight","flexDirection","flexGrow","withCount","Typography","length","alignItems","GetWorkouts","SetWorkouts","PadTo2Digits","num","toString","padStart","FormatDate","date","getFullYear","getUTCMonth","getUTCDate","MinutesBetweenDates","from","to","concat","Math","floor","getTime","DatesIsEquals","dateLeft","dateRight","CreateWorkout","selectedProgram","traning","uuidv4","notes","traningProgramId","duration","startAt","endAt","status","rejectCause","volume","progress","Date","set","GetWorkoutById","ById","SaveWorkout","workout","IsNew","IsActive","IsRejected","CalcExerciseVolume","workoutExercise","reduce","sum","CalcProgressInPercent","countOfSets","GetWorkoutSetsCount","completedSets","result","CalcCompletedSets","parseInt","toFixed","TextWithIcon","justifyContent","icon","gutterBottom","mr","ml","mb","lineHeight","animation","keyframes","_templateObject","_taggedTemplateLiteral","StyledCard","styled","Card","backgroundSize","CustomCard","isActive","_useState","useState","_useState2","_slicedToArray","updateProgress","useEffect","backgroundImage","CardActionArea","CardHeader","CardActions","flex","CalendarMonthIcon","AccessTimeIcon","LinearProgress","value","TraningCard","DateSelector","startDaysCount","endDaysCount","selectedDate","onSelectDate","cellRefs","useRef","sliderRef","selectedDateRef","days","now","buffer","subDays","addDays","GetDaysByRange","triggerElementId","updateTriggerElementId","current","alignWeek","element","getDay","triggerElement","document","getElementById","offsetLeft","scrollTo","overflowX","whiteSpace","flexFlow","idx","key","index","el","onTouchEnd","onScroll","replace","borderRadius","backgroundColor","secondary","dark","getDate","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","EmptyResult","TraningScene","todayTranings","setTodayTranings","_useState3","_useState4","traningHistory","setTraningHistory","_useState5","_useState6","isOpen","setIsOpen","_useState7","_useState8","setSelectedDate","navigate","useNavigate","onStart","_asyncToGenerator","_callee","modaType","traningProgram","_context","navigateToWorkout","_x","_x2","_x3","apply","arguments","handleChangeOpen","onChangeModal","align","Grid","container","spacing","xs","Divider","light","mt","newDate","showCount","MenuProps","style","maxHeight","ITEM_HEIGHT","ExerciseFrom","TextField","onChange","label","pt","FormControl","InputLabel","Select","labelId","MenuItem","CreateExercise","flexWrap","onSave","RemoveEntityButton","disableRipple","ExerciseInfo","onRemove","Accordion","MuiAccordion","&:not(:last-child)","borderBottom","AccordionSummary","MuiAccordionSummary","expandIcon","ArrowForwardIosSharpIcon","fontSize","padding","primary","& .MuiAccordionSummary-expandIconWrapper.Mui-expanded","transform","& .MuiAccordionSummary-content","marginLeft","AccordionDetails","MuiAccordionDetails","_ref3","borderTop","ExerciseList","expanded","setExpanded","calcCount","CountExercisesByMuscle","panel","event","newExpanded","ExpandMoreIcon","aria-controls","Badge","showZero","badgeContent","zIndex","stopPropagation","onClickToExercise","textAlign","defaultModalState","ExercisesScene","modalInfo","setModalInfo","selectedItem","setSelectedItem","handleChangeExercise","field","target","closeModal","RemoveExercises","UpdateExercise","AddExercises","ExercisesSelector","endIcon","isSelected","CheckIcon","handleCheckItem","AddSetButton","size","SetsTable","handleChangeInput","handleChangeCompleted","addSet","disableWeigth","disableCompleted","infoMode","inputMode","TableContainer","Table","tableLayout","TableHead","TableRow","TableCell","TableBody","inputProps","Checkbox","disabled","checked","GenerateExercise","TraningProgramForm","selected","setSelected","setOpen","handleChangeRepeats","selectedExercises","setExercises","CreateTraningProgram","TraningProgramInfo","TraningProgramList","_ref$withCount","TraningProgramScene","handleChangeItem","RemoveTraningProgram","UpdateTraningProgram","AddTraningProgram","Navigation","BottomNavigation","activeScene","handleChange","showLabels","BottomNavigationAction","ListAltIcon","FitbitIcon","FitnessCenterIcon","QueryStatsIcon","Person","darkTheme","createTheme","main","contrastText","background","default","typography","fontFamily","Layout","scene","setScene","location","useLocation","path","pathname","substring","includes","CssBaseline","ThemeProvider","component","overflowY","Outlet","newValue","ChangeExercisesModal","onSaveExercises","RejectWorkoutModal","rejectWorkout","FormLabel","RadioGroup","aria-labelledby","FormControlLabel","control","Radio","WorkoutInfo","gap","WorkoutProcessScene","workoutId","useParams","updateWorkout","updateTraningProgram","_useState9","_useState10","rejectState","updateRejectState","onCloseReject","getTargetExerciseById","updateWorkoutFilling","cause","RejectWorkout","CompleteWorkout","CustomTooltip","payload","Chart","data","dataKey","ResponsiveContainer","AreaChart","Tooltip","y","content","wrapperStyle","outlineColor","Area","stroke","fill","strokeWidth","ChartCard","maxValue","CountChart","count","fade","Fade","in","timeout","selectedMuscle","setsCount","MultilineChartCard","setSelectedMuscle","setsData","updateSetsData","newData","GetStatisticByPeriod","period","range","dateRange","setDate","GetDateRangeByPeriod","workouts","maxVolume","max","maxDuration","workoutCount","fullCompleteCount","rejectedCount","tonnageData","durationData","GetSetsData","allExercisesByMuscleIds","targetSets","flatMap","ProgressScene","updatePeriod","updateFade","statistic","updateStatistic","ToggleButtonGroup","setTimeout","exclusive","ToggleButton","lineDataKeys","DebugScene","window","reload","AccountScene","navigation","router","createHashRouter","createRoutesFromElements","Route","App","RouterProvider","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.3e8a2872.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const MuscleGroupsInfo = {\r\n    \"BICEPS\": {\r\n        \"locale\": \"Бицепс\"\r\n    },\r\n    \"TRICEPS\": {\r\n        \"locale\": \"Трицепс\"\r\n    },\r\n    \"QUADS\": {\r\n        \"locale\": \"Передняя поверхность бедра\"\r\n    },\r\n    \"GLUTES\": {\r\n        \"locale\": \"Ягодицы\"\r\n    },\r\n    \"ABS\": {\r\n        \"locale\": \"Пресс\"\r\n    },\r\n    \"CHEST\": {\r\n        \"locale\": \"Грудь\"\r\n    },\r\n    \"SHOULDERS\": {\r\n        \"locale\": \"Плечи\"\r\n    },\r\n    \"HAMSTRINGS\": {\r\n        \"locale\": \"Задняя поверхность бедра\"\r\n    },\r\n    \"FOREARMS\": {\r\n        \"locale\": \"Предплечья\"\r\n    },\r\n    \"NECK\": {\r\n        \"locale\": \"Шея\"\r\n    },\r\n    \"LATS\": {\r\n        \"locale\": \"Широчайшие\"\r\n    },\r\n    \"LOWER_BACK\": {\r\n        \"locale\": \"Разгибатели спины/Поясница\"\r\n    },\r\n    \"MIDDLE_BACK\": {\r\n        \"locale\": \"Середина спины\"\r\n    },\r\n    \"TRAPS\": {\r\n        \"locale\": \"Трапеции\"\r\n    }\r\n};\r\n\r\nexport const MuscleGroupsEnum = [\r\n    \"BICEPS\",\r\n    \"TRICEPS\",\r\n    \"QUADS\",\r\n    \"GLUTES\",\r\n    \"ABS\",\r\n    \"CHEST\",\r\n    \"SHOULDERS\",\r\n    \"HAMSTRINGS\",\r\n    \"FOREARMS\",\r\n    \"NECK\",\r\n    \"LATS\",\r\n    \"LOWER_BACK\",\r\n    \"MIDDLE_BACK\",\r\n    \"TRAPS\"\r\n];\r\n\r\nexport const DefaultExercises = [\r\n    {\r\n        \"id\": \"1\",\r\n        \"title\": \"Подъем штанги на бицепс\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"18\",\r\n        \"title\": \"Подтягивания обратным хватом\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"19\",\r\n        \"title\": \"Подъем гантелей в скамье Скотта\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"15\",\r\n        \"title\": \"Молотки с гантелями\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"2\",\r\n        \"title\": \"Французский жим со штангой\",\r\n        \"muscle\": \"TRICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"20\",\r\n        \"title\": \"Французский со штангой\",\r\n        \"muscle\": \"TRICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"21\",\r\n        \"title\": \"Жим лежа узким хватом\",\r\n        \"muscle\": \"TRICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"22\",\r\n        \"title\": \"Разгибания на трицепс в верхнем блоке\",\r\n        \"muscle\": \"TRICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"3\",\r\n        \"title\": \"Приседания со штангой\",\r\n        \"muscle\": \"QUADS\"\r\n    },\r\n    {\r\n        \"id\": \"23\",\r\n        \"title\": \"Жим ногами\",\r\n        \"muscle\": \"QUADS\"\r\n    },\r\n    {\r\n        \"id\": \"24\",\r\n        \"title\": \"Разгибания в блоке на квадрицепс\",\r\n        \"muscle\": \"QUADS\"\r\n    },\r\n    {\r\n        \"id\": \"25\",\r\n        \"title\": \"Выпады с гантелей\",\r\n        \"muscle\": \"QUADS\"\r\n    },\r\n    {\r\n        \"id\": \"4\",\r\n        \"title\": \"Отведения ноги в блоке\",\r\n        \"muscle\": \"GLUTES\"\r\n    },\r\n    {\r\n        \"id\": \"26\",\r\n        \"title\": \"Ягодичный мост\",\r\n        \"muscle\": \"GLUTES\"\r\n    },\r\n    {\r\n        \"id\": \"27\",\r\n        \"title\": \"Глубокие приседания с широкой постановкой ног\",\r\n        \"muscle\": \"GLUTES\"\r\n    },\r\n    {\r\n        \"id\": \"28\",\r\n        \"title\": \"Отведение ног в стороны в тренажере\",\r\n        \"muscle\": \"GLUTES\"\r\n    },\r\n    {\r\n        \"id\": \"5\",\r\n        \"title\": \"Скручивания в римском стуле\",\r\n        \"muscle\": \"ABS\"\r\n    },\r\n    {\r\n        \"id\": \"29\",\r\n        \"title\": \"Скручивания в висе на перекладине\",\r\n        \"muscle\": \"ABS\"\r\n    },\r\n    {\r\n        \"id\": \"6\",\r\n        \"title\": \"Жим со штангой лежа\",\r\n        \"muscle\": \"CHEST\"\r\n    },\r\n    {\r\n        \"id\": \"30\",\r\n        \"title\": \"Жим со штангой лежа на наклонной скамье\",\r\n        \"muscle\": \"CHEST\"\r\n    },\r\n    {\r\n        \"id\": \"31\",\r\n        \"title\": \"Бабочка\",\r\n        \"muscle\": \"CHEST\"\r\n    },\r\n    {\r\n        \"id\": \"7\",\r\n        \"title\": \"Махи с шагтелями в стороны\",\r\n        \"muscle\": \"SHOULDERS\"\r\n    },\r\n    {\r\n        \"id\": \"16\",\r\n        \"title\": \"Армейский жим\",\r\n        \"muscle\": \"SHOULDERS\"\r\n    },\r\n    {\r\n        \"id\": \"17\",\r\n        \"title\": \"Жим гантелей сидя\",\r\n        \"muscle\": \"SHOULDERS\"\r\n    },\r\n    {\r\n        \"id\": \"8\",\r\n        \"title\": \"Румынская тяга\",\r\n        \"muscle\": \"HAMSTRINGS\"\r\n    },\r\n    {\r\n        \"id\": \"9\",\r\n        \"title\": \"Обезьяний хват\",\r\n        \"muscle\": \"FOREARMS\"\r\n    },\r\n    {\r\n        \"id\": \"10\",\r\n        \"title\": \"Скричивания шеи с блином\",\r\n        \"muscle\": \"NECK\"\r\n    },\r\n    {\r\n        \"id\": \"11\",\r\n        \"title\": \"Подтягивания\",\r\n        \"muscle\": \"LATS\"\r\n    },\r\n    {\r\n        \"id\": \"12\",\r\n        \"title\": \"Экстензия\",\r\n        \"muscle\": \"LOWER_BACK\"\r\n    },\r\n    {\r\n        \"id\": \"13\",\r\n        \"title\": \"Тяга нижнего блока\",\r\n        \"muscle\": \"MIDDLE_BACK\"\r\n    },\r\n    {\r\n        \"id\": \"14\",\r\n        \"title\": \"Шраги с гантелями\",\r\n        \"muscle\": \"TRAPS\"\r\n    }\r\n]\r\n\r\nexport const ModalTypeInfo = \"INFO\";\r\nexport const ModalTypeAdd = \"ADD\";\r\n\r\nexport const DefaultExercise = () => {\r\n    return {\r\n        \"id\": uuidv4(),\r\n        title: \"\",\r\n        muscle: \"BICEPS\"\r\n    }\r\n}\r\n\r\nexport const DefaultModalState = {\r\n    open: false,\r\n    type: null,\r\n    title: null\r\n};\r\n\r\nexport const DefaultTraningProgram = () => {\r\n    return {\r\n        \"id\": uuidv4(),\r\n        \"title\": \"\",\r\n        \"description\": \"\",\r\n        \"exercises\": []\r\n    }\r\n}\r\n\r\nexport const DefaultTraningPrograms = [\r\n    {\r\n        \"id\": \"1\",\r\n        \"title\": \"Грудь-бицепс\",\r\n        \"description\": \"\",\r\n        \"exercises\": [\r\n            {\r\n                \"id\": \"1\",\r\n                \"sets\": [\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    },\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    },\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    },\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n\r\n]\r\n\r\nexport const DefaultTraning = () => {\r\n    return {\r\n        \"id\": uuidv4(),\r\n        \"notes\": \"\",\r\n        \"traningProgramId\": \"\",\r\n        \"duration\": \"\",\r\n        \"startAt\": \"\",\r\n        \"endAt\": \"\",\r\n        \"exercises\": [],\r\n        \"status\": \"ACTIVE\",\r\n        \"rejectCause\": \"\",\r\n        \"volume\": 0,\r\n        \"progress\": 0\r\n    }\r\n}\r\n\r\nexport const Statuses =\r\n{\r\n    NEW: {\r\n        locale: \"Новая\"\r\n    },\r\n    ACTIVE: {\r\n        locale: \"В процессе\"\r\n    },\r\n    COMPLETED: {\r\n        locale: \"Завершена\"\r\n    },\r\n    REJECTED: {\r\n        locale: \"Отменена\"\r\n    }\r\n}\r\n\r\n\r\nexport const DefaultSet = () => {\r\n    return {\r\n        repeats: 10,\r\n        weight: 0,\r\n        completed: false\r\n    }\r\n}\r\n\r\nexport const GenerateProgramExercise = id => {\r\n    let setCount = 4;\r\n    let sets = [];\r\n    for (let i = 0; i < setCount; i++) {\r\n        sets.push(DefaultSet())\r\n    }\r\n    return {\r\n        id: id,\r\n        sets: sets\r\n    }\r\n}\r\n\r\nexport const Weekdays = [\r\n    {\r\n        id: 0,\r\n        locale: \"Пн\"\r\n    },\r\n    {\r\n        id: 1,\r\n        locale: \"Вт\"\r\n    },\r\n    {\r\n        id: 2,\r\n        locale: \"Ср\"\r\n    },\r\n    {\r\n        id: 3,\r\n        locale: \"Чт\"\r\n    },\r\n    {\r\n        id: 4,\r\n        locale: \"Пт\"\r\n    },\r\n    {\r\n        id: 5,\r\n        locale: \"Сб\"\r\n    },\r\n    {\r\n        id: 6,\r\n        locale: \"Вск\"\r\n    }\r\n]","export const GetTraningPrograms = () => {\r\n    var items = localStorage.getItem(\"traning_programs\");\r\n    return items != null ? JSON.parse(items) : [];\r\n}\r\n\r\nexport const SetTraningPrograms = (traningPrograms) => {\r\n    console.log(\"Update traning program in local storage...\")\r\n    localStorage.setItem(\"traning_programs\", JSON.stringify(traningPrograms))\r\n}\r\n\r\nexport const AddTraningProgram = exercise => {\r\n    const items = GetTraningPrograms();\r\n    items.push(exercise);\r\n    SetTraningPrograms(items);\r\n}\r\n\r\nexport const RemoveTraningProgram = id => {\r\n    const items = GetTraningPrograms().filter(exercise => exercise.id != id);\r\n    SetTraningPrograms(items);\r\n}\r\n\r\nexport const UpdateTraningProgram = exercise => {\r\n    const items = GetTraningPrograms().map(e => {\r\n        if(e.id == exercise.id) {\r\n            \r\n            return exercise;\r\n        }\r\n\r\n        return e;\r\n    })\r\n    SetTraningPrograms(items);\r\n}\r\n\r\n\r\nexport const GetTraningProgramById = id => {\r\n    const exercises = GetTraningPrograms();\r\n    return exercises.find(e => e.id == id); \r\n}","import React from \"react\";\r\nimport { Box, Button } from \"@mui/material\"\r\n\r\nconst MainButton = ({isBottom, onClick, text, sx}) => {\r\n    return <Box sx={{\r\n        position: 'fixed', \r\n        width: \"100%\", \r\n        bottom: isBottom ? 0 : 40, \r\n        left: 0, \r\n        right: 0, \r\n        pl: 1, \r\n        pr: 1,\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }} elevation={3}>\r\n        <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"secondary\"\r\n            sx={{\r\n                p: 2,\r\n                ...sx\r\n            }}\r\n            onClick={onClick}>\r\n            {text}\r\n        </Button>\r\n    </Box>\r\n}\r\n\r\nexport default MainButton;","import { Dialog, DialogContent, DialogTitle, IconButton, Slide, Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst Transition = React.forwardRef((props, ref) => {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Modal = (props) => {\r\n    return <Dialog\r\n        open={props.open}\r\n        TransitionComponent={Transition}\r\n        PaperProps={{\r\n            sx: {\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                m: 0,\r\n                position: \"fixed\",\r\n                bottom: 0,\r\n                borderBottomRightRadius: 0,\r\n                borderBottomLeftRadius: 0\r\n            }\r\n        }}>\r\n        <DialogTitle sx={{pb:4}}>\r\n            {props.title}\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                onClick={props.onClose}\r\n                sx={{\r\n                    position: 'absolute',\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                }}\r\n            >\r\n                <CloseIcon />\r\n            </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent sx={{}}>\r\n            {props.children}\r\n        </DialogContent>\r\n    </Dialog>\r\n}\r\n\r\nexport default Modal;","export const GetExercises = () => {\r\n    var items = localStorage.getItem(\"exercises\");\r\n    return JSON.parse(items);\r\n}\r\n\r\nexport const SetExercises = exercises => {\r\n    console.log(\"Update exercises in local storage...\")\r\n    localStorage.setItem(\"exercises\", JSON.stringify(exercises))\r\n}\r\n\r\nexport const GetExercisesByMuscle = muscle => {\r\n    const items = GetExercises();\r\n    return items.filter(exercise => exercise.muscle == muscle);\r\n}\r\n\r\nexport const AddExercises = exercise => {\r\n    const items = GetExercises();\r\n    items.push(exercise);\r\n    SetExercises(items);\r\n}\r\n\r\nexport const RemoveExercises = id => {\r\n    const items = GetExercises().filter(exercise => exercise.id != id);\r\n    SetExercises(items);\r\n}\r\n\r\nexport const UpdateExercise = exercise => {\r\n    const items = GetExercises().map(e => {\r\n        if(e.id == exercise.id) {\r\n            return exercise;\r\n        }\r\n\r\n        return e;\r\n    })\r\n    SetExercises(items);\r\n}\r\n\r\nexport const CountExercisesByMuscle = muscle => {\r\n    return GetExercisesByMuscle(muscle).length;\r\n}\r\n\r\nexport const GetExerciseById = id => {\r\n    const exercises = GetExercises();\r\n    return exercises.find(e => e.id == id); \r\n}","import { GetExerciseById } from \"../../api/ExercisesAPI\";\r\nimport { GetTraningPrograms } from \"../../api/TraningProgramAPI\"\r\n\r\nexport const GetTraningProgramById = id => {\r\n    return GetTraningPrograms().find(e => e.id == id);\r\n}\r\n\r\nexport const GetUniqueMuscleGroups = program => {\r\n    const res = [...new Set(program.exercises.map(item => {\r\n        const exercise = GetExerciseById(item.id);\r\n        return exercise.muscle;\r\n    }))]\r\n    console.log(res);\r\n    return res;\r\n}","import React from 'react';\r\nimport { Paper, Typography, useTheme } from \"@mui/material\"\r\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\r\nimport { Box } from '@mui/system';\r\nimport { GetUniqueMuscleGroups } from \"../service/TraningProgramService\"\r\n\r\nconst TraningProgramCard = (props) => {\r\n    const theme = useTheme();\r\n    const muscleGroups = GetUniqueMuscleGroups(props.item)\r\n        .map(item => MuscleGroupsInfo[item] ? MuscleGroupsInfo[item].locale : '')\r\n        .join();\r\n    return <Paper\r\n        sx={{\r\n            display: \"flex\",\r\n            minHeight: \"160px\",\r\n            flexDirection: 'column',\r\n            p: 1,\r\n            ...props.sx\r\n        }}\r\n        onClick={(e) => props.onClick(e, ModalTypeInfo, props.item)}>\r\n        <Box sx={{ flexGrow: 4 }}>\r\n            {props.withCount && <Typography variant='caption' color=\"secondary\">Упражнений {props.item.exercises.length || 0}</Typography>}\r\n        </Box>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <Typography>{props.item.title}</Typography>\r\n        </Box>\r\n        <Box sx={{ flexGrow: 1, display: 'flex', alignItems: \"end\" }}>\r\n            <Typography variant='caption' color=\"secondary\">{muscleGroups}</Typography>\r\n        </Box>\r\n    </Paper>\r\n}\r\n\r\nexport default TraningProgramCard;","const DatabaseName = \"workout\";\r\n\r\nexport const GetWorkouts = () => {\r\n    var items = localStorage.getItem(DatabaseName);\r\n    return items ? JSON.parse(items) : [];\r\n}\r\n\r\n\r\nexport const SetWorkouts = items => {\r\n    localStorage.setItem(DatabaseName, JSON.stringify(items))\r\n}\r\n\r\nexport const GetWorkoutById = id => {\r\n    return GetWorkouts().find(e => e.id == id);\r\n}","import { addDays, subDays } from \"date-fns\";\r\n\r\nconst PadTo2Digits = (num) => {\r\n    return num.toString().padStart(2, '0');\r\n}\r\n\r\nexport const FormatDateTime = (date) => {\r\n    return (\r\n        [\r\n            date.getFullYear(),\r\n            PadTo2Digits(date.getUTCMonth() + 1),\r\n            PadTo2Digits(date.getUTCDate()),\r\n        ].join('-') +\r\n        ' ' +\r\n        [\r\n            PadTo2Digits(date.getUTCHours()),\r\n            PadTo2Digits(date.getUTCMinutes()),\r\n            PadTo2Digits(date.getUTCSeconds()),\r\n        ].join(':')\r\n    );\r\n}\r\n\r\nexport const FormatDate = (date) => {\r\n    return (\r\n        [\r\n            date.getFullYear(),\r\n            PadTo2Digits(date.getUTCMonth() + 1),\r\n            PadTo2Digits(date.getUTCDate()),\r\n        ].join('-')\r\n    );\r\n}\r\n\r\nexport const MinutesBetweenDates = (from, to) => {\r\n    console.log(`From ${from} - to ${to}`)\r\n    return Math.floor((to.getTime() - from.getTime()) / 1000 / 60);\r\n}\r\n\r\nexport const GetDateRangeByPeriod = period => {\r\n    const date = new Date();\r\n    if (period == \"week\") {\r\n        date.setDate(date.getDate() - 7)\r\n    }\r\n    if (period == \"year\") {\r\n        date.setDate(date.getDate() - 365)\r\n    }\r\n    if (period == \"month\") {\r\n        date.setDate(date.getDate() - 30)\r\n    }\r\n\r\n    return { to: new Date(), from: date }\r\n}\r\n\r\nexport const GetDaysByRange = (startDaysCount, endDaysCount) => {\r\n    const now = new Date(); // get current date\r\n    const buffer = subDays(now, startDaysCount)\r\n\r\n    const result = [];\r\n\r\n    for(let i = 0; i<= startDaysCount + endDaysCount; i++) {\r\n        result.push(addDays(buffer, i))\r\n    }\r\n\r\n    return result;\r\n    \r\n}\r\n\r\nexport const DatesIsEquals = (dateLeft, dateRight) => {\r\n    return FormatDate(dateLeft) == FormatDate(dateRight);\r\n}","import { GetWorkouts, SetWorkouts, GetWorkoutById as ById } from \"../../api/WorkoutAPI\";\r\nimport { DatesIsEquals, FormatDate, MinutesBetweenDates } from \"../../utils/DateUtils\";\r\nimport { DefaultTraning } from \"../Constants\"\r\n\r\nexport const CreateWorkout = (selectedProgram) => {\r\n    const traning = DefaultTraning();\r\n    traning.traningProgramId = selectedProgram.id;\r\n    traning.startAt = new Date();\r\n\r\n    traning.exercises = selectedProgram.exercises.map(exercise => {\r\n\r\n        return {\r\n            id: exercise.id,\r\n            sets: exercise.sets.map(set => {\r\n                return {\r\n                    repeats: set.repeats,\r\n                    weight: 0,\r\n                    completed: false\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    const items = GetWorkouts();\r\n    items.push(traning);\r\n    SetWorkouts(items);\r\n    return traning;\r\n}\r\n\r\nexport const GetTodayActiveWorkouts = () => {\r\n    return GetWorkouts()\r\n        .filter(e => IsActive(e))\r\n}\r\n\r\nexport const GetWorkoutHistory = (date) => {\r\n    return GetWorkouts()\r\n        .filter(e => {\r\n            if (!IsActive(e) && DatesIsEquals(new Date(e.startAt), date))\r\n                return true;\r\n\r\n            return false;\r\n        })\r\n}\r\n\r\nexport const GetWorkoutById = id => {\r\n    return ById(id);\r\n}\r\n\r\nexport const SaveWorkout = workout => {\r\n    const items = GetWorkouts();\r\n    SetWorkouts(items.map(item => {\r\n        return item.id == workout.id ? workout : item\r\n    }));\r\n}\r\n\r\nexport const StartWorkout = workout => {\r\n    workout.startAt = new Date();\r\n    workout.status = \"ACTIVE\";\r\n    SaveWorkout(workout)\r\n    return workout;\r\n}\r\n\r\nexport const CompleteWorkout = workout => {\r\n    workout.endAt = new Date();\r\n    workout.status = \"COMPLETED\";\r\n    workout.duration = MinutesBetweenDates(new Date(workout.startAt), workout.endAt);\r\n    workout.volume = workout.exercises\r\n        .reduce((result, exercise) => result + CalcExerciseVolume(exercise), 0);\r\n    workout.progress = CalcProgressInPercent(workout);\r\n    SaveWorkout(workout)\r\n    return workout;\r\n}\r\n\r\nexport const RejectWorkout = (workout, cause) => {\r\n    workout.endAt = new Date();\r\n    workout.status = \"REJECTED\";\r\n    workout.rejectCause = cause;\r\n    workout.duration = MinutesBetweenDates(new Date(workout.startAt), workout.endAt);\r\n    workout.volume = workout.exercises\r\n        .reduce((result, exercise) => result + CalcExerciseVolume(exercise), 0);\r\n    workout.progress = CalcProgressInPercent(workout);\r\n    SaveWorkout(workout)\r\n    return workout;\r\n}\r\n\r\nexport const IsNew = workout => {\r\n    return workout.status == \"NEW\";\r\n}\r\n\r\nexport const IsActive = workout => {\r\n    return workout.status == \"ACTIVE\";\r\n}\r\n\r\nexport const IsCompleted = workout => {\r\n    return workout.status == \"COMPLETED\";\r\n}\r\n\r\nexport const IsRejected = workout => {\r\n    return workout.status == \"REJECTED\";\r\n}\r\n\r\nexport const CalcExerciseVolume = workoutExercise => {\r\n    let result = workoutExercise.sets\r\n        .filter(set => set.completed)\r\n        .reduce((sum, set) => sum + set.repeats * set.weight, 0);\r\n    return result;\r\n}\r\n\r\nexport const CalcProgressInPercent = workout => {\r\n    let countOfSets = GetWorkoutSetsCount(workout);\r\n    let completedSets = workout.exercises.reduce((result, exercise) => result + CalcCompletedSets(exercise), 0)\r\n    return parseInt(((completedSets / countOfSets) * 100).toFixed(0))\r\n}\r\n\r\nexport const CalcCompletedSets = workoutExercise => {\r\n    return workoutExercise.sets.filter(set => set.completed).length\r\n}\r\n\r\nexport const GetWorkoutSetsCount = workout => {\r\n    return workout.exercises.reduce((result, exercise) => result + exercise.sets.length, 0)\r\n}\r\n\r\nexport const GetWorkoutsByDateRange = range => {\r\n    return GetWorkouts()\r\n        .filter(workout => {\r\n            const endAt = new Date(workout.endAt);\r\n            if (endAt >= range.from && endAt <= range.to) {\r\n                return workout;\r\n            }\r\n        })\r\n}","import { Box, Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst TextWithIcon = (props) => {\r\n    return <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n        {props.icon}\r\n        <Typography variant=\"caption\" gutterBottom sx={{ mr: 1, ml: 1, mb: 0, lineHeight: 0 }}>{props.text}</Typography>\r\n    </Box>\r\n}\r\n\r\nexport default TextWithIcon;","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardActionArea, CardActions, CardHeader, LinearProgress, styled, useTheme } from \"@mui/material\";\r\nimport { Box, keyframes } from '@mui/system';\r\n\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport TextWithIcon from '../base/TextWithIcon';\r\nimport { FormatDate } from '../../utils/DateUtils';\r\nimport { CalcProgressInPercent } from \"../service/WorkoutService\"\r\n\r\nconst animation = keyframes`\r\n0% {\r\n    background-position: 0% 50%;\r\n}\r\n50% {\r\n    background-position: 100% 50%;\r\n}\r\n100% {\r\n    background-position: 0% 50%;\r\n}\r\n`\r\n\r\nconst TraningCard = (props) => {\r\n    return <CustomCard {...props} />\r\n}\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n    animation: `${animation} 5s ease infinite`,\r\n    backgroundSize: \"200% 100%\"\r\n}))\r\n\r\nconst CustomCard = props => {\r\n    const theme = useTheme();\r\n    const isActive = props.status === \"ACTIVE\";\r\n    const [progress, updateProgress] = useState(0)\r\n    useEffect(() => {\r\n        if (isActive)\r\n            updateProgress(CalcProgressInPercent(props));\r\n    }, [props])\r\n\r\n    console.log(\"progress\", progress)\r\n    return <StyledCard\r\n        onClick={props.onClick}\r\n        sx={{\r\n            display: 'flex',\r\n            backgroundImage: isActive ? 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)' : 'none',\r\n            ...props.sx\r\n        }}>\r\n        <CardActionArea>\r\n            <CardHeader title={props.title}>\r\n            </CardHeader>\r\n            <CardActions sx={{ justifyContent: \"flex-end\", p: 2 }}>\r\n                <Box sx={{ display: 'flex', flexDirection: \"column\", flex: \"1 0 auto\" }}>\r\n                </Box>\r\n                {!isActive && <Box sx={{ display: \"flex\", alignItems: 'center', pl: 1 }}>\r\n                    <TextWithIcon\r\n                        icon={<CalendarMonthIcon />}\r\n                        text={FormatDate(new Date(props.startAt))} />\r\n                    <TextWithIcon\r\n                        icon={<AccessTimeIcon />}\r\n                        text={`${props.duration} мин.`} />\r\n                </Box>}\r\n                {isActive && <Box sx={{ width: \"100%\", position: \"absolute\", bottom: 0, right: 0 }}>\r\n                    <LinearProgress variant=\"determinate\" value={progress} sx={{\r\n                        height: 16\r\n                    }} />\r\n                </Box>}\r\n\r\n            </CardActions>\r\n        </CardActionArea>\r\n    </StyledCard>\r\n}\r\n\r\nexport default TraningCard;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Box } from \"@mui/system\";\r\nimport { useTheme } from '@emotion/react';\r\nimport { Typography } from '@mui/material';\r\nimport { DatesIsEquals, GetDaysByRange } from '../../utils/DateUtils';\r\n\r\nconst id_prefix = \"calendar-element\"\r\n\r\nconst DateSelector = ({ startDaysCount, endDaysCount, selectedDate, onSelectDate }) => {\r\n    const cellRefs = useRef([]);\r\n    const sliderRef = useRef(null)\r\n    const selectedDateRef = useRef(null)\r\n    const theme = useTheme();\r\n    const days = GetDaysByRange(startDaysCount, endDaysCount);\r\n\r\n    const [triggerElementId, updateTriggerElementId] = useState(null)\r\n\r\n    useEffect(() => {\r\n        updateTriggerElementId(selectedDateRef.current.id)\r\n    }, [selectedDate])\r\n\r\n    useEffect(() => {\r\n        if (triggerElementId != null)\r\n            alignWeek();\r\n    }, [triggerElementId])\r\n\r\n    const alignWeek = () => {\r\n        const element = selectedDate.getDay() == 0 ? cellRefs.current[6] : cellRefs.current[selectedDate.getDay() - 1]\r\n        const triggerElement = document.getElementById(triggerElementId);\r\n        console.log(cellRefs)\r\n        console.log(triggerElement.offsetLeft)\r\n        sliderRef.current.scrollTo(triggerElement.offsetLeft - element.offsetLeft, 0)\r\n    }\r\n\r\n    const onScroll = () => {\r\n        const prevTrigger = cellRefs.current[0];\r\n        const triggerElement = document.getElementById(triggerElementId);\r\n        const index = triggerElementId.replace(/\\D/g, \"\");\r\n\r\n    }\r\n\r\n    return <div>\r\n        <Box sx={{\r\n            p: 0,\r\n            display: 'flex',\r\n            width: \"100%\",\r\n            overflowX: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            flexDirection: 'column',\r\n            flexFlow: \"row wrap\"\r\n        }}>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-around',\r\n                alignItems: 'center',\r\n                width: \"100%\"\r\n            }}>\r\n                {[\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\", \"Вск\"].map((date, idx) => <Box key={idx} sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n                    width: \"calc(100% / 7)\",\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}>\r\n                    <Typography color=\"secondary\">{date}</Typography>\r\n                </Box>)}\r\n            </Box>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-around',\r\n                alignItems: 'center',\r\n                width: \"100%\",\r\n                height: \"50px\",\r\n                position: \"relative\"\r\n            }}>\r\n                {[1, 2, 3, 4, 5, 6, 7].map((index, idx) => <Box ref={el => cellRefs.current[idx] = el} key={idx} sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n                    width: \"calc(100% / 7)\",\r\n                    height: \"100%\",\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}>\r\n                </Box>)}\r\n                <Box ref={sliderRef}\r\n                    onTouchEnd={alignWeek}\r\n                    onScroll={onScroll}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        bottom: 0,\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        overflowX: \"scroll\",\r\n                    }}>\r\n                    {days.map((date, index) => <Box\r\n                        id={`${id_prefix}-${index}`}\r\n                        ref={(el) => {\r\n                            if (DatesIsEquals(selectedDate, date))\r\n                                selectedDateRef.current = el\r\n                        }}\r\n                        key={index}\r\n                        sx={{\r\n                            display: 'inline-block',\r\n                            p: 1,\r\n                            width: \"calc(100% / 7)\",\r\n                            height: \"100%\",\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                        }}\r\n                        onClick={() => onSelectDate(date)}>\r\n                        <Box\r\n                            sx={{\r\n                                display: 'flex',\r\n                                height: \"100%\",\r\n                                justifyContent: 'center',\r\n                                alignItems: \"center\",\r\n                                borderRadius: \"50%\",\r\n                                backgroundColor: DatesIsEquals(selectedDate, date) ? theme.palette.secondary.dark : \"transient\"\r\n                            }}>\r\n                            <Typography color=\"secondary\" variant='caption'>{date.getDate()}</Typography>\r\n                        </Box>\r\n                    </Box>)}\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    </div>\r\n}\r\n\r\nexport default DateSelector;","import { Box, Divider, Grid, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GetTraningPrograms } from \"../../api/TraningProgramAPI\";\r\nimport MainButton from \"../base/MainButton\";\r\nimport Modal from \"../base/Modal\";\r\nimport TraningProgramCard from \"../program/TraningProgramCard\";\r\nimport { CreateWorkout, GetTodayActiveWorkouts, GetWorkoutHistory } from \"../service/WorkoutService\";\r\nimport { GetTraningProgramById } from \"../service/TraningProgramService\";\r\nimport TraningCard from \"../traning/TraningCard\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DateSelector from \"../base/DateSelector\";\r\n\r\nconst EmptyResult = () => <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\r\n    <Typography variant=\"caption\">Пока тренировок нет</Typography>\r\n</Box>\r\n\r\nexport const TraningScene = props => {\r\n    const [todayTranings, setTodayTranings] = useState([])\r\n    const [traningHistory, setTraningHistory] = useState([])\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedDate, setSelectedDate] = useState(new Date())\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const todayTranings = GetTodayActiveWorkouts();\r\n        setTodayTranings(todayTranings);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(selectedDate)\r\n        const traningHistory = GetWorkoutHistory(selectedDate);\r\n        setTraningHistory(traningHistory)\r\n    }, [selectedDate])\r\n\r\n    const onStart = async (e, modaType, traningProgram) => {\r\n        const workout = await CreateWorkout(traningProgram);\r\n        navigateToWorkout(workout.id)\r\n    }\r\n\r\n    const handleChangeOpen = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const onChangeModal = () => {\r\n        if (isOpen) {\r\n            closeModal();\r\n        } else {\r\n            handleChangeOpen();\r\n        }\r\n    }\r\n\r\n    const navigateToWorkout = id => {\r\n        navigate(`/workout-process/${id}`)\r\n    }\r\n\r\n    const onSelectDate = newDate => {\r\n        setSelectedDate(newDate)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant='h6' align=\"center\">Мои тренировки</Typography>\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\r\n            <Typography>Активные</Typography>\r\n        </Box>\r\n        {todayTranings.length > 0\r\n            ? <Grid container spacing={2}>\r\n                {todayTranings.map((traning, idx) =>\r\n                    <Grid item key={idx} xs={12}>\r\n                        <TraningCard\r\n                            onClick={() => { navigateToWorkout(traning.id) }}\r\n                            title={GetTraningProgramById(traning.traningProgramId).title}\r\n                            {...traning}\r\n                            duration={traning.duration} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            : <EmptyResult />}\r\n\r\n        <Divider light sx={{ mt: 2, mb: 2 }}></Divider>\r\n\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\r\n            <Typography>История</Typography>\r\n        </Box>\r\n\r\n        <DateSelector startDaysCount={30} endDaysCount={30} selectedDate={selectedDate} onSelectDate={onSelectDate}/>\r\n\r\n        {traningHistory.length > 0\r\n            ? <Grid container spacing={2}>\r\n                {traningHistory.map((traning, idx) =>\r\n                    <Grid item key={idx} xs={12}>\r\n                        <TraningCard\r\n                            title={GetTraningProgramById(traning.traningProgramId).title}\r\n                            onClick={() => { navigateToWorkout(traning.id) }}\r\n                            {...traning}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            : <EmptyResult />}\r\n\r\n\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={() => onChangeModal(null)}\r\n            title=\"Выбери программу тренировок\">\r\n            <Grid container spacing={2}>\r\n                {GetTraningPrograms().map((item, idx) => <Grid item xs={12} key={idx}>\r\n                    <TraningProgramCard\r\n                        onClick={onStart}\r\n                        key={idx}\r\n                        item={item}\r\n                        showCount={false}\r\n                        sx={{ minHeight: \"80px\" }} />\r\n                </Grid>\r\n                )}\r\n            </Grid>\r\n\r\n\r\n        </Modal>\r\n\r\n        <MainButton text=\"Начать тренировку!\" onClick={onChangeModal} />\r\n    </div>\r\n}\r\n\r\nexport default TraningScene;","import { Box, FormControl, InputLabel, MenuItem, Select, TextField } from '@mui/material';\r\nimport React from 'react';\r\nimport { MuscleGroupsEnum } from '../Constants';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst ExerciseFrom = (props) => {\r\n    return <Box>\r\n        <TextField\r\n            onChange={(e) => { props.onChange(e, \"title\") }}\r\n            fullWidth\r\n            id=\"exercise-title\"\r\n            label=\"Название\"\r\n            variant=\"standard\"\r\n            value={props.exercise.title}\r\n            sx={{ pt: 1, pb: 1 }} />\r\n\r\n        <FormControl\r\n            variant='standard'\r\n            sx={{ m: 1, ml: 0, mr: 0, pt: 1, pb: 1 }}\r\n            fullWidth>\r\n            <InputLabel id=\"demo-multiple-name-label\">Мышечные группы</InputLabel>\r\n            <Select\r\n                onChange={(e) => { props.onChange(e, \"muscle\") }}\r\n                labelId=\"demo-multiple-name-label\"\r\n                id=\"demo-multiple-name\"\r\n                value={props.exercise.muscle}\r\n                MenuProps={MenuProps}>\r\n                {MuscleGroupsEnum.map((name) => (\r\n                    <MenuItem\r\n                        key={name}\r\n                        value={name}>\r\n                        {name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    </Box>\r\n}\r\n\r\nexport default ExerciseFrom;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport ExerciseFrom from './ExerciseForm';\r\n\r\nconst CreateExercise = (props) => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\" }}>\r\n            <ExerciseFrom\r\n                exercise={props.exercise}\r\n                onChange={props.onChange} />\r\n\r\n            <MainButton text=\"Создать\" onClick={props.onSave} isBottom={true} />\r\n        </Box>\r\n    </div>\r\n};\r\n\r\nexport default CreateExercise;","import { Button } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst RemoveEntityButton = props => {\r\n    return <Button\r\n        onClick={props.onClick}\r\n        fullWidth\r\n        color=\"error\"\r\n        sx={{ mt: 1, pl: 0 }}\r\n        disableRipple>\r\n            {props.text}\r\n    </Button>\r\n}\r\n\r\nexport default RemoveEntityButton;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport RemoveEntityButton from '../base/RemoveEntityButton';\r\nimport ExerciseFrom from './ExerciseForm';\r\n\r\nconst ExerciseInfo = (props) => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\"}}>\r\n            <ExerciseFrom\r\n                exercise={props.exercise}\r\n                onChange={props.onChange} />\r\n\r\n            <RemoveEntityButton onClick={props.onRemove} text=\"Удалить упражнение\"/>\r\n\r\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\r\n        </Box>\r\n    </div>\r\n};\r\n\r\nexport default ExerciseInfo;","import { Accordion as MuiAccordion, AccordionDetails as MuiAccordionDetails, AccordionSummary as MuiAccordionSummary, Badge, Button } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\r\nimport { Box, styled } from \"@mui/system\";\r\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo } from \"../Constants\";\r\nimport { CountExercisesByMuscle, GetExercisesByMuscle } from \"../../api/ExercisesAPI\";\r\n\r\nconst Accordion = styled((props) => (\r\n    <MuiAccordion elevation={0} {...props} />\r\n))(({ theme }) => ({\r\n    '&:not(:last-child)': {\r\n        borderBottom: 0,\r\n    }\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n    <MuiAccordionSummary\r\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.light,\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    '& .MuiAccordionSummary-content': {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\r\n}));\r\n\r\nconst ExerciseList = (props) => {\r\n    const [expanded, setExpanded] = useState(null)\r\n\r\n    const handleChangeExpanded = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    const onClickToExercise = (e, exercise) => {\r\n        e.stopPropagation();\r\n        props.onClick(e, ModalTypeInfo, exercise);\r\n    }\r\n\r\n    const calcCount = (muscle) => {\r\n        return CountExercisesByMuscle(muscle);\r\n    }\r\n\r\n    return <div>\r\n        {MuscleGroupsEnum.map((muscle, idx) => <Accordion\r\n            key={idx}\r\n            expanded={expanded == muscle}\r\n            onChange={handleChangeExpanded(muscle)}>\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1bh-content\"\r\n                id=\"panel1bh-header\">\r\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", pr: 2 }}>\r\n                    {MuscleGroupsInfo[muscle].locale}\r\n                    <Badge showZero badgeContent={calcCount(muscle)} color=\"secondary\" sx={{zIndex: 0}}></Badge>\r\n                </Box>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        onClick={(e) => onClickToExercise(e, exercise)}\r\n                        fullWidth\r\n                        sx={{ justifyContent: \"flex-start\", textAlign: \"left\" }}\r\n                        disableRipple>\r\n                        {exercise.title}\r\n                    </Button>\r\n                </Box>)}\r\n            </AccordionDetails>\r\n        </Accordion>)\r\n        }\r\n    </div >\r\n}\r\n\r\nexport default ExerciseList;","import { Box, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { AddExercises, RemoveExercises, UpdateExercise } from \"../../api/ExercisesAPI\";\r\nimport MainButton from \"../base/MainButton\";\r\nimport Modal from \"../base/Modal\";\r\nimport { DefaultExercise, ModalTypeAdd, ModalTypeInfo } from \"../Constants\";\r\nimport CreateExercise from \"../exercise/CreateExercise\";\r\nimport ExerciseInfo from \"../exercise/ExerciseInfo\";\r\nimport ExerciseList from \"../exercise/ExerciseList\";\r\n\r\nconst defaultModalState = {\r\n    open: false,\r\n    type: null,\r\n    title: null\r\n};\r\n\r\nconst ExercisesScene = props => {\r\n    const [modalInfo, setModalInfo] = useState(defaultModalState);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    const handleChangeExercise = (e, field) => {\r\n        var item = selectedItem;\r\n        item[field] = e.target.value;\r\n        setSelectedItem({ ...item });\r\n    }\r\n\r\n    const removeExercise = () => {\r\n        RemoveExercises(selectedItem.id)\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalInfo(defaultModalState);\r\n        setSelectedItem(null)\r\n    }\r\n\r\n    const onChangeModal = (e, type, item) => {\r\n        if (modalInfo.open) {\r\n            closeModal();\r\n        } else {\r\n            setModalInfo({\r\n                open: true,\r\n                type: type,\r\n                title: type == ModalTypeAdd ? \"Создание упражнения\" : null\r\n            });\r\n            setSelectedItem({ ...item });\r\n        }\r\n    }\r\n\r\n    const saveExercise = (e) => {\r\n        UpdateExercise(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    const addExeecise = (e) => {\r\n        AddExercises(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant='h6' align=\"center\">Упражнения</Typography>\r\n        <ExerciseList onClick={onChangeModal} />\r\n        <Modal\r\n            open={modalInfo.open}\r\n            onClose={(e) => onChangeModal(e, null, null)}\r\n            title={modalInfo.title}>\r\n            {modalInfo.type == ModalTypeInfo && <ExerciseInfo\r\n                onChange={handleChangeExercise}\r\n                exercise={selectedItem}\r\n                onRemove={removeExercise}\r\n                onSave={saveExercise} />}\r\n            {modalInfo.type == ModalTypeAdd && <CreateExercise\r\n                onChange={handleChangeExercise}\r\n                exercise={selectedItem}\r\n                onSave={addExeecise} />}\r\n        </Modal>\r\n\r\n        <MainButton text=\"Создать упражнение\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultExercise())} />\r\n    </div>\r\n}\r\n\r\nexport default ExercisesScene;","import { Accordion, AccordionDetails, AccordionSummary as MuiAccordionSummary, Box, Button, styled } from '@mui/material';\r\nimport React from 'react';\r\nimport { GetExercisesByMuscle } from '../../api/ExercisesAPI';\r\nimport MainButton from '../base/MainButton';\r\nimport { MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nconst AccordionSummary = styled((props) => (\r\n    <MuiAccordionSummary\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.light,\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    '& .MuiAccordionSummary-content': {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst ExercisesSelector = (props) => {\r\n    return <div>\r\n        <Box sx={{ pb: 14 }}>\r\n            {MuscleGroupsEnum.map((muscle, idx) => <Accordion\r\n                key={idx}\r\n                expanded={true}>\r\n                <AccordionSummary\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\">\r\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", p: 1 }}>\r\n                        {MuscleGroupsInfo[muscle].locale}\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\r\n                        <Button\r\n                            endIcon={props.isSelected(exercise.id) ? <CheckIcon /> : <div></div>}\r\n                            color=\"secondary\"\r\n                            onClick={(e) => props.handleCheckItem(exercise.id)}\r\n                            fullWidth\r\n                            sx={{ justifyContent: \"space-between\", textAlign: \"left\" }}\r\n                            disableRipple>\r\n                            {exercise.title}\r\n                        </Button>\r\n                    </Box>)}\r\n                </AccordionDetails>\r\n            </Accordion>)}\r\n        </Box>\r\n\r\n        <MainButton text={`Применить`} onClick={props.onSave} isBottom={true} />\r\n    </div>\r\n}\r\n\r\nexport default ExercisesSelector;","import React from 'react';\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst AddSetButton = (props) => {\r\n    return <Button\r\n        size='small'\r\n        variant='contained'\r\n        color=\"secondary\"\r\n        onClick={props.onClick}>\r\n        {props.text}\r\n    </Button>\r\n}\r\n\r\nexport default AddSetButton;","import { Checkbox, Divider, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from '@mui/material';\r\nimport { Box, useTheme } from '@mui/system';\r\nimport React from 'react';\r\nimport AddSetButton from '../base/AddSetButton';\r\nimport { MuscleGroupsInfo } from '../Constants';\r\n\r\nconst SetsTable = ({ item, sets, handleChangeInput, handleChangeCompleted, addSet, disableWeigth, disableCompleted, infoMode, inputMode }) => {\r\n    const theme = useTheme();\r\n    console.log(sets);\r\n\r\n    return <Paper sx={{ p: 1, mb: 2, mt: 1 }}>\r\n        <Box sx={{ display: 'flex' }}>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', pl: 2, pr: 2 }}>\r\n                <Typography>{item.title}</Typography>\r\n                <Typography variant='caption'>{MuscleGroupsInfo[item.muscle].locale}</Typography>\r\n            </Box>\r\n        </Box>\r\n\r\n        <Divider />\r\n\r\n        <Box>\r\n            <TableContainer>\r\n                <Table sx={{ width: \"100%\", tableLayout: 'fixed' }} size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Подход</TableCell>\r\n                            <TableCell align='center'>Повторы</TableCell>\r\n                            {!disableWeigth && <TableCell align='center'>Вес</TableCell>}\r\n                            {!disableCompleted && <TableCell>Выполнен</TableCell>}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {sets.map((set, index) =>\r\n                            <TableRow key={index}>\r\n                                <TableCell>{index + 1}</TableCell>\r\n                                <TableCell align='center'>\r\n                                    {inputMode && <TextField\r\n                                        inputProps={{\r\n                                            sx: { textAlign: \"center\" }\r\n                                        }}\r\n                                        size='small'\r\n                                        name=\"repeats\"\r\n                                        type={\"number\"}\r\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\r\n                                        fullWidth\r\n                                        value={set.repeats} />}\r\n                                    {infoMode && set.repeats}\r\n                                </TableCell>\r\n                                {!disableWeigth && <TableCell align='center'>\r\n                                    {inputMode && <TextField\r\n                                        inputProps={{\r\n                                            sx: { textAlign: \"center\" }\r\n                                        }}\r\n                                        size='small'\r\n                                        name=\"weight\"\r\n                                        type={\"number\"}\r\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\r\n                                        fullWidth\r\n                                        value={set.weight} />}\r\n                                    {infoMode && set.weight}\r\n                                </TableCell>}\r\n                                {!disableCompleted && <TableCell align='right'>\r\n                                    <Checkbox\r\n                                        disabled={infoMode}\r\n                                        name=\"completed\"\r\n                                        color='secondary'\r\n                                        checked={set.completed}\r\n                                        onChange={(e) => handleChangeCompleted(e, item, index)} />\r\n                                </TableCell>}\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {inputMode && <Box sx={{ display: 'flex', justifyContent: 'flex-end', pt: 1 }}>\r\n                <AddSetButton text=\"Добавить подход\" onClick={e => addSet(item)} />\r\n            </Box>}\r\n        </Box>\r\n    </Paper>\r\n}\r\n\r\nexport default SetsTable;","import { Box, Button, Grid, TextField, Typography, useTheme } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { GetExerciseById } from '../../api/ExercisesAPI';\r\nimport Modal from '../base/Modal';\r\nimport { DefaultSet } from '../Constants';\r\nimport ExercisesSelector from '../exercise/ExercisesSelector';\r\nimport SetsTable from './SetsTable';\r\n\r\nconst GenerateExercise = id => {\r\n    return {\r\n        id: id,\r\n        sets: [\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            },\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            },\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            },\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nconst TraningProgramForm = props => {\r\n    const [selected, setSelected] = useState([]);\r\n    const [isOpen, setOpen] = useState(false)\r\n    const theme = useTheme();\r\n\r\n    useEffect(() => {\r\n        setSelected([...props.item.exercises])\r\n    }, [])\r\n\r\n    const isSelected = id => {\r\n        return selected.find(e => e.id == id) || false\r\n    }\r\n\r\n    const handleCheckItem = id => {\r\n        if (!isSelected(id)) {\r\n            setSelected([...selected, GenerateExercise(id)])\r\n        } else {\r\n            setSelected(selected.filter(e => e.id != id))\r\n        }\r\n    }\r\n\r\n    const onClose = () => {\r\n        setSelected(props.item.exercises)\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const handleChangeOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const onSaveExercises = () => {\r\n        props.setExercises(selected);\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const handleChangeRepeats = (e, exercise, index) => {\r\n        let target = selected.find(e => e.id == exercise.id);\r\n        target.sets[index].repeats = parseInt(e.target.value)\r\n        setSelected(selected.map(e => {\r\n            if (e.id == target.id)\r\n                return target;\r\n\r\n            return e;\r\n        }))\r\n    }\r\n\r\n    const addSet = (exercise) => {\r\n        let target = selected.find(e => e.id == exercise.id);\r\n        target.sets.push(DefaultSet());\r\n        setSelected(selected.map(e => {\r\n            if (e.id == target.id)\r\n                return target;\r\n\r\n            return e;\r\n        }))\r\n    }\r\n\r\n    return <Box>\r\n        <TextField\r\n            onChange={(e) => { props.onChange(e, \"title\") }}\r\n            fullWidth\r\n            id=\"exercise-title\"\r\n            label=\"Название\"\r\n            variant=\"standard\"\r\n            value={props.item.title}\r\n            sx={{ pt: 1, pb: 1 }} />\r\n\r\n        {props.item.exercises.length == 0 && <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 2 }}>\r\n            <Typography variant='caption'>Упражнения не добавлены</Typography>\r\n        </Box>}\r\n\r\n\r\n        {props.item.exercises.length > 0 && <Grid container spacing={2}>\r\n            {props.item.exercises.map((exercise, idx) => {\r\n                const item = GetExerciseById(exercise.id);\r\n                return <Grid item xs={12} key={idx}>\r\n                    <SetsTable\r\n                        item={item}\r\n                        sets={exercise.sets}\r\n                        handleChangeInput={handleChangeRepeats}\r\n                        disableWeigth disableCompleted inputMode\r\n                        addSet={addSet}\r\n                    />\r\n                </Grid>\r\n            })}\r\n        </Grid>\r\n        }\r\n\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={onClose}\r\n            title=\"Добавление упражнений\">\r\n            <ExercisesSelector\r\n                handleCheckItem={handleCheckItem}\r\n                selectedExercises={props.item.exercises}\r\n                isSelected={isSelected}\r\n                selected={selected}\r\n                onSave={onSaveExercises} />\r\n        </Modal>\r\n\r\n        <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={handleChangeOpen}>\r\n           Изменить упражнения\r\n        </Button>\r\n    </Box >\r\n}\r\n\r\nexport default TraningProgramForm;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport TraningProgramForm from './TraningProgramForm';\r\n\r\nconst CreateTraningProgram = props => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\r\n            <TraningProgramForm\r\n                item={props.item}\r\n                onChange={props.onChange}\r\n                setExercises={props.setExercises}\r\n                onSave={props.setExercises}/>\r\n\r\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\r\n        </Box>\r\n    </div>\r\n}\r\n \r\nexport default CreateTraningProgram;","import { Button } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport TraningProgramForm from './TraningProgramForm';\r\n\r\nconst TraningProgramInfo = props => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\r\n            <TraningProgramForm\r\n                item={props.item}\r\n                onChange={props.onChange}\r\n                setExercises={props.setExercises}\r\n                onSave={props.setExercises}/>\r\n\r\n            <Button\r\n                onClick={props.onRemove}\r\n                fullWidth\r\n                color=\"error\"\r\n                sx={{  mt: 1, pl: 0 }}\r\n                disableRipple>\r\n                Удалить программу\r\n            </Button>\r\n\r\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true}/>\r\n        </Box>\r\n    </div>\r\n}\r\n \r\nexport default TraningProgramInfo;","import { Grid } from '@mui/material';\r\nimport React from 'react';\r\nimport { GetTraningPrograms } from '../../api/TraningProgramAPI';\r\nimport TraningProgramCard from \"./TraningProgramCard\";\r\n\r\nexport interface TraningProgramProps {\r\n    onClick(): void,\r\n    withCount?: boolean\r\n}\r\n\r\nconst TraningProgramList = ({\r\n    onClick,\r\n    withCount = false\r\n}: TraningProgramProps) => {\r\n    return <Grid container spacing={2}>\r\n        {GetTraningPrograms().map((program, idx) => <Grid key={idx} item xs={6}>\r\n            <TraningProgramCard item={program} onClick={onClick} withCount={withCount} />\r\n        </Grid>)}\r\n    </Grid>\r\n}\r\n\r\nexport default TraningProgramList;","import { Box, Typography } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { AddTraningProgram, RemoveTraningProgram, UpdateTraningProgram } from '../../api/TraningProgramAPI';\r\nimport MainButton from '../base/MainButton';\r\nimport Modal from '../base/Modal';\r\nimport { DefaultModalState, DefaultTraningProgram, ModalTypeAdd, ModalTypeInfo } from '../Constants';\r\nimport CreateTraningProgram from '../program/CreateTraningProgram';\r\nimport TraningProgramInfo from '../program/TraningProgramInfo';\r\nimport TraningProgramList from '../program/TraningProgramList.tsx';\r\n \r\nexport const TraningProgramScene = (props) => {\r\n    const [modalInfo, setModalInfo] = useState(DefaultModalState);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    const handleChangeItem = (e, field) => {\r\n        var item = selectedItem;\r\n        item[field] = e.target.value;\r\n        setSelectedItem({ ...item });\r\n    }\r\n\r\n    const removeItem = () => {\r\n        RemoveTraningProgram(selectedItem.id)\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalInfo(DefaultModalState);\r\n        setSelectedItem(null)\r\n    }\r\n\r\n    const onChangeModal = (e, type, item) => {\r\n        if (modalInfo.open) {\r\n            closeModal();\r\n        } else {\r\n            setModalInfo({\r\n                open: true,\r\n                type: type,\r\n                title: type == ModalTypeAdd ? \"Создание программы\" : null\r\n            });\r\n            setSelectedItem({ ...item });\r\n        }\r\n    }\r\n\r\n    const saveItem = (e) => {\r\n        UpdateTraningProgram(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    const addItem = (e) => {\r\n        AddTraningProgram(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    const setExercises = (exercises) => {\r\n        console.log(\"Exercises\", exercises);\r\n        setSelectedItem({...selectedItem, exercises: exercises})\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant='h6' align=\"center\">Тренировочные программы</Typography>\r\n        <TraningProgramList onClick={onChangeModal} withCount/>\r\n        <Modal\r\n            open={modalInfo.open}\r\n            onClose={(e) => onChangeModal(e, null, null)}\r\n            title={modalInfo.title}>\r\n            {modalInfo.type == ModalTypeInfo && <TraningProgramInfo\r\n                onChange={handleChangeItem}\r\n                item={selectedItem}\r\n                onRemove={removeItem}\r\n                onSave={saveItem}\r\n                setExercises={setExercises} />}\r\n            {modalInfo.type == ModalTypeAdd && <CreateTraningProgram\r\n                onChange={handleChangeItem}\r\n                item={selectedItem}\r\n                onSave={addItem}\r\n                setExercises={setExercises} />}\r\n        </Modal>\r\n\r\n        <MainButton text=\"Создать программу\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultTraningProgram())}/>\r\n    </div>\r\n}\r\n \r\nexport default TraningProgramScene;","import React from \"react\";\r\nimport { BottomNavigation, BottomNavigationAction, Paper } from \"@mui/material\";\r\n\r\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\r\nimport FitbitIcon from '@mui/icons-material/Fitbit';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport QueryStatsIcon from '@mui/icons-material/QueryStats';\r\nimport { Person } from \"@mui/icons-material\";\r\n\r\nconst Navigation = props => {\r\n    return <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\r\n        <BottomNavigation value={props.activeScene} onChange={props.handleChange} showLabels>\r\n            <BottomNavigationAction value=\"traning-programs\" icon={<ListAltIcon />} />\r\n            <BottomNavigationAction value=\"exercises\" icon={<FitbitIcon />} />\r\n            <BottomNavigationAction value=\"traning\" icon={<FitnessCenterIcon />} />\r\n            <BottomNavigationAction value=\"progress\" icon={<QueryStatsIcon />} />\r\n            <BottomNavigationAction value=\"account\" icon={<Person />} />\r\n        </BottomNavigation>\r\n    </Paper>\r\n}\r\n\r\nexport default Navigation;","import { Box, createTheme, CssBaseline, ThemeProvider } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\r\nimport Navigation from './Navigation'\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#EAE1DF\",\r\n            light: \"#f7f3f3\",\r\n            dark: \"#be9d9d\",\r\n            contrastText: \"#322E18\"\r\n        },\r\n        secondary: {\r\n            main: \"#545E56\",\r\n            light: \"#EAECEA\",\r\n            dark: \"#A9B1A9\"\r\n        },\r\n        background: {\r\n            default: \"#f7f3f3\"\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n    }\r\n});\r\n\r\nconst Layout = ({ children }) => {\r\n    const [scene, setScene] = useState(\"traning\")\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        const path = location.pathname.substring(1);\r\n        if (path.length == 0 || path.includes('workout-process')) {\r\n            setScene(\"traning\")\r\n        } else {\r\n            setScene(path)\r\n        }\r\n    }, [location])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        navigate(`/${newValue}`)\r\n    };\r\n\r\n    return <Box sx={{ display: 'flex', height: '100%', justifyContent: 'center', pb: 7, pt: 0 }}>\r\n        <CssBaseline />\r\n        <ThemeProvider theme={darkTheme}>\r\n            <Box component={\"main\"} sx={{ p: 1, width: '100%', height: '100%', overflowY: \"scroll\", pb: 10 }}>\r\n                <Outlet />\r\n                <Navigation activeScene={scene} handleChange={handleChange} />\r\n            </Box>\r\n        </ThemeProvider>\r\n    </Box>\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport Modal from \"../base/Modal\";\r\nimport ExercisesSelector from \"../exercise/ExercisesSelector\";\r\n\r\nconst ChangeExercisesModal = ({isOpen, onClose, handleCheckItem, isSelected, selected, onSaveExercises, selectedExercises}) => {\r\n    return <Modal\r\n        open={isOpen}\r\n        onClose={onClose}\r\n        title=\"Изменить упражнения\">\r\n        <ExercisesSelector\r\n            handleCheckItem={handleCheckItem}\r\n            selectedExercises={selectedExercises}\r\n            isSelected={isSelected}\r\n            selected={selected}\r\n            onSave={onSaveExercises} />\r\n    </Modal>\r\n}\r\n\r\nexport default ChangeExercisesModal;","import { Button, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, TextField } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport Modal from '../base/Modal';\r\n\r\nconst RejectWorkoutModal = ({ isOpen, onClose, rejectCause, handleChange, rejectWorkout }) => {\r\n    return <Modal\r\n        open={isOpen}\r\n        onClose={onClose}\r\n        title=\"Отмена тренировки\">\r\n        <Box>\r\n            <FormControl fullWidth>\r\n                <FormLabel id=\"reject-couse-group\">Укажите причину</FormLabel>\r\n                <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={rejectCause}\r\n                    onChange={handleChange}>\r\n                    <FormControlLabel value=\"Устал\" control={<Radio />} label=\"Устал\" />\r\n                    <FormControlLabel value=\"Плохое самочувствие\" control={<Radio />} label=\"Плохое самочувствие\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <Button onClick={rejectWorkout} fullWidth>Отменить тренировку</Button>\r\n        </Box>\r\n    </Modal>\r\n}\r\n\r\nexport default RejectWorkoutModal;","import { Grid, Paper, Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst WorkoutInfo = ({ workout }) => {\r\n    return <Grid item xs={12} sx={{display: 'flex', gap: 1, flexDirection: 'column'}}>\r\n        <Paper sx={{\r\n            p: 2\r\n        }}>\r\n            <Typography variant='h6'>{`Тоннаж: ${workout.volume} кг`}</Typography>\r\n            <Typography variant='h6'>{`Выполнено на ${workout.progress}%`}</Typography>\r\n        </Paper>\r\n    </Grid>\r\n}\r\n\r\nexport default WorkoutInfo;","import { Button, Grid, Paper, Typography } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { GetExerciseById } from '../../api/ExercisesAPI';\r\nimport MainButton from '../base/MainButton';\r\nimport Modal from '../base/Modal';\r\nimport { DefaultSet, GenerateProgramExercise } from '../Constants';\r\nimport SetsTable from '../program/SetsTable';\r\nimport { GetTraningProgramById } from '../service/TraningProgramService';\r\nimport { CompleteWorkout, GetWorkoutById, IsActive, IsCompleted, IsNew, IsRejected, RejectWorkout, SaveWorkout, StartWorkout } from '../service/WorkoutService';\r\nimport ChangeExercisesModal from '../traning/ChangeExercisesModal';\r\nimport RejectWorkoutModal from '../traning/RejectWorkoutModal';\r\nimport WorkoutInfo from '../traning/WorkoutInfo';\r\n\r\nconst WorkoutProcessScene = (props) => {\r\n    const { workoutId } = useParams();\r\n\r\n    const [selected, setSelected] = useState([]);\r\n    const [isOpen, setOpen] = useState(false)\r\n    const [workout, updateWorkout] = useState({ exercises: [] });\r\n    const [traningProgram, updateTraningProgram] = useState({ title: \"\" });\r\n    const [rejectState, updateRejectState] = useState({\r\n        open: false,\r\n        rejectCause: \"Устал\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        let result = GetWorkoutById(workoutId)\r\n        updateWorkout(result)\r\n        setSelected(result.exercises);\r\n        let traningProgram = GetTraningProgramById(result.traningProgramId)\r\n        updateTraningProgram(traningProgram)\r\n    }, [workoutId])\r\n\r\n    useEffect(() => {\r\n        setSelected(workout.exercises)\r\n    }, [workout])\r\n\r\n    const handleChangeReject = () => {\r\n        updateRejectState({ ...rejectState, open: !rejectState.open })\r\n    }\r\n\r\n    const onCloseReject = () => {\r\n        updateRejectState({\r\n            open: false,\r\n            rejectCause: \"\"\r\n        })\r\n    }\r\n\r\n    const handleChangeOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const onClose = () => {\r\n        setSelected(workout.exercises)\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const handleChangeInput = (e, exercise, index) => {\r\n        let target = getTargetExerciseById(exercise.id)\r\n        let newValue = e.target.value == \"\" ? \"\" : parseInt(e.target.value);\r\n        target.sets[index][e.target.name] = newValue\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const handleChangeCompleted = (e, exercise, index) => {\r\n        let target = getTargetExerciseById(exercise.id)\r\n        target.sets[index].completed = !target.sets[index].completed;\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const getTargetExerciseById = id => {\r\n        return workout.exercises.find(e => e.id == id);\r\n    }\r\n\r\n    const updateWorkoutFilling = (target) => {\r\n        updateWorkout({\r\n            ...workout,\r\n            exercises: workout.exercises.map(e => {\r\n                return e.id == target.id ? target : e;\r\n            })\r\n        })\r\n        SaveWorkout(workout)\r\n    }\r\n\r\n    const addSet = (exercise) => {\r\n        let target = getTargetExerciseById(exercise.id);\r\n        target.sets.push(DefaultSet());\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const startWorkout = () => {\r\n        updateWorkoutFilling(StartWorkout(workout))\r\n    }\r\n\r\n    const completeWorkout = () => {\r\n        updateWorkoutFilling(CompleteWorkout(workout));\r\n    }\r\n\r\n    const rejectWorkout = () => {\r\n        updateWorkoutFilling(RejectWorkout(workout))\r\n        onCloseReject();\r\n    }\r\n\r\n    const handleCheckItem = id => {\r\n        if (!isSelected(id)) {\r\n            setSelected([...selected, GenerateProgramExercise(id)])\r\n        } else {\r\n            setSelected(selected.filter(e => e.id != id))\r\n        }\r\n    }\r\n\r\n    const onSaveExercises = () => {\r\n        workout.exercises = selected;\r\n        updateWorkoutFilling(workout);\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const isSelected = id => {\r\n        return selected.find(e => e.id == id) || false\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant='h6'>Тренировка {traningProgram.title}</Typography>\r\n        <Grid container spacing={2}>\r\n            {!IsActive(workout) && <WorkoutInfo workout={workout}/>}\r\n            {workout.exercises.map((exercise, idx) => {\r\n                const item = GetExerciseById(exercise.id);\r\n                return <Grid item xs={12} key={idx}>\r\n                    <SetsTable\r\n                        infoMode={!IsActive(workout)}\r\n                        inputMode={IsActive(workout)}\r\n                        item={item}\r\n                        sets={exercise.sets}\r\n                        handleChangeCompleted={handleChangeCompleted}\r\n                        handleChangeInput={handleChangeInput}\r\n                        addSet={addSet} />\r\n                </Grid>\r\n            })}\r\n        </Grid>\r\n\r\n        <ChangeExercisesModal\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            handleCheckItem={handleCheckItem}\r\n            selectedExercises={workout.exercises}\r\n            isSelected={isSelected}\r\n            selected={selected}\r\n            onSaveExercises={onSaveExercises}\r\n        />\r\n\r\n        <RejectWorkoutModal\r\n            isOpen={rejectState.open}\r\n            rejectCause={rejectState.rejectCause}\r\n            onClose={onCloseReject}\r\n            handleChange={(e) => updateRejectState({ ...rejectState, rejectCause: e.target.value })}\r\n            rejectWorkout={rejectWorkout} />\r\n\r\n        {(IsNew(workout) || IsActive(workout)) && <Button onClick={handleChangeOpen}>Изменить упражнения</Button>}\r\n        {(IsNew(workout) || IsActive(workout)) && <Button onClick={handleChangeReject}>Отменить тренировку</Button>}\r\n\r\n        {IsActive(workout) && <MainButton\r\n            text={\"Завершить\"}\r\n            onClick={completeWorkout}\r\n            sx={{\r\n                backgroundColor: \"#FBAB7E\",\r\n                backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\r\n                color: 'black'\r\n            }} />}\r\n    </div>\r\n}\r\n\r\nexport default WorkoutProcessScene;","import { Box, Typography } from '@mui/material';\r\nimport { useTheme } from '@mui/system';\r\nimport React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nconst CustomTooltip = ({ payload }) => {\r\n\r\n    if (payload == null || payload == 'undefined')\r\n        return <div></div>\r\n\r\n    return <Box sx={{ p: 1, display: 'flex', flexDirection: 'column' }}>\r\n        {payload.length && <Typography variant='caption' color=\"secondary\">{payload[0].payload.date}</Typography>}\r\n        {payload.length && <Typography variant='caption' color=\"secondary\">{payload[0].value}</Typography>}\r\n    </Box>\r\n}\r\n\r\nconst Chart = ({ data, dataKey }) => {\r\n    const theme = useTheme();\r\n\r\n    return <ResponsiveContainer height={160} width=\"100%\">\r\n        <AreaChart\r\n            data={data}>\r\n            <Tooltip\r\n                position={{ y: 0 }}\r\n                content={<CustomTooltip />}\r\n                wrapperStyle={{ backgroundColor: theme.palette.secondary.light, outlineColor: theme.palette.secondary.dark, borderRadius: 1 }} />\r\n            <Area\r\n                type=\"monotone\"\r\n                dataKey={dataKey}\r\n                stroke={theme.palette.secondary.dark}\r\n                fill={theme.palette.secondary.light}\r\n                strokeWidth={2}\r\n            />\r\n        </AreaChart>\r\n    </ResponsiveContainer>\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport { Paper, Typography, useTheme } from \"@mui/material\";\r\nimport Chart from \"./Chart\";\r\nimport { Box } from '@mui/system';\r\n\r\nconst ChartCard = ({ title, maxValue, data, dataKey }) => {\r\n    const theme = useTheme();\r\n    return <Paper sx={{ p: 1, height: 220 }}>\r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Typography variant=\"h6\">{title}</Typography>\r\n            <Typography variant='h6' color={theme.palette.secondary.dark}>Макс. {maxValue}</Typography>\r\n        </Box>\r\n        <Chart data={data} dataKey={dataKey} />\r\n    </Paper>\r\n}\r\n\r\nexport default ChartCard;","import { Fade, Paper, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\n\r\nconst CountChart = ({ title, count, fade }) => {\r\n    return <Paper sx={{ p: 2, height: 140 }}>\r\n        <Box sx={{display: 'flex', flexDirection: \"column\", alignItems: 'stretch', height: \"100%\"}}>\r\n            <Box sx={{ display: 'flex', justifyContent: \"center\", flexGrow: 1 }}>\r\n                <Typography >{title}</Typography>\r\n            </Box>\r\n            <Box sx={{ display: 'flex', justifyContent: \"center\", alignItems: 'center', height: \"100%\", flexGrow: 2 }}>\r\n                <Fade in={fade} timeout={150}>\r\n                    <Typography variant='h2'>{count}</Typography>\r\n                </Fade>\r\n            </Box>\r\n        </Box>\r\n\r\n    </Paper>\r\n}\r\n\r\nexport default CountChart;","import { FormControl, InputLabel, MenuItem, Paper, Select, Typography, useTheme } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\nimport { MuscleGroupsEnum } from '../Constants';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst CustomTooltip = ({ payload, selectedMuscle }) => {\r\n\r\n    if (payload == null || payload == 'undefined')\r\n        return <div></div>\r\n\r\n    return <Box sx={{ p: 1, display: 'flex', flexDirection: 'column' }}>\r\n        {payload.length && <Typography variant='caption' color=\"secondary\">{payload[0].payload.date}</Typography>}\r\n        {payload.length && <Typography variant='caption' color=\"secondary\">{selectedMuscle} - {payload[0].payload.setsCount}</Typography>}\r\n    </Box>\r\n}\r\n\r\nconst MultilineChartCard = ({ data, title }) => {\r\n    const [selectedMuscle, setSelectedMuscle] = useState(\"BICEPS\")\r\n    const [setsData, updateSetsData] = useState([]);\r\n    useEffect(() => {\r\n        if (data != undefined && data.data != undefined) {\r\n            const newData = data.data.find(item => item.muscle == selectedMuscle);\r\n            updateSetsData(newData.data)\r\n        }\r\n            \r\n    }, [selectedMuscle, data])\r\n    const theme = useTheme();\r\n\r\n    return <Paper sx={{ p: 1, height: 300 }}>\r\n        <Box sx={{ display: 'flex', gap: 1, flexDirection: 'column' }}>\r\n            <Typography variant=\"h6\">{title}</Typography>\r\n            <FormControl\r\n                variant='standard'\r\n                sx={{ m: 1, ml: 0, mr: 0, pt: 1, pb: 1 }}\r\n                fullWidth>\r\n                <InputLabel id=\"demo-multiple-name-label\">Мышечные группы</InputLabel>\r\n                <Select\r\n                    onChange={(e) => { setSelectedMuscle(e.target.value) }}\r\n                    labelId=\"demo-multiple-name-label\"\r\n                    id=\"demo-multiple-name\"\r\n                    value={selectedMuscle}\r\n                    MenuProps={MenuProps}>\r\n                    {MuscleGroupsEnum.map((name) => (\r\n                        <MenuItem\r\n                            key={name}\r\n                            value={name}>\r\n                            {name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </Box>\r\n        <ResponsiveContainer height={160} width=\"100%\">\r\n            <AreaChart\r\n                data={setsData}>\r\n                <Tooltip\r\n                    position={{ y: 0 }}\r\n                    content={<CustomTooltip selectedMuscle={selectedMuscle} />}\r\n                    wrapperStyle={{ backgroundColor: theme.palette.secondary.light, outlineColor: theme.palette.secondary.dark, borderRadius: 1 }} />\r\n                <Area\r\n                    type=\"monotone\"\r\n                    dataKey=\"setsCount\"\r\n                    strokeWidth={2}\r\n                    stroke={theme.palette.secondary.dark}\r\n                    fill={theme.palette.secondary.light} />\r\n            </AreaChart>\r\n        </ResponsiveContainer>\r\n    </Paper>\r\n}\r\n\r\nexport default MultilineChartCard;","import { GetExercisesByMuscle } from \"../../api/ExercisesAPI\";\r\nimport { FormatDate, GetDateRangeByPeriod } from \"../../utils/DateUtils\";\r\nimport { MuscleGroupsEnum } from \"../Constants\";\r\nimport { GetWorkoutsByDateRange, IsRejected } from \"./WorkoutService\";\r\n\r\nexport const GetStatisticByPeriod = period => {\r\n    let dateRange = GetDateRangeByPeriod(period);\r\n    const workouts = GetWorkoutsByDateRange(dateRange) || [];\r\n    const maxVolume = workouts.length && Math.max(...workouts.map(workout => workout.volume))\r\n    const maxDuration = workouts.length && Math.max(...workouts.map(workout => workout.duration || 0))\r\n\r\n    return {\r\n        workoutCount: workouts.length,\r\n        fullCompleteCount: workouts.filter(workout => workout.progress == 100).length,\r\n        rejectedCount: workouts.filter(IsRejected).length,\r\n        tonnageData: {\r\n            max: maxVolume,\r\n            data: workouts.map(workout => {\r\n                return {\r\n                    date: FormatDate(new Date(workout.endAt)),\r\n                    volume: workout.volume\r\n                }\r\n            })\r\n        },\r\n        durationData: {\r\n            max: maxDuration,\r\n            data: workouts.map(workout => {\r\n                return {\r\n                    date: FormatDate(new Date(workout.endAt)),\r\n                    duration: workout.duration\r\n                }\r\n            })\r\n        },\r\n        setsData: {\r\n            data: GetSetsData(workouts)\r\n        }\r\n    }\r\n}\r\n\r\nconst GetSetsData = workouts => {\r\n    const result = MuscleGroupsEnum.map(muscle => {\r\n        const res = workouts.map(workout => {\r\n            const allExercisesByMuscleIds = GetExercisesByMuscle(muscle)\r\n                .map(item => item.id);\r\n\r\n            const targetSets = workout.exercises.filter(item => allExercisesByMuscleIds.includes(item.id))\r\n                .flatMap(item => item.sets)\r\n                .filter(set => set.completed)\r\n            return {\r\n                date: FormatDate(new Date(workout.endAt)),\r\n                setsCount: targetSets.length\r\n            }\r\n        })\r\n        return {\r\n            muscle: muscle,\r\n            data: res.filter(item => item.setsCount > 0)\r\n        }\r\n    })\r\n    return result;\r\n\r\n}","import { Grid, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ChartCard from '../base/ChartCard';\r\nimport CountChart from '../base/CountChart';\r\nimport MultilineChartCard from '../base/MultilineChartCard';\r\nimport { MuscleGroupsEnum } from '../Constants';\r\nimport { GetStatisticByPeriod } from '../service/ProgressService';\r\n\r\nconst ProgressScene = () => {\r\n    const [period, updatePeriod] = useState(\"week\")\r\n    const [fade, updateFade] = useState(true)\r\n    const [statistic, updateStatistic] = useState({\r\n        workoutCount: 0,\r\n        fullCompleteCount: 0,\r\n        rejectedCount: 0,\r\n        tonnageData: {\r\n            max: 0,\r\n            data: []\r\n        },\r\n        durationData: {\r\n            max: 0,\r\n            data: []\r\n        },\r\n        setsData: [{\r\n            data: []\r\n        }]\r\n    })\r\n\r\n    useEffect(() => {\r\n        updateStatistic(GetStatisticByPeriod(period))\r\n    }, [period])\r\n\r\n    const handleChangePeriod = e => {\r\n        updateFade(false);\r\n        setTimeout(() => {\r\n            updatePeriod(e.target.value)\r\n            updateFade(true);\r\n        }, 150)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant='h6' align='center'>Тренировочный прогресс</Typography>\r\n        <Box sx={{ display: 'flex', justifyContent: \"center\", pt: 2, pb: 2 }}>\r\n            <ToggleButtonGroup\r\n                value={period}\r\n                size='small'\r\n                fullWidth\r\n                onChange={handleChangePeriod}\r\n                exclusive>\r\n                <ToggleButton value=\"year\" sx={{ p: \"8px\" }}>\r\n                    Год\r\n                </ToggleButton>\r\n                <ToggleButton value=\"week\">\r\n                    Неделя\r\n                </ToggleButton>\r\n                <ToggleButton value=\"month\">\r\n                    Месяц\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n        </Box>\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={4}>\r\n                <CountChart\r\n                    title=\"Тренировок\"\r\n                    fade={fade}\r\n                    count={statistic.workoutCount} />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <CountChart\r\n                    title=\"Завершено\"\r\n                    fade={fade}\r\n                    count={statistic.fullCompleteCount} />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <CountChart\r\n                    title=\"Отменено\"\r\n                    fade={fade}\r\n                    count={statistic.rejectedCount} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <ChartCard\r\n                    title={\"Тоннаж\"}\r\n                    maxValue={statistic.tonnageData.max}\r\n                    dataKey=\"volume\"\r\n                    data={statistic.tonnageData.data} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <ChartCard\r\n                    title={\"Длительность\"}\r\n                    maxValue={statistic.durationData.max}\r\n                    dataKey=\"duration\"\r\n                    data={statistic.durationData.data} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <MultilineChartCard\r\n                title=\"Подходы\"\r\n                data={statistic.setsData}\r\n                lineDataKeys={MuscleGroupsEnum}/>\r\n            </Grid>\r\n        </Grid>\r\n    </div>\r\n}\r\n\r\nexport default ProgressScene;","import { Button } from '@mui/material';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DebugScene = () => {\r\n    const navigate = useNavigate();\r\n    const reboot = () => {\r\n        navigate(\"/\");\r\n        window.location.reload(true);\r\n    }\r\n\r\n    return <div>\r\n        <Button fullWidth color=\"secondary\" onClick={reboot}>Перезагрузить</Button>\r\n        <Button fullWidth color=\"secondary\">Отчистить кеш</Button>\r\n        <Button fullWidth color=\"secondary\">Отчистить данные</Button>\r\n    </div>\r\n}\r\n \r\nexport default DebugScene;","import { Button, List, ListItem, ListItemButton, ListItemText, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AccountScene = () => {\r\n    const navigation = useNavigate();\r\n    return <div>\r\n        <Typography>Аккаунт</Typography>\r\n        <Button fullWidth variant='contained' onClick={() => navigation(\"/debug\")}>Debug</Button>\r\n    </div>\r\n}\r\n \r\nexport default AccountScene;","import React from \"react\";\r\nimport './App.css';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\n\r\nimport { DefaultExercises, DefaultTraningPrograms } from \"./components/Constants\";\r\nimport { createHashRouter, createRoutesFromElements, Route, RouterProvider } from \"react-router-dom\";\r\n\r\nimport TraningScene from \"./components/scenes/TraningScene\";\r\nimport ExercisesScene from \"./components/scenes/ExercisesScene\";\r\nimport TraningProgramScene from \"./components/scenes/TraningProgramScene\";\r\nimport Layout from \"./components/base/Layout\";\r\nimport WorkoutProcessScene from \"./components/scenes/TraningProcessScene\";\r\nimport ProgressScene from \"./components/scenes/ProgressScene\";\r\nimport DebugScene from \"./components/scenes/DebugScene\";\r\nimport AccountScene from \"./components/scenes/AccountScene\";\r\n\r\nconst initExercises = () => {\r\n  if (localStorage.getItem(\"exercises\") == null)\r\n    localStorage.setItem(\"exercises\", JSON.stringify(DefaultExercises))\r\n  if (localStorage.getItem(\"traning_programs\") == null)\r\n    localStorage.setItem(\"traning_programs\", JSON.stringify(DefaultTraningPrograms))\r\n}\r\n\r\nconst router = createHashRouter(\r\n  createRoutesFromElements(\r\n    <Route path=\"/\" element={<Layout />}>\r\n      <Route index element={<TraningScene />} />\r\n      <Route path=\"exercises\" element={<ExercisesScene />} />\r\n      <Route path=\"traning-programs\" element={<TraningProgramScene />} />\r\n      <Route path=\"traning\" element={<TraningScene />} />\r\n      <Route path=\"workout-process/:workoutId\" element={<WorkoutProcessScene />} />\r\n      <Route path=\"progress\" element={<ProgressScene/>} />\r\n      <Route path=\"account\" element={<AccountScene />} />\r\n      <Route path=\"debug\" element={<DebugScene/>}></Route>\r\n    </Route>\r\n  )\r\n);\r\n\r\nconst App = () => {\r\n  initExercises();\r\n  return (<RouterProvider router={router} />);\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\n// function forceSWupdate () {\r\n//   if ('serviceWorker' in navigator) {\r\n//     navigator.serviceWorker.getRegistrations().then(function (registrations) {\r\n//       for (let registration of registrations) {\r\n//         registration.update()\r\n//       }\r\n//     })\r\n//   }\r\n// }\r\n\r\n// forceSWupdate()\r\n\r\nexport function register(config) {\r\n  if ('serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n// serviceWorkerRegistration.register();\r\n"],"sourceRoot":""}