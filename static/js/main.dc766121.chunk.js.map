{"version":3,"sources":["types.ts","components/Constants.js","api/TraningProgramAPI.js","components/base/MainButton.tsx","components/base/Modal.tsx","api/ExercisesAPI.js","components/service/TraningProgramService.ts","components/program/TraningProgramCard.js","api/WorkoutAPI.js","utils/DateUtils.js","components/service/WorkoutService.ts","components/base/TextWithIcon.js","components/traning/TraningCard.js","components/base/DateSelector.js","components/scenes/TraningScene.js","reduxTypes.ts","components/exercise/ExerciseForm.js","components/exercise/CreateExercise.js","components/base/RemoveEntityButton.js","components/exercise/ExerciseInfo.js","components/exercise/ExerciseList.js","components/service/MuscleService.ts","components/scenes/ExercisesScene.js","components/exercise/ExercisesSelector.js","components/base/AddSetButton.js","components/program/SetsTable.js","components/program/TraningProgramForm.js","components/program/CreateTraningProgram.js","components/program/TraningProgramInfo.tsx","components/program/TraningProgramList.tsx","components/scenes/TraningProgramScene.js","components/base/Navigation.js","components/base/Layout.tsx","components/traning/ChangeExercisesModal.js","components/traning/RejectWorkoutModal.js","components/traning/WorkoutInfo.js","components/scenes/TraningProcessScene.js","components/base/Chart.js","components/base/ChartCard.js","components/base/CountChart.js","components/base/MultilineChartCard.js","components/service/ProgressService.js","components/scenes/ProgressScene.js","components/scenes/DebugScene.js","redux/ThemeSlice.tsx","components/scenes/ProfileScene.tsx","App.js","reportWebVitals.js","serviceWorkerRegistration.js","redux/MiddlewareListener.ts","redux/Store.tsx","index.js"],"names":["WorkoutStatus","MuscleEnum","MuscleGroupEnum","MuscleGroupsInfo","BICEPS","locale","group","TRICEPS","FOREARMS","QUADS","GLUTES","HAMSTRINGS","ABS","CHEST","SHOULDERS","NECK","LATS","LOWER_BACK","MIDDLE_BACK","TRAPS","MuscleGroupsEnum","MuscleGroupInfo","ARM","LEGS","CORE","BACK","DefaultExercises","id","title","muscle","DefaultModalState","open","type","DefaultTraningPrograms","description","exercises","sets","repeats","weight","complited","GenerateProgramExercise","i","push","completed","GetTraningPrograms","items","localStorage","getItem","JSON","parse","SetTraningPrograms","traningPrograms","console","log","setItem","stringify","MainButton","_ref","isBottom","onClick","text","sx","React","createElement","Box","position","width","bottom","right","pl","pr","left","transform","Button","variant","fullWidth","color","_objectSpread","p","Transition","forwardRef","props","ref","Slide","Object","assign","direction","Modal","onClose","children","Dialog","TransitionComponent","PaperProps","height","m","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","DialogTitle","pb","IconButton","aria-label","top","theme","palette","grey","CloseIcon","DialogContent","GetExercises","SetExercises","GetExercisesByMuscle","filter","exercise","GetExerciseById","find","e","GetTraningProgramById","TraningProgramCard","useTheme","program","muscleGroups","item","_toConsumableArray","Set","map","join","Paper","display","minHeight","flexDirection","flexGrow","withCount","Typography","length","alignItems","GetWorkouts","SetWorkouts","PadTo2Digits","num","toString","padStart","FormatDate","date","getFullYear","getUTCMonth","getUTCDate","MinutesBetweenDates","from","to","concat","Math","floor","getTime","DatesIsEquals","dateLeft","dateRight","CreateWorkout","selectedProgram","workout","uuidv4","traningProgramId","startAt","Date","duration","status","ACTIVE","volume","progress","set","GetWorkoutById","ById","SaveWorkout","IsNew","NEW","IsActive","IsRejected","REJECTED","CalcExerciseVolume","workoutExercise","reduce","sum","CalcProgressInPercent","countOfSets","GetWorkoutSetsCount","completedSets","result","CalcCompletedSets","parseInt","toFixed","TextWithIcon","justifyContent","icon","gutterBottom","mr","ml","mb","lineHeight","animation","keyframes","_templateObject","_taggedTemplateLiteral","StyledCard","styled","Card","backgroundSize","CustomCard","isActive","_useState","useState","_useState2","_slicedToArray","updateProgress","useEffect","backgroundImage","CardActionArea","CardHeader","CardActions","flex","CalendarMonthIcon","AccessTimeIcon","LinearProgress","value","TraningCard","DateSelector","startDaysCount","endDaysCount","selectedDate","onSelectDate","cellRefs","useRef","sliderRef","selectedDateRef","days","now","buffer","subDays","addDays","GetDaysByRange","triggerElementId","updateTriggerElementId","current","alignWeek","element","getDay","triggerElement","document","getElementById","offsetLeft","scrollTo","overflowX","whiteSpace","flexFlow","idx","key","index","el","onTouchEnd","onScroll","replace","borderRadius","backgroundColor","secondary","dark","getDate","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ThemePalette","EmptyResult","TraningScene","todayTranings","setTodayTranings","_useState3","_useState4","traningHistory","setTraningHistory","_useState5","_useState6","isOpen","setIsOpen","_useState7","_useState8","setSelectedDate","navigate","useNavigate","onStart","_asyncToGenerator","_callee","modaType","traningProgram","_context","navigateToWorkout","_x","_x2","_x3","apply","arguments","handleChangeOpen","onChangeModal","align","Grid","container","spacing","traning","xs","Divider","light","mt","newDate","showCount","MenuProps","style","maxHeight","ITEM_HEIGHT","ExerciseFrom","TextField","onChange","label","pt","FormControl","InputLabel","Select","labelId","MenuItem","CreateExercise","flexWrap","onSave","RemoveEntityButton","disableRipple","ExerciseInfo","onRemove","Accordion","MuiAccordion","elevation","&:not(:last-child)","borderBottom","AccordionSummary","MuiAccordionSummary","expandIcon","ArrowForwardIosSharpIcon","fontSize","_ref2","padding","& .MuiAccordionSummary-expandIconWrapper.Mui-expanded","& .MuiAccordionSummary-content","marginLeft","AccordionDetails","MuiAccordionDetails","_ref3","borderTop","ExerciseList","expanded","setExpanded","calcCount","CountExercisesByMuscle","gap","entries","_ref4","panel","event","newExpanded","ExpandMoreIcon","aria-controls","Badge","showZero","badgeContent","zIndex","stopPropagation","onClickToExercise","textAlign","defaultModalState","ExercisesScene","modalInfo","setModalInfo","selectedItem","setSelectedItem","handleChangeExercise","field","target","closeModal","RemoveExercises","UpdateExercise","AddExercises","primary","ExercisesSelector","endIcon","isSelected","CheckIcon","handleCheckItem","AddSetButton","size","SetsTable","handleChangeInput","handleChangeCompleted","addSet","disableWeigth","disableCompleted","infoMode","inputMode","handleChangeFloat","TableContainer","Table","tableLayout","TableHead","TableRow","TableCell","TableBody","inputProps","onBlur","Checkbox","disabled","checked","GenerateExercise","TraningProgramForm","selected","setSelected","setOpen","handleChangeRepeats","match","selectedExercises","setExercises","CreateTraningProgram","TraningProgramInfo","TraningProgramList","_ref$withCount","TraningProgramScene","handleChangeItem","RemoveTraningProgram","UpdateTraningProgram","AddTraningProgram","Navigation","BottomNavigation","activeScene","handleChange","showLabels","BottomNavigationAction","ListAltIcon","FitbitIcon","FitnessCenterIcon","QueryStatsIcon","Person","darkTheme","createTheme","mode","main","contrastText","typography","fontFamily","lightTheme","Layout","scene","setScene","location","useLocation","useSelector","themePalette","path","pathname","substring","includes","CssBaseline","ThemeProvider","component","overflowY","bgcolor","Outlet","newValue","ChangeExercisesModal","onSaveExercises","RejectWorkoutModal","rejectCause","rejectWorkout","FormLabel","RadioGroup","aria-labelledby","FormControlLabel","control","Radio","WorkoutInfo","WorkoutProcessScene","workoutId","useParams","updateWorkout","updateTraningProgram","_useState9","_useState10","rejectState","updateRejectState","onCloseReject","getTargetExerciseById","updateWorkoutFilling","parseFloat","cause","endAt","RejectWorkout","COMPLETED","CompleteWorkout","CustomTooltip","payload","Chart","data","dataKey","ResponsiveContainer","AreaChart","Tooltip","y","content","wrapperStyle","outlineColor","Area","stroke","fill","strokeWidth","ChartCard","maxValue","CountChart","count","fade","Fade","in","timeout","selectedMuscle","setsCount","MultilineChartCard","setSelectedMuscle","setsData","updateSetsData","newData","GetStatisticByPeriod","period","range","dateRange","setDate","GetDateRangeByPeriod","workouts","maxVolume","max","maxDuration","workoutCount","fullCompleteCount","rejectedCount","tonnageData","durationData","GetSetsData","res","allExercisesByMuscleIds","targetSets","flatMap","ProgressScene","updatePeriod","updateFade","statistic","updateStatistic","ToggleButtonGroup","setTimeout","exclusive","ToggleButton","lineDataKeys","DebugScene","window","reload","initialState","ThemeSlice","createSlice","reducers","changePalette","actions","AccountScene","navigation","dispatch","useDispatch","FormGroup","Switch","router","createHashRouter","createRoutesFromElements","Route","App","RouterProvider","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","listenerMiddleware","createListenerMiddleware","startListening","actionCreator","effect","_effect","action","listenerApi","getOriginalState","delay","getState","store","configureStore","reducer","preloadedState","loadState","middleware","getDefaultMiddleware","ReactDOM","createRoot","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.dc766121.chunk.js","sourcesContent":["import { ThemePalette } from \"./reduxTypes\"\r\n\r\nexport type Workout = {\r\n    id: string,\r\n    notes?: string,\r\n    traningProgramId: string,\r\n    duration?: number,\r\n    startAt: Date,\r\n    endAt?: Date,\r\n    exercises: ExerciseItem[],\r\n    status: WorkoutStatus,\r\n    rejectCause?: string,\r\n    volume?: number,\r\n    progress?: number\r\n}\r\n\r\nexport enum WorkoutStatus {\r\n    ACTIVE = \"ACTIVE\",\r\n    NEW = \"NEW\",\r\n    COMPLETED = \"COMPLETED\",\r\n    REJECTED = \"REJECTED\"\r\n}\r\n\r\nexport type TraningProgram = {\r\n    id: string,\r\n    title: string,\r\n    description?: string,\r\n    exercises: ExerciseItem[]\r\n}\r\n\r\nexport type ExerciseItem = {\r\n    id: string,\r\n    sets: WorkoutSet[]\r\n}\r\n\r\nexport type WorkoutSet = {\r\n    repeats: number,\r\n    weight: number,\r\n    completed: boolean\r\n}\r\n\r\nexport type DateRange = {\r\n    from: Date,\r\n    to: Date\r\n}\r\n\r\nexport enum MuscleEnum {\r\n    BICEPS = 1,\r\n    TRICEPS = 1,\r\n    FOREARMS = 1,\r\n    QUADS = 2,\r\n    GLUTES = 2,\r\n    HAMSTRINGS = 2,\r\n    ABS = 3,\r\n    CHEST = 4,\r\n    SHOULDERS = 5,\r\n    NECK = 6,\r\n    LATS = 6,\r\n    LOWER_BACK = 6,\r\n    MIDDLE_BACK = 6,\r\n    TRAPS = 6\r\n}\r\n\r\nexport enum MuscleGroupEnum {\r\n    ARM = 1,\r\n    LEGS = 2,\r\n    CORE = 3,\r\n    CHEST = 4,\r\n    SHOULDERS = 5,\r\n    BACK = 6\r\n}\r\n\r\nexport type AppSettings = {\r\n    palette: ThemePalette\r\n}\r\n\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const MuscleGroupsInfo = {\r\n    \"BICEPS\": {\r\n        \"locale\": \"Бицепс\",\r\n        \"group\": \"ARM\"\r\n    },\r\n    \"TRICEPS\": {\r\n        \"locale\": \"Трицепс\",\r\n        \"group\": \"ARM\"\r\n    },\r\n    \"FOREARMS\": {\r\n        \"locale\": \"Предплечья\",\r\n        \"group\": \"ARM\"\r\n    },\r\n    \"QUADS\": {\r\n        \"locale\": \"Передняя поверхность бедра\",\r\n        \"group\": \"LEGS\"\r\n    },\r\n    \"GLUTES\": {\r\n        \"locale\": \"Ягодицы\",\r\n        \"group\": \"LEGS\"\r\n    },\r\n    \"HAMSTRINGS\": {\r\n        \"locale\": \"Задняя поверхность бедра\",\r\n        \"group\": \"LEGS\"\r\n    },\r\n    \"ABS\": {\r\n        \"locale\": \"Пресс\",\r\n        \"group\": \"CORE\"\r\n    },\r\n    \"CHEST\": {\r\n        \"locale\": \"Грудь\",\r\n        \"group\": \"CHEST\"\r\n    },\r\n    \"SHOULDERS\": {\r\n        \"locale\": \"Плечи\",\r\n        \"group\": \"SHOULDERS\"\r\n    },\r\n    \"NECK\": {\r\n        \"locale\": \"Шея\",\r\n        \"group\": \"NECK\"\r\n    },\r\n    \"LATS\": {\r\n        \"locale\": \"Широчайшие\",\r\n        \"group\": \"BACK\"\r\n    },\r\n    \"LOWER_BACK\": {\r\n        \"locale\": \"Разгибатели спины/Поясница\",\r\n        \"group\": \"BACK\"\r\n    },\r\n    \"MIDDLE_BACK\": {\r\n        \"locale\": \"Середина спины\",\r\n        \"group\": \"BACK\"\r\n    },\r\n    \"TRAPS\": {\r\n        \"locale\": \"Трапеции\",\r\n        \"group\": \"BACK\"\r\n    }\r\n};\r\n\r\nexport const MuscleGroupsEnum = [\r\n    \"BICEPS\",\r\n    \"TRICEPS\",\r\n    \"QUADS\",\r\n    \"GLUTES\",\r\n    \"ABS\",\r\n    \"CHEST\",\r\n    \"SHOULDERS\",\r\n    \"HAMSTRINGS\",\r\n    \"FOREARMS\",\r\n    \"NECK\",\r\n    \"LATS\",\r\n    \"LOWER_BACK\",\r\n    \"MIDDLE_BACK\",\r\n    \"TRAPS\"\r\n];\r\n\r\nexport const MuscleGroupEnum = [\r\n    \"ARM\",\r\n    \"LEGS\",\r\n    \"CORE\",\r\n    \"CHEST\",\r\n    \"SHOULDERS\",\r\n    \"BACK\",\r\n    \"NECK\"\r\n]\r\n\r\nexport const MuscleGroupInfo = {\r\n    \"ARM\": {\r\n        locale: \"Руки\"\r\n    },\r\n    \"LEGS\": {\r\n        locale: \"Ноги\"\r\n    },\r\n    \"CORE\": {\r\n        locale: \"Мышцы кора\"\r\n    },\r\n    \"CHEST\": {\r\n        locale: \"Грудные мышны\"\r\n    },\r\n    \"SHOULDERS\": {\r\n        locale: \"Дельты\"\r\n    },\r\n    \"BACK\": {\r\n        locale: \"Спина\"\r\n    },\r\n    \"NECK\": {\r\n        locale: \"Шея\"\r\n    }\r\n}\r\n\r\nexport const DefaultExercises = [\r\n    {\r\n        \"id\": \"1\",\r\n        \"title\": \"Подъем штанги на бицепс\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"18\",\r\n        \"title\": \"Подтягивания обратным хватом\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"19\",\r\n        \"title\": \"Подъем гантелей в скамье Скотта\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"15\",\r\n        \"title\": \"Молотки с гантелями\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"2\",\r\n        \"title\": \"Французский жим со штангой\",\r\n        \"muscle\": \"TRICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"20\",\r\n        \"title\": \"Французский со штангой\",\r\n        \"muscle\": \"TRICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"21\",\r\n        \"title\": \"Жим лежа узким хватом\",\r\n        \"muscle\": \"TRICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"22\",\r\n        \"title\": \"Разгибания на трицепс в верхнем блоке\",\r\n        \"muscle\": \"TRICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"3\",\r\n        \"title\": \"Приседания со штангой\",\r\n        \"muscle\": \"QUADS\"\r\n    },\r\n    {\r\n        \"id\": \"23\",\r\n        \"title\": \"Жим ногами\",\r\n        \"muscle\": \"QUADS\"\r\n    },\r\n    {\r\n        \"id\": \"24\",\r\n        \"title\": \"Разгибания в блоке на квадрицепс\",\r\n        \"muscle\": \"QUADS\"\r\n    },\r\n    {\r\n        \"id\": \"25\",\r\n        \"title\": \"Выпады с гантелей\",\r\n        \"muscle\": \"QUADS\"\r\n    },\r\n    {\r\n        \"id\": \"4\",\r\n        \"title\": \"Отведения ноги в блоке\",\r\n        \"muscle\": \"GLUTES\"\r\n    },\r\n    {\r\n        \"id\": \"26\",\r\n        \"title\": \"Ягодичный мост\",\r\n        \"muscle\": \"GLUTES\"\r\n    },\r\n    {\r\n        \"id\": \"27\",\r\n        \"title\": \"Глубокие приседания с широкой постановкой ног\",\r\n        \"muscle\": \"GLUTES\"\r\n    },\r\n    {\r\n        \"id\": \"28\",\r\n        \"title\": \"Отведение ног в стороны в тренажере\",\r\n        \"muscle\": \"GLUTES\"\r\n    },\r\n    {\r\n        \"id\": \"5\",\r\n        \"title\": \"Скручивания в римском стуле\",\r\n        \"muscle\": \"ABS\"\r\n    },\r\n    {\r\n        \"id\": \"29\",\r\n        \"title\": \"Скручивания в висе на перекладине\",\r\n        \"muscle\": \"ABS\"\r\n    },\r\n    {\r\n        \"id\": \"6\",\r\n        \"title\": \"Жим со штангой лежа\",\r\n        \"muscle\": \"CHEST\"\r\n    },\r\n    {\r\n        \"id\": \"30\",\r\n        \"title\": \"Жим со штангой лежа на наклонной скамье\",\r\n        \"muscle\": \"CHEST\"\r\n    },\r\n    {\r\n        \"id\": \"31\",\r\n        \"title\": \"Бабочка\",\r\n        \"muscle\": \"CHEST\"\r\n    },\r\n    {\r\n        \"id\": \"7\",\r\n        \"title\": \"Махи с шагтелями в стороны\",\r\n        \"muscle\": \"SHOULDERS\"\r\n    },\r\n    {\r\n        \"id\": \"16\",\r\n        \"title\": \"Армейский жим\",\r\n        \"muscle\": \"SHOULDERS\"\r\n    },\r\n    {\r\n        \"id\": \"17\",\r\n        \"title\": \"Жим гантелей сидя\",\r\n        \"muscle\": \"SHOULDERS\"\r\n    },\r\n    {\r\n        \"id\": \"8\",\r\n        \"title\": \"Румынская тяга\",\r\n        \"muscle\": \"HAMSTRINGS\"\r\n    },\r\n    {\r\n        \"id\": \"9\",\r\n        \"title\": \"Обезьяний хват\",\r\n        \"muscle\": \"FOREARMS\"\r\n    },\r\n    {\r\n        \"id\": \"10\",\r\n        \"title\": \"Скричивания шеи с блином\",\r\n        \"muscle\": \"NECK\"\r\n    },\r\n    {\r\n        \"id\": \"11\",\r\n        \"title\": \"Подтягивания\",\r\n        \"muscle\": \"LATS\"\r\n    },\r\n    {\r\n        \"id\": \"12\",\r\n        \"title\": \"Экстензия\",\r\n        \"muscle\": \"LOWER_BACK\"\r\n    },\r\n    {\r\n        \"id\": \"13\",\r\n        \"title\": \"Тяга нижнего блока\",\r\n        \"muscle\": \"MIDDLE_BACK\"\r\n    },\r\n    {\r\n        \"id\": \"14\",\r\n        \"title\": \"Шраги с гантелями\",\r\n        \"muscle\": \"TRAPS\"\r\n    }\r\n]\r\n\r\nexport const ModalTypeInfo = \"INFO\";\r\nexport const ModalTypeAdd = \"ADD\";\r\n\r\nexport const DefaultExercise = () => {\r\n    return {\r\n        \"id\": uuidv4(),\r\n        title: \"\",\r\n        muscle: \"BICEPS\"\r\n    }\r\n}\r\n\r\nexport const DefaultModalState = {\r\n    open: false,\r\n    type: null,\r\n    title: null\r\n};\r\n\r\nexport const DefaultTraningProgram = () => {\r\n    return {\r\n        \"id\": uuidv4(),\r\n        \"title\": \"\",\r\n        \"description\": \"\",\r\n        \"exercises\": []\r\n    }\r\n}\r\n\r\nexport const DefaultTraningPrograms = [\r\n    {\r\n        \"id\": \"1\",\r\n        \"title\": \"Грудь-бицепс\",\r\n        \"description\": \"\",\r\n        \"exercises\": [\r\n            {\r\n                \"id\": \"1\",\r\n                \"sets\": [\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    },\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    },\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    },\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n]\r\n\r\nexport const DefaultTraning = () => {\r\n    return {\r\n        \"id\": uuidv4(),\r\n        \"notes\": \"\",\r\n        \"traningProgramId\": \"\",\r\n        \"duration\": \"\",\r\n        \"startAt\": \"\",\r\n        \"endAt\": \"\",\r\n        \"exercises\": [],\r\n        \"status\": \"ACTIVE\",\r\n        \"rejectCause\": \"\",\r\n        \"volume\": 0,\r\n        \"progress\": 0\r\n    }\r\n}\r\n\r\nexport const Statuses =\r\n{\r\n    NEW: {\r\n        locale: \"Новая\"\r\n    },\r\n    ACTIVE: {\r\n        locale: \"В процессе\"\r\n    },\r\n    COMPLETED: {\r\n        locale: \"Завершена\"\r\n    },\r\n    REJECTED: {\r\n        locale: \"Отменена\"\r\n    }\r\n}\r\n\r\n\r\nexport const DefaultSet = () => {\r\n    return {\r\n        repeats: 10,\r\n        weight: 0,\r\n        completed: false\r\n    }\r\n}\r\n\r\nexport const GenerateProgramExercise = id => {\r\n    let setCount = 4;\r\n    let sets = [];\r\n    for (let i = 0; i < setCount; i++) {\r\n        sets.push(DefaultSet())\r\n    }\r\n    return {\r\n        id: id,\r\n        sets: sets\r\n    }\r\n}\r\n\r\nexport const Weekdays = [\r\n    {\r\n        id: 0,\r\n        locale: \"Пн\"\r\n    },\r\n    {\r\n        id: 1,\r\n        locale: \"Вт\"\r\n    },\r\n    {\r\n        id: 2,\r\n        locale: \"Ср\"\r\n    },\r\n    {\r\n        id: 3,\r\n        locale: \"Чт\"\r\n    },\r\n    {\r\n        id: 4,\r\n        locale: \"Пт\"\r\n    },\r\n    {\r\n        id: 5,\r\n        locale: \"Сб\"\r\n    },\r\n    {\r\n        id: 6,\r\n        locale: \"Вск\"\r\n    }\r\n]","export const GetTraningPrograms = () => {\r\n    var items = localStorage.getItem(\"traning_programs\");\r\n    return items != null ? JSON.parse(items) : [];\r\n}\r\n\r\nexport const SetTraningPrograms = (traningPrograms) => {\r\n    console.log(\"Update traning program in local storage...\")\r\n    localStorage.setItem(\"traning_programs\", JSON.stringify(traningPrograms))\r\n}\r\n\r\nexport const AddTraningProgram = exercise => {\r\n    const items = GetTraningPrograms();\r\n    items.push(exercise);\r\n    SetTraningPrograms(items);\r\n}\r\n\r\nexport const RemoveTraningProgram = id => {\r\n    const items = GetTraningPrograms().filter(exercise => exercise.id != id);\r\n    SetTraningPrograms(items);\r\n}\r\n\r\nexport const UpdateTraningProgram = exercise => {\r\n    const items = GetTraningPrograms().map(e => {\r\n        if(e.id == exercise.id) {\r\n            \r\n            return exercise;\r\n        }\r\n\r\n        return e;\r\n    })\r\n    SetTraningPrograms(items);\r\n}\r\n\r\n\r\nexport const GetTraningProgramById = id => {\r\n    const exercises = GetTraningPrograms();\r\n    return exercises.find(e => e.id == id); \r\n}","import React from \"react\";\r\nimport { Box, Button } from \"@mui/material\"\r\n\r\ninterface Props {\r\n    isBottom: boolean,\r\n    onClick(): void,\r\n    text: string,\r\n    sx?: object\r\n}\r\n\r\nconst MainButton = ({isBottom, onClick, text, sx}: Props) => {\r\n    return <Box sx={{\r\n        position: 'fixed', \r\n        width: \"100%\", \r\n        bottom: isBottom ? 0 : 40, \r\n        right: 0, \r\n        pl: 1, \r\n        pr: 1,\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }}>\r\n        <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"secondary\"\r\n            sx={{\r\n                p: 2,\r\n                ...sx\r\n            }}\r\n            onClick={onClick}>\r\n            {text}\r\n        </Button>\r\n    </Box>\r\n}\r\n\r\nexport default MainButton;","import { Dialog, DialogContent, DialogTitle, IconButton, Slide, SliderProps, Typography } from '@mui/material';\r\nimport React, { ReactElement, ReactNode } from 'react';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\n\r\ninterface Props {\r\n    open: boolean,\r\n    title: string,\r\n    onClose(): void,\r\n    children: any\r\n}\r\n\r\nconst Transition = React.forwardRef<unknown, TransitionProps & {\r\n    children: React.ReactElement\r\n}>((props, ref) => {\r\n    return <Slide direction=\"up\" ref={ref} {...props}  />;\r\n});\r\n\r\nconst Modal = ({ open, title, onClose, children }: Props) => {\r\n    return <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        PaperProps={{\r\n            sx: {\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                m: 0,\r\n                position: \"fixed\",\r\n                bottom: 0,\r\n                borderTopLeftRadius: 8,\r\n                borderTopRightRadius: 8,\r\n                borderBottomRightRadius: 0,\r\n                borderBottomLeftRadius: 0\r\n            }\r\n        }}>\r\n        <DialogTitle sx={{ pb: 4 }}>\r\n            {title}\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                onClick={onClose}\r\n                sx={{\r\n                    position: 'absolute',\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                }}\r\n            >\r\n                <CloseIcon />\r\n            </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent sx={{}}>\r\n            {children}\r\n        </DialogContent>\r\n    </Dialog>\r\n}\r\n\r\nexport default Modal;","export const GetExercises = () => {\r\n    var items = localStorage.getItem(\"exercises\");\r\n    return JSON.parse(items);\r\n}\r\n\r\nexport const SetExercises = exercises => {\r\n    console.log(\"Update exercises in local storage...\")\r\n    localStorage.setItem(\"exercises\", JSON.stringify(exercises))\r\n}\r\n\r\nexport const GetExercisesByMuscle = muscle => {\r\n    const items = GetExercises();\r\n    return items.filter(exercise => exercise.muscle == muscle);\r\n}\r\n\r\nexport const AddExercises = exercise => {\r\n    const items = GetExercises();\r\n    items.push(exercise);\r\n    SetExercises(items);\r\n}\r\n\r\nexport const RemoveExercises = id => {\r\n    const items = GetExercises().filter(exercise => exercise.id != id);\r\n    SetExercises(items);\r\n}\r\n\r\nexport const UpdateExercise = exercise => {\r\n    const items = GetExercises().map(e => {\r\n        if(e.id == exercise.id) {\r\n            return exercise;\r\n        }\r\n\r\n        return e;\r\n    })\r\n    SetExercises(items);\r\n}\r\n\r\nexport const CountExercisesByMuscle = muscle => {\r\n    return GetExercisesByMuscle(muscle).length;\r\n}\r\n\r\nexport const GetExerciseById = id => {\r\n    const exercises = GetExercises();\r\n    return exercises.find(e => e.id == id); \r\n}","import { GetExerciseById } from \"../../api/ExercisesAPI\";\r\nimport { GetTraningPrograms } from \"../../api/TraningProgramAPI\"\r\nimport { ExerciseItem, TraningProgram } from \"../../types\";\r\n\r\nexport const GetTraningProgramById = (id: string) => {\r\n    return GetTraningPrograms().find((e: TraningProgram) => e.id == id);\r\n}\r\n\r\nexport const GetUniqueMuscleGroups = (program: TraningProgram) => {\r\n    const res = [...new Set(program.exercises\r\n        .map((item: ExerciseItem) => GetExerciseById(item.id).muscle))]\r\n    return res;\r\n}","import React from 'react';\r\nimport { Paper, Typography, useTheme } from \"@mui/material\"\r\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\r\nimport { Box } from '@mui/system';\r\nimport { GetUniqueMuscleGroups } from \"../service/TraningProgramService\"\r\n\r\nconst TraningProgramCard = (props) => {\r\n    const theme = useTheme();\r\n    const muscleGroups = GetUniqueMuscleGroups(props.item)\r\n        .map(item => MuscleGroupsInfo[item] ? MuscleGroupsInfo[item].locale : '')\r\n        .join();\r\n    return <Paper\r\n        sx={{\r\n            display: \"flex\",\r\n            minHeight: \"160px\",\r\n            flexDirection: 'column',\r\n            p: 1,\r\n            ...props.sx\r\n        }}\r\n        onClick={(e) => props.onClick(e, ModalTypeInfo, props.item)}>\r\n        <Box sx={{ flexGrow: 4 }}>\r\n            {props.withCount && <Typography variant='caption' color=\"secondary\">Упражнений {props.item.exercises.length || 0}</Typography>}\r\n        </Box>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <Typography>{props.item.title}</Typography>\r\n        </Box>\r\n        <Box sx={{ flexGrow: 1, display: 'flex', alignItems: \"end\" }}>\r\n            <Typography variant='caption' color=\"secondary\">{muscleGroups}</Typography>\r\n        </Box>\r\n    </Paper>\r\n}\r\n\r\nexport default TraningProgramCard;","const DatabaseName = \"workout\";\r\n\r\nexport const GetWorkouts = () => {\r\n    var items = localStorage.getItem(DatabaseName);\r\n    return items ? JSON.parse(items) : [];\r\n}\r\n\r\n\r\nexport const SetWorkouts = items => {\r\n    localStorage.setItem(DatabaseName, JSON.stringify(items))\r\n}\r\n\r\nexport const GetWorkoutById = id => {\r\n    return GetWorkouts().find(e => e.id == id);\r\n}","import { addDays, subDays } from \"date-fns\";\r\n\r\nconst PadTo2Digits = (num) => {\r\n    return num.toString().padStart(2, '0');\r\n}\r\n\r\nexport const FormatDateTime = (date) => {\r\n    return (\r\n        [\r\n            date.getFullYear(),\r\n            PadTo2Digits(date.getUTCMonth() + 1),\r\n            PadTo2Digits(date.getUTCDate()),\r\n        ].join('-') +\r\n        ' ' +\r\n        [\r\n            PadTo2Digits(date.getUTCHours()),\r\n            PadTo2Digits(date.getUTCMinutes()),\r\n            PadTo2Digits(date.getUTCSeconds()),\r\n        ].join(':')\r\n    );\r\n}\r\n\r\nexport const FormatDate = (date) => {\r\n    return (\r\n        [\r\n            date.getFullYear(),\r\n            PadTo2Digits(date.getUTCMonth() + 1),\r\n            PadTo2Digits(date.getUTCDate()),\r\n        ].join('-')\r\n    );\r\n}\r\n\r\nexport const MinutesBetweenDates = (from, to) => {\r\n    console.log(`From ${from} - to ${to}`)\r\n    return Math.floor((to.getTime() - from.getTime()) / 1000 / 60);\r\n}\r\n\r\nexport const GetDateRangeByPeriod = period => {\r\n    const date = new Date();\r\n    if (period == \"week\") {\r\n        date.setDate(date.getDate() - 7)\r\n    }\r\n    if (period == \"year\") {\r\n        date.setDate(date.getDate() - 365)\r\n    }\r\n    if (period == \"month\") {\r\n        date.setDate(date.getDate() - 30)\r\n    }\r\n\r\n    return { to: new Date(), from: date }\r\n}\r\n\r\nexport const GetDaysByRange = (startDaysCount, endDaysCount) => {\r\n    const now = new Date(); // get current date\r\n    const buffer = subDays(now, startDaysCount)\r\n\r\n    const result = [];\r\n\r\n    for(let i = 0; i<= startDaysCount + endDaysCount; i++) {\r\n        result.push(addDays(buffer, i))\r\n    }\r\n\r\n    return result;\r\n    \r\n}\r\n\r\nexport const DatesIsEquals = (dateLeft, dateRight) => {\r\n    return FormatDate(dateLeft) == FormatDate(dateRight);\r\n}","import { GetWorkouts, SetWorkouts, GetWorkoutById as ById } from \"../../api/WorkoutAPI\";\r\nimport { DateRange, ExerciseItem, TraningProgram, Workout, WorkoutSet, WorkoutStatus } from \"../../types\";\r\nimport { DatesIsEquals, FormatDate, MinutesBetweenDates } from \"../../utils/DateUtils\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ntype ICreateWorkout = (selectedProgram: TraningProgram) => Workout;\r\n\r\nexport const CreateWorkout: ICreateWorkout = (selectedProgram: TraningProgram) => {\r\n    let workout: Workout = {\r\n        id: uuidv4(),\r\n        traningProgramId: selectedProgram.id,\r\n        startAt: new Date(),\r\n        duration: 0,\r\n        exercises: [],\r\n        status: WorkoutStatus.ACTIVE,\r\n        volume: 0,\r\n        progress: 0\r\n    };\r\n\r\n    workout.exercises = selectedProgram.exercises.map((exercise: ExerciseItem) => {\r\n        const result: ExerciseItem = {\r\n            id: exercise.id,\r\n            sets: exercise.sets.map((set: WorkoutSet) => {\r\n                const result: WorkoutSet = {\r\n                    repeats: set.repeats,\r\n                    weight: 0,\r\n                    completed: false\r\n                }\r\n                return result;\r\n            })\r\n        }\r\n        return result;\r\n    })\r\n\r\n    const items = GetWorkouts();\r\n    items.push(workout);\r\n    SetWorkouts(items);\r\n    return workout;\r\n}\r\n\r\nexport const GetTodayActiveWorkouts = () => {\r\n    return GetWorkouts()\r\n        .filter((e: Workout) => IsActive(e))\r\n}\r\n\r\nexport const GetWorkoutHistory = (date: Date) => {\r\n    return GetWorkouts()\r\n        .filter((e: Workout) => {\r\n            if (!IsActive(e) && DatesIsEquals(new Date(e.startAt), date))\r\n                return true;\r\n\r\n            return false;\r\n        })\r\n}\r\n\r\nexport const GetWorkoutById = (id: string) => {\r\n    return ById(id);\r\n}\r\n\r\nexport const SaveWorkout = (workout: Workout) => {\r\n    const items = GetWorkouts();\r\n    SetWorkouts(items.map((item: Workout) => {\r\n        return item.id == workout.id ? workout : item\r\n    }));\r\n}\r\n\r\nexport const StartWorkout = (workout: Workout) => {\r\n    workout.startAt = new Date();\r\n    workout.status = WorkoutStatus.ACTIVE;\r\n    SaveWorkout(workout)\r\n    return workout;\r\n}\r\n\r\nexport const CompleteWorkout = (workout: Workout) => {\r\n    workout.endAt = new Date();\r\n    workout.status = WorkoutStatus.COMPLETED;\r\n    workout.duration = MinutesBetweenDates(new Date(workout.startAt), workout.endAt);\r\n    workout.volume = workout.exercises\r\n        .reduce((result: number, exercise: ExerciseItem) => result + CalcExerciseVolume(exercise), 0);\r\n    workout.progress = CalcProgressInPercent(workout);\r\n    SaveWorkout(workout)\r\n    return workout;\r\n}\r\n\r\nexport const RejectWorkout = (workout: Workout, cause: string) => {\r\n    workout.endAt = new Date();\r\n    workout.status = WorkoutStatus.REJECTED;\r\n    workout.rejectCause = cause;\r\n    workout.duration = MinutesBetweenDates(new Date(workout.startAt), workout.endAt);\r\n    workout.volume = workout.exercises\r\n        .reduce((result: number, exercise: any) => result + CalcExerciseVolume(exercise), 0);\r\n    workout.progress = CalcProgressInPercent(workout);\r\n    SaveWorkout(workout)\r\n    return workout;\r\n}\r\n\r\nexport const IsNew = (workout: Workout) => {\r\n    return workout.status === WorkoutStatus.NEW;\r\n}\r\n\r\nexport const IsActive = (workout: Workout) => {\r\n    return workout.status === WorkoutStatus.ACTIVE;\r\n}\r\n\r\nexport const IsCompleted = (workout: Workout) => {\r\n    return workout.status === WorkoutStatus.COMPLETED;\r\n}\r\n\r\nexport const IsRejected = (workout: Workout) => {\r\n    return workout.status === WorkoutStatus.REJECTED;\r\n}\r\n\r\nexport const CalcExerciseVolume = (workoutExercise: ExerciseItem) => {\r\n    let result = workoutExercise.sets\r\n        .filter((set: WorkoutSet) => set.completed)\r\n        .reduce((sum: number, set: WorkoutSet) => sum + set.repeats * set.weight, 0);\r\n    return result;\r\n}\r\n\r\nexport const CalcProgressInPercent = (workout: Workout) => {\r\n    let countOfSets = GetWorkoutSetsCount(workout);\r\n    let completedSets = workout.exercises.reduce((result: number, exercise: ExerciseItem) => result + CalcCompletedSets(exercise), 0)\r\n    return parseInt(((completedSets / countOfSets) * 100).toFixed(0))\r\n}\r\n\r\nexport const CalcCompletedSets = (workoutExercise: ExerciseItem) => {\r\n    return workoutExercise.sets.filter((set: WorkoutSet) => set.completed).length\r\n}\r\n\r\nexport const GetWorkoutSetsCount = (workout: Workout) => {\r\n    return workout.exercises.reduce((result: number, exercise: ExerciseItem) => result + exercise.sets.length, 0)\r\n}\r\n\r\nexport const GetWorkoutsByDateRange = (range: DateRange) => {\r\n    return GetWorkouts()\r\n        .filter((workout: Workout) => {\r\n            if (workout.endAt == undefined)\r\n                return false;\r\n            const endAt = new Date(workout.endAt);\r\n            if (endAt >= range.from && endAt <= range.to) {\r\n                return true;\r\n            }\r\n        })\r\n}","import { Box, Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst TextWithIcon = (props) => {\r\n    return <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n        {props.icon}\r\n        <Typography variant=\"caption\" gutterBottom sx={{ mr: 1, ml: 1, mb: 0, lineHeight: 0 }}>{props.text}</Typography>\r\n    </Box>\r\n}\r\n\r\nexport default TextWithIcon;","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardActionArea, CardActions, CardHeader, LinearProgress, styled, useTheme } from \"@mui/material\";\r\nimport { Box, keyframes } from '@mui/system';\r\n\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport TextWithIcon from '../base/TextWithIcon';\r\nimport { FormatDate } from '../../utils/DateUtils';\r\nimport { CalcProgressInPercent } from \"../service/WorkoutService.ts\"\r\n\r\nconst animation = keyframes`\r\n0% {\r\n    background-position: 0% 50%;\r\n}\r\n50% {\r\n    background-position: 100% 50%;\r\n}\r\n100% {\r\n    background-position: 0% 50%;\r\n}\r\n`\r\n\r\nconst TraningCard = (props) => {\r\n    return <CustomCard {...props} />\r\n}\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n    animation: `${animation} 5s ease infinite`,\r\n    backgroundSize: \"200% 100%\"\r\n}))\r\n\r\nconst CustomCard = props => {\r\n    const theme = useTheme();\r\n    const isActive = props.status === \"ACTIVE\";\r\n    const [progress, updateProgress] = useState(0)\r\n    useEffect(() => {\r\n        if (isActive)\r\n            updateProgress(CalcProgressInPercent(props));\r\n    }, [props])\r\n\r\n    console.log(\"progress\", progress)\r\n    return <StyledCard\r\n        onClick={props.onClick}\r\n        sx={{\r\n            display: 'flex',\r\n            backgroundImage: isActive ? 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)' : 'none',\r\n            ...props.sx\r\n        }}>\r\n        <CardActionArea>\r\n            <CardHeader title={props.title}>\r\n            </CardHeader>\r\n            <CardActions sx={{ justifyContent: \"flex-end\", p: 2 }}>\r\n                <Box sx={{ display: 'flex', flexDirection: \"column\", flex: \"1 0 auto\" }}>\r\n                </Box>\r\n                {!isActive && <Box sx={{ display: \"flex\", alignItems: 'center', pl: 1 }}>\r\n                    <TextWithIcon\r\n                        icon={<CalendarMonthIcon />}\r\n                        text={FormatDate(new Date(props.startAt))} />\r\n                    <TextWithIcon\r\n                        icon={<AccessTimeIcon />}\r\n                        text={`${props.duration} мин.`} />\r\n                </Box>}\r\n                {isActive && <Box sx={{ width: \"100%\", position: \"absolute\", bottom: 0, right: 0 }}>\r\n                    <LinearProgress variant=\"determinate\" value={progress} sx={{\r\n                        height: 16\r\n                    }} />\r\n                </Box>}\r\n\r\n            </CardActions>\r\n        </CardActionArea>\r\n    </StyledCard>\r\n}\r\n\r\nexport default TraningCard;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Box } from \"@mui/system\";\r\nimport { useTheme } from '@emotion/react';\r\nimport { Typography } from '@mui/material';\r\nimport { DatesIsEquals, GetDaysByRange } from '../../utils/DateUtils';\r\n\r\nconst id_prefix = \"calendar-element\"\r\n\r\nconst DateSelector = ({ startDaysCount, endDaysCount, selectedDate, onSelectDate }) => {\r\n    const cellRefs = useRef([]);\r\n    const sliderRef = useRef(null)\r\n    const selectedDateRef = useRef(null)\r\n    const theme = useTheme();\r\n    const days = GetDaysByRange(startDaysCount, endDaysCount);\r\n\r\n    const [triggerElementId, updateTriggerElementId] = useState(null)\r\n\r\n    useEffect(() => {\r\n        updateTriggerElementId(selectedDateRef.current.id)\r\n    }, [selectedDate])\r\n\r\n    useEffect(() => {\r\n        if (triggerElementId != null)\r\n            alignWeek();\r\n    }, [triggerElementId])\r\n\r\n    const alignWeek = () => {\r\n        const element = selectedDate.getDay() == 0 ? cellRefs.current[6] : cellRefs.current[selectedDate.getDay() - 1]\r\n        const triggerElement = document.getElementById(triggerElementId);\r\n        console.log(cellRefs)\r\n        console.log(triggerElement.offsetLeft)\r\n        sliderRef.current.scrollTo(triggerElement.offsetLeft - element.offsetLeft, 0)\r\n    }\r\n\r\n    const onScroll = () => {\r\n        const prevTrigger = cellRefs.current[0];\r\n        const triggerElement = document.getElementById(triggerElementId);\r\n        const index = triggerElementId.replace(/\\D/g, \"\");\r\n\r\n    }\r\n\r\n    return <div>\r\n        <Box sx={{\r\n            p: 0,\r\n            display: 'flex',\r\n            width: \"100%\",\r\n            overflowX: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            flexDirection: 'column',\r\n            flexFlow: \"row wrap\"\r\n        }}>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-around',\r\n                alignItems: 'center',\r\n                width: \"100%\"\r\n            }}>\r\n                {[\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\", \"Вск\"].map((date, idx) => <Box key={idx} sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n                    width: \"calc(100% / 7)\",\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}>\r\n                    <Typography color=\"secondary\">{date}</Typography>\r\n                </Box>)}\r\n            </Box>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-around',\r\n                alignItems: 'center',\r\n                width: \"100%\",\r\n                height: \"50px\",\r\n                position: \"relative\"\r\n            }}>\r\n                {[1, 2, 3, 4, 5, 6, 7].map((index, idx) => <Box ref={el => cellRefs.current[idx] = el} key={idx} sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n                    width: \"calc(100% / 7)\",\r\n                    height: \"100%\",\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}>\r\n                </Box>)}\r\n                <Box ref={sliderRef}\r\n                    onTouchEnd={alignWeek}\r\n                    onScroll={onScroll}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        bottom: 0,\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        overflowX: \"scroll\",\r\n                    }}>\r\n                    {days.map((date, index) => <Box\r\n                        id={`${id_prefix}-${index}`}\r\n                        ref={(el) => {\r\n                            if (DatesIsEquals(selectedDate, date))\r\n                                selectedDateRef.current = el\r\n                        }}\r\n                        key={index}\r\n                        sx={{\r\n                            display: 'inline-block',\r\n                            p: 1,\r\n                            width: \"calc(100% / 7)\",\r\n                            height: \"100%\",\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                        }}\r\n                        onClick={() => onSelectDate(date)}>\r\n                        <Box\r\n                            sx={{\r\n                                display: 'flex',\r\n                                height: \"100%\",\r\n                                justifyContent: 'center',\r\n                                alignItems: \"center\",\r\n                                borderRadius: \"50%\",\r\n                                backgroundColor: DatesIsEquals(selectedDate, date) ? theme.palette.secondary.dark : \"transient\"\r\n                            }}>\r\n                            <Typography color=\"secondary\" variant='caption'>{date.getDate()}</Typography>\r\n                        </Box>\r\n                    </Box>)}\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    </div>\r\n}\r\n\r\nexport default DateSelector;","import { Box, Divider, Grid, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GetTraningPrograms } from \"../../api/TraningProgramAPI\";\r\nimport MainButton from \"../base/MainButton\";\r\nimport Modal from \"../base/Modal\";\r\nimport TraningProgramCard from \"../program/TraningProgramCard\";\r\nimport { CreateWorkout, GetTodayActiveWorkouts, GetWorkoutHistory } from \"../service/WorkoutService.ts\";\r\nimport { GetTraningProgramById } from \"../service/TraningProgramService\";\r\nimport TraningCard from \"../traning/TraningCard\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DateSelector from \"../base/DateSelector\";\r\n\r\nconst EmptyResult = () => <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\r\n    <Typography variant=\"caption\">Пока тренировок нет</Typography>\r\n</Box>\r\n\r\nexport const TraningScene = props => {\r\n    const [todayTranings, setTodayTranings] = useState([])\r\n    const [traningHistory, setTraningHistory] = useState([])\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedDate, setSelectedDate] = useState(new Date())\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const todayTranings = GetTodayActiveWorkouts();\r\n        setTodayTranings(todayTranings);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(selectedDate)\r\n        const traningHistory = GetWorkoutHistory(selectedDate);\r\n        setTraningHistory(traningHistory)\r\n    }, [selectedDate])\r\n\r\n    const onStart = async (e, modaType, traningProgram) => {\r\n        const workout = await CreateWorkout(traningProgram);\r\n        navigateToWorkout(workout.id)\r\n    }\r\n\r\n    const handleChangeOpen = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const onChangeModal = () => {\r\n        if (isOpen) {\r\n            closeModal();\r\n        } else {\r\n            handleChangeOpen();\r\n        }\r\n    }\r\n\r\n    const navigateToWorkout = id => {\r\n        navigate(`/workout-process/${id}`)\r\n    }\r\n\r\n    const onSelectDate = newDate => {\r\n        setSelectedDate(newDate)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant='h6' align=\"center\">Мои тренировки</Typography>\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\r\n            <Typography>Активные</Typography>\r\n        </Box>\r\n        {todayTranings.length > 0\r\n            ? <Grid container spacing={2}>\r\n                {todayTranings.map((traning, idx) =>\r\n                    <Grid item key={idx} xs={12}>\r\n                        <TraningCard\r\n                            onClick={() => { navigateToWorkout(traning.id) }}\r\n                            title={GetTraningProgramById(traning.traningProgramId).title}\r\n                            {...traning}\r\n                            duration={traning.duration} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            : <EmptyResult />}\r\n\r\n        <Divider light sx={{ mt: 2, mb: 2 }}></Divider>\r\n\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\r\n            <Typography>История</Typography>\r\n        </Box>\r\n\r\n        <DateSelector startDaysCount={30} endDaysCount={30} selectedDate={selectedDate} onSelectDate={onSelectDate}/>\r\n\r\n        {traningHistory.length > 0\r\n            ? <Grid container spacing={2}>\r\n                {traningHistory.map((traning, idx) =>\r\n                    <Grid item key={idx} xs={12}>\r\n                        <TraningCard\r\n                            title={GetTraningProgramById(traning.traningProgramId).title}\r\n                            onClick={() => { navigateToWorkout(traning.id) }}\r\n                            {...traning}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            : <EmptyResult />}\r\n\r\n\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={() => onChangeModal(null)}\r\n            title=\"Выбери программу тренировок\">\r\n            <Grid container spacing={2}>\r\n                {GetTraningPrograms().map((item, idx) => <Grid item xs={12} key={idx}>\r\n                    <TraningProgramCard\r\n                        onClick={onStart}\r\n                        key={idx}\r\n                        item={item}\r\n                        showCount={false}\r\n                        sx={{ minHeight: \"80px\" }} />\r\n                </Grid>\r\n                )}\r\n            </Grid>\r\n\r\n\r\n        </Modal>\r\n\r\n        <MainButton text=\"Начать тренировку!\" onClick={onChangeModal} />\r\n    </div>\r\n}\r\n\r\nexport default TraningScene;","export type ThemeInitialState = {\r\n    palette: ThemePalette\r\n}\r\n\r\nexport enum ThemePalette {\r\n    light= \"light\", dark = \"dark\"\r\n}","import { Box, FormControl, InputLabel, MenuItem, Select, TextField } from '@mui/material';\r\nimport React from 'react';\r\nimport { MuscleGroupsEnum } from '../Constants';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst ExerciseFrom = (props) => {\r\n    return <Box>\r\n        <TextField\r\n            onChange={(e) => { props.onChange(e, \"title\") }}\r\n            fullWidth\r\n            id=\"exercise-title\"\r\n            label=\"Название\"\r\n            variant=\"standard\"\r\n            value={props.exercise.title}\r\n            sx={{ pt: 1, pb: 1 }} />\r\n\r\n        <FormControl\r\n            variant='standard'\r\n            sx={{ m: 1, ml: 0, mr: 0, pt: 1, pb: 1 }}\r\n            fullWidth>\r\n            <InputLabel id=\"demo-multiple-name-label\">Мышечные группы</InputLabel>\r\n            <Select\r\n                onChange={(e) => { props.onChange(e, \"muscle\") }}\r\n                labelId=\"demo-multiple-name-label\"\r\n                id=\"demo-multiple-name\"\r\n                value={props.exercise.muscle}\r\n                MenuProps={MenuProps}>\r\n                {MuscleGroupsEnum.map((name) => (\r\n                    <MenuItem\r\n                        key={name}\r\n                        value={name}>\r\n                        {name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    </Box>\r\n}\r\n\r\nexport default ExerciseFrom;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport ExerciseFrom from './ExerciseForm';\r\n\r\nconst CreateExercise = (props) => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\" }}>\r\n            <ExerciseFrom\r\n                exercise={props.exercise}\r\n                onChange={props.onChange} />\r\n\r\n            <MainButton text=\"Создать\" onClick={props.onSave} isBottom={true} />\r\n        </Box>\r\n    </div>\r\n};\r\n\r\nexport default CreateExercise;","import { Button } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst RemoveEntityButton = props => {\r\n    return <Button\r\n        onClick={props.onClick}\r\n        fullWidth\r\n        color=\"error\"\r\n        sx={{ mt: 1, pl: 0 }}\r\n        disableRipple>\r\n            {props.text}\r\n    </Button>\r\n}\r\n\r\nexport default RemoveEntityButton;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport RemoveEntityButton from '../base/RemoveEntityButton';\r\nimport ExerciseFrom from './ExerciseForm';\r\n\r\nconst ExerciseInfo = (props) => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\"}}>\r\n            <ExerciseFrom\r\n                exercise={props.exercise}\r\n                onChange={props.onChange} />\r\n\r\n            <RemoveEntityButton onClick={props.onRemove} text=\"Удалить упражнение\"/>\r\n\r\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\r\n        </Box>\r\n    </div>\r\n};\r\n\r\nexport default ExerciseInfo;","import { Accordion as MuiAccordion, AccordionDetails as MuiAccordionDetails, AccordionSummary as MuiAccordionSummary, Badge, Button, Typography, Paper } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\r\nimport { Box, styled } from \"@mui/system\";\r\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo, MuscleGroupEnum, MuscleGroupInfo } from \"../Constants\";\r\nimport { CountExercisesByMuscle, GetExercisesByMuscle } from \"../../api/ExercisesAPI\";\r\nimport { GetMuscleByGroup } from \"../service/MuscleService\";\r\n\r\nconst Accordion = styled((props) => (\r\n    <MuiAccordion elevation={0} {...props} />\r\n))(({ theme }) => ({\r\n    '&:not(:last-child)': {\r\n        borderBottom: 0,\r\n    }\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n    <MuiAccordionSummary\r\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    padding: theme.spacing(1),\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    '& .MuiAccordionSummary-content': {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\r\n}));\r\n\r\nconst ExerciseList = (props) => {\r\n    const [expanded, setExpanded] = useState(null)\r\n\r\n    const handleChangeExpanded = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    const onClickToExercise = (e, exercise) => {\r\n        e.stopPropagation();\r\n        props.onClick(e, ModalTypeInfo, exercise);\r\n    }\r\n\r\n    const calcCount = (muscle) => {\r\n        return CountExercisesByMuscle(muscle);\r\n    }\r\n    \r\n    return <Box sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: 1,\r\n        justifyContent: \"center\"\r\n    }}>\r\n        {MuscleGroupEnum.map((value, idx) =>\r\n            <Paper key={idx}>\r\n                <Typography sx={{p: 1}} variant=\"h5\" color=\"secondary\">{MuscleGroupInfo[value].locale}</Typography>\r\n                {GetMuscleByGroup(value).map((muscle, index) => <Accordion\r\n                    key={index}\r\n                    expanded={expanded == muscle}\r\n                    onChange={handleChangeExpanded(muscle)}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\">\r\n                        <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", pr: 2 }}>\r\n                            {MuscleGroupsInfo[muscle].locale}\r\n                            <Badge showZero badgeContent={calcCount(muscle)} color=\"secondary\" sx={{ zIndex: 0 }}></Badge>\r\n                        </Box>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                onClick={(e) => onClickToExercise(e, exercise)}\r\n                                fullWidth\r\n                                sx={{ justifyContent: \"flex-start\", textAlign: \"left\" }}\r\n                                disableRipple>\r\n                                {exercise.title}\r\n                            </Button>\r\n                        </Box>)}\r\n                    </AccordionDetails>\r\n                </Accordion>)}\r\n            </Paper>\r\n\r\n        )}\r\n        {/* {MuscleGroupsEnum.map((muscle, idx) => )\r\n        } */}\r\n    </Box>\r\n}\r\n\r\nexport default ExerciseList;","import { MuscleEnum } from \"../../types\";\r\nimport { MuscleGroupsInfo } from \"../Constants\";\r\n\r\nexport type IGetMuscleGroup = (group: Number) => MuscleEnum[]\r\n\r\nexport const GetMuscleByGroup = (group: string) => {\r\n    return Object.entries(MuscleGroupsInfo)\r\n        .filter(([key, value]) => {\r\n            if (value.group == group)\r\n                return true;\r\n        })\r\n        .map(([key, value]) => key)\r\n}","import { Box, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { AddExercises, RemoveExercises, UpdateExercise } from \"../../api/ExercisesAPI\";\r\nimport MainButton from \"../base/MainButton\";\r\nimport Modal from \"../base/Modal\";\r\nimport { DefaultExercise, ModalTypeAdd, ModalTypeInfo } from \"../Constants\";\r\nimport CreateExercise from \"../exercise/CreateExercise\";\r\nimport ExerciseInfo from \"../exercise/ExerciseInfo\";\r\nimport ExerciseList from \"../exercise/ExerciseList\";\r\n\r\nconst defaultModalState = {\r\n    open: false,\r\n    type: null,\r\n    title: null\r\n};\r\n\r\nconst ExercisesScene = props => {\r\n    const [modalInfo, setModalInfo] = useState(defaultModalState);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    const handleChangeExercise = (e, field) => {\r\n        var item = selectedItem;\r\n        item[field] = e.target.value;\r\n        setSelectedItem({ ...item });\r\n    }\r\n\r\n    const removeExercise = () => {\r\n        RemoveExercises(selectedItem.id)\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalInfo(defaultModalState);\r\n        setSelectedItem(null)\r\n    }\r\n\r\n    const onChangeModal = (e, type, item) => {\r\n        if (modalInfo.open) {\r\n            closeModal();\r\n        } else {\r\n            setModalInfo({\r\n                open: true,\r\n                type: type,\r\n                title: type == ModalTypeAdd ? \"Создание упражнения\" : null\r\n            });\r\n            setSelectedItem({ ...item });\r\n        }\r\n    }\r\n\r\n    const saveExercise = (e) => {\r\n        UpdateExercise(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    const addExeecise = (e) => {\r\n        AddExercises(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant='h6' align=\"center\">Упражнения</Typography>\r\n        <ExerciseList onClick={onChangeModal} />\r\n        <Modal\r\n            open={modalInfo.open}\r\n            onClose={(e) => onChangeModal(e, null, null)}\r\n            title={modalInfo.title}>\r\n            {modalInfo.type == ModalTypeInfo && <ExerciseInfo\r\n                onChange={handleChangeExercise}\r\n                exercise={selectedItem}\r\n                onRemove={removeExercise}\r\n                onSave={saveExercise} />}\r\n            {modalInfo.type == ModalTypeAdd && <CreateExercise\r\n                onChange={handleChangeExercise}\r\n                exercise={selectedItem}\r\n                onSave={addExeecise} />}\r\n        </Modal>\r\n\r\n        <MainButton text=\"Создать упражнение\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultExercise())} />\r\n    </div>\r\n}\r\n\r\nexport default ExercisesScene;","import { Accordion, AccordionDetails, AccordionSummary as MuiAccordionSummary, Box, Button, styled } from '@mui/material';\r\nimport React from 'react';\r\nimport { GetExercisesByMuscle } from '../../api/ExercisesAPI';\r\nimport MainButton from '../base/MainButton';\r\nimport { MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nconst AccordionSummary = styled((props) => (\r\n    <MuiAccordionSummary\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.light,\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    '& .MuiAccordionSummary-content': {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst ExercisesSelector = (props) => {\r\n    return <div>\r\n        <Box sx={{ pb: 14 }}>\r\n            {MuscleGroupsEnum.map((muscle, idx) => <Accordion\r\n                key={idx}\r\n                expanded={true}>\r\n                <AccordionSummary\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\">\r\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", p: 1 }}>\r\n                        {MuscleGroupsInfo[muscle].locale}\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\r\n                        <Button\r\n                            endIcon={props.isSelected(exercise.id) ? <CheckIcon /> : <div></div>}\r\n                            color=\"secondary\"\r\n                            onClick={(e) => props.handleCheckItem(exercise.id)}\r\n                            fullWidth\r\n                            sx={{ justifyContent: \"space-between\", textAlign: \"left\" }}\r\n                            disableRipple>\r\n                            {exercise.title}\r\n                        </Button>\r\n                    </Box>)}\r\n                </AccordionDetails>\r\n            </Accordion>)}\r\n        </Box>\r\n\r\n        <MainButton text={`Применить`} onClick={props.onSave} isBottom={true} />\r\n    </div>\r\n}\r\n\r\nexport default ExercisesSelector;","import React from 'react';\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst AddSetButton = (props) => {\r\n    return <Button\r\n        size='small'\r\n        variant='contained'\r\n        color=\"secondary\"\r\n        onClick={props.onClick}>\r\n        {props.text}\r\n    </Button>\r\n}\r\n\r\nexport default AddSetButton;","import { Checkbox, Divider, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from '@mui/material';\r\nimport { Box, useTheme } from '@mui/system';\r\nimport React from 'react';\r\nimport AddSetButton from '../base/AddSetButton';\r\nimport { MuscleGroupsInfo } from '../Constants';\r\n\r\nconst SetsTable = ({ item, sets, handleChangeInput, handleChangeCompleted, addSet, disableWeigth, disableCompleted, infoMode, inputMode, handleChangeFloat }) => {\r\n    const theme = useTheme();\r\n    console.log(sets);\r\n\r\n    return <Paper sx={{ p: 1, mb: 2, mt: 1 }}>\r\n        <Box sx={{ display: 'flex' }}>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', pl: 2, pr: 2 }}>\r\n                <Typography>{item.title}</Typography>\r\n                <Typography variant='caption'>{MuscleGroupsInfo[item.muscle].locale}</Typography>\r\n            </Box>\r\n        </Box>\r\n\r\n        <Divider />\r\n\r\n        <Box>\r\n            <TableContainer>\r\n                <Table sx={{ width: \"100%\", tableLayout: 'fixed' }} size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Подход</TableCell>\r\n                            <TableCell align='center'>Повторы</TableCell>\r\n                            {!disableWeigth && <TableCell align='center'>Вес</TableCell>}\r\n                            {!disableCompleted && <TableCell>Выполнен</TableCell>}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {sets.map((set, index) =>\r\n                            <TableRow key={index}>\r\n                                <TableCell>{index + 1}</TableCell>\r\n                                <TableCell align='center'>\r\n                                    {inputMode && <TextField\r\n                                        inputProps={{\r\n                                            sx: { textAlign: \"center\" }\r\n                                        }}\r\n                                        size='small'\r\n                                        name=\"repeats\"\r\n                                        type={\"number\"}\r\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\r\n                                        fullWidth\r\n                                        value={set.repeats} />}\r\n                                    {infoMode && set.repeats}\r\n                                </TableCell>\r\n                                {!disableWeigth && <TableCell align='center'>\r\n                                    {inputMode && <TextField\r\n                                        inputProps={{\r\n                                            sx: { textAlign: \"center\" }\r\n                                        }}\r\n                                        size='small'\r\n                                        name=\"weight\"\r\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\r\n                                        onBlur={e => {handleChangeFloat(e, item, index)}}\r\n                                        fullWidth\r\n                                        value={set.weight} />}\r\n                                    {infoMode && set.weight}\r\n                                </TableCell>}\r\n                                {!disableCompleted && <TableCell align='right'>\r\n                                    <Checkbox\r\n                                        disabled={infoMode}\r\n                                        name=\"completed\"\r\n                                        color='secondary'\r\n                                        checked={set.completed}\r\n                                        onChange={(e) => handleChangeCompleted(e, item, index)} />\r\n                                </TableCell>}\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {inputMode && <Box sx={{ display: 'flex', justifyContent: 'flex-end', pt: 1 }}>\r\n                <AddSetButton text=\"Добавить подход\" onClick={e => addSet(item)} />\r\n            </Box>}\r\n        </Box>\r\n    </Paper>\r\n}\r\n\r\nexport default SetsTable;","import { Box, Button, Grid, TextField, Typography, useTheme } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { GetExerciseById } from '../../api/ExercisesAPI';\r\nimport Modal from '../base/Modal';\r\nimport { DefaultSet } from '../Constants';\r\nimport ExercisesSelector from '../exercise/ExercisesSelector';\r\nimport SetsTable from './SetsTable';\r\n\r\nconst GenerateExercise = id => {\r\n    return {\r\n        id: id,\r\n        sets: [\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            },\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            },\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            },\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nconst TraningProgramForm = props => {\r\n    const [selected, setSelected] = useState([]);\r\n    const [isOpen, setOpen] = useState(false)\r\n    const theme = useTheme();\r\n\r\n    useEffect(() => {\r\n        setSelected([...props.item.exercises])\r\n    }, [])\r\n\r\n    const isSelected = id => {\r\n        return selected.find(e => e.id == id) || false\r\n    }\r\n\r\n    const handleCheckItem = id => {\r\n        if (!isSelected(id)) {\r\n            setSelected([...selected, GenerateExercise(id)])\r\n        } else {\r\n            setSelected(selected.filter(e => e.id != id))\r\n        }\r\n    }\r\n\r\n    const onClose = () => {\r\n        setSelected(props.item.exercises)\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const handleChangeOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const onSaveExercises = () => {\r\n        props.setExercises(selected);\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const handleChangeRepeats = (e, exercise, index) => {\r\n        let target = selected.find(e => e.id == exercise.id);\r\n        if (!e.target.value.match(/^([0-9]{1,})?(\\.)?([0-9]{1,})?$/))\r\n            return;\r\n        target.sets[index].repeats = e.target.value\r\n        setSelected(selected.map(e => {\r\n            if (e.id == target.id)\r\n                return target;\r\n\r\n            return e;\r\n        }))\r\n    }\r\n\r\n    const addSet = (exercise) => {\r\n        let target = selected.find(e => e.id == exercise.id);\r\n        target.sets.push(DefaultSet());\r\n        setSelected(selected.map(e => {\r\n            if (e.id == target.id)\r\n                return target;\r\n\r\n            return e;\r\n        }))\r\n    }\r\n\r\n    return <Box>\r\n        <TextField\r\n            onChange={(e) => { props.onChange(e, \"title\") }}\r\n            fullWidth\r\n            id=\"exercise-title\"\r\n            label=\"Название\"\r\n            variant=\"standard\"\r\n            value={props.item.title}\r\n            sx={{ pt: 1, pb: 1 }} />\r\n\r\n        {props.item.exercises.length == 0 && <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 2 }}>\r\n            <Typography variant='caption'>Упражнения не добавлены</Typography>\r\n        </Box>}\r\n\r\n\r\n        {props.item.exercises.length > 0 && <Grid container spacing={2}>\r\n            {props.item.exercises.map((exercise, idx) => {\r\n                const item = GetExerciseById(exercise.id);\r\n                return <Grid item xs={12} key={idx}>\r\n                    <SetsTable\r\n                        item={item}\r\n                        sets={exercise.sets}\r\n                        handleChangeInput={handleChangeRepeats}\r\n                        disableWeigth disableCompleted inputMode\r\n                        addSet={addSet}\r\n                    />\r\n                </Grid>\r\n            })}\r\n        </Grid>\r\n        }\r\n\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={onClose}\r\n            title=\"Добавление упражнений\">\r\n            <ExercisesSelector\r\n                handleCheckItem={handleCheckItem}\r\n                selectedExercises={props.item.exercises}\r\n                isSelected={isSelected}\r\n                selected={selected}\r\n                onSave={onSaveExercises} />\r\n        </Modal>\r\n\r\n        <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={handleChangeOpen}>\r\n            Изменить упражнения\r\n        </Button>\r\n    </Box >\r\n}\r\n\r\nexport default TraningProgramForm;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport TraningProgramForm from './TraningProgramForm';\r\n\r\nconst CreateTraningProgram = props => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\r\n            <TraningProgramForm\r\n                item={props.item}\r\n                onChange={props.onChange}\r\n                setExercises={props.setExercises}\r\n                onSave={props.setExercises}/>\r\n\r\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\r\n        </Box>\r\n    </div>\r\n}\r\n \r\nexport default CreateTraningProgram;","import { Button } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport { TraningProgram } from '../../types';\r\nimport MainButton from '../base/MainButton';\r\nimport TraningProgramForm from './TraningProgramForm';\r\n\r\ninterface Props {\r\n    traningProgram: TraningProgram,\r\n    onChange(): void,\r\n    setExercises(exercises: any): void,\r\n    onRemove(): void,\r\n    onSave(): void\r\n}\r\n\r\nconst TraningProgramInfo = ({traningProgram, onChange, setExercises, onRemove, onSave}: Props) => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\r\n            <TraningProgramForm\r\n                item={traningProgram}\r\n                onChange={onChange}\r\n                setExercises={setExercises}\r\n                onSave={setExercises}/>\r\n\r\n            <Button\r\n                onClick={onRemove}\r\n                fullWidth\r\n                color=\"error\"\r\n                sx={{  mt: 1, pl: 0 }}\r\n                disableRipple>\r\n                Удалить программу\r\n            </Button>\r\n\r\n            <MainButton text=\"Сохранить\" onClick={onSave} isBottom={true}/>\r\n        </Box>\r\n    </div>\r\n}\r\n \r\nexport default TraningProgramInfo;","import { Grid } from '@mui/material';\r\nimport React from 'react';\r\nimport { GetTraningPrograms } from '../../api/TraningProgramAPI';\r\nimport TraningProgramCard from \"./TraningProgramCard\";\r\n\r\nexport interface TraningProgramListProps {\r\n    onClick(): void,\r\n    withCount?: boolean\r\n}\r\n\r\nconst TraningProgramList = ({ onClick, withCount = false }: TraningProgramListProps) => {\r\n    return <Grid container spacing={2}>\r\n        {GetTraningPrograms().map((program: any, idx: number) => <Grid key={idx} item xs={6}>\r\n            <TraningProgramCard item={program} onClick={onClick} withCount={withCount} />\r\n        </Grid>)}\r\n    </Grid>\r\n}\r\n\r\nexport default TraningProgramList;","import { Box, Typography } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { AddTraningProgram, RemoveTraningProgram, UpdateTraningProgram } from '../../api/TraningProgramAPI';\r\nimport MainButton from '../base/MainButton';\r\nimport Modal from '../base/Modal';\r\nimport { DefaultModalState, DefaultTraningProgram, ModalTypeAdd, ModalTypeInfo } from '../Constants';\r\nimport CreateTraningProgram from '../program/CreateTraningProgram';\r\nimport TraningProgramInfo from '../program/TraningProgramInfo';\r\nimport TraningProgramList from '../program/TraningProgramList.tsx';\r\n \r\nexport const TraningProgramScene = (props) => {\r\n    const [modalInfo, setModalInfo] = useState(DefaultModalState);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    const handleChangeItem = (e, field) => {\r\n        var item = selectedItem;\r\n        item[field] = e.target.value;\r\n        setSelectedItem({ ...item });\r\n    }\r\n\r\n    const removeItem = () => {\r\n        RemoveTraningProgram(selectedItem.id)\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalInfo(DefaultModalState);\r\n        setSelectedItem(null)\r\n    }\r\n\r\n    const onChangeModal = (e, type, item) => {\r\n        if (modalInfo.open) {\r\n            closeModal();\r\n        } else {\r\n            setModalInfo({\r\n                open: true,\r\n                type: type,\r\n                title: type == ModalTypeAdd ? \"Создание программы\" : null\r\n            });\r\n            setSelectedItem({ ...item });\r\n        }\r\n    }\r\n\r\n    const saveItem = (e) => {\r\n        UpdateTraningProgram(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    const addItem = (e) => {\r\n        AddTraningProgram(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    const setExercises = (exercises) => {\r\n        console.log(\"Exercises\", exercises);\r\n        setSelectedItem({...selectedItem, exercises: exercises})\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant='h6' align=\"center\">Тренировочные программы</Typography>\r\n        <TraningProgramList onClick={onChangeModal} withCount/>\r\n        <Modal\r\n            open={modalInfo.open}\r\n            onClose={(e) => onChangeModal(e, null, null)}\r\n            title={modalInfo.title}>\r\n            {modalInfo.type == ModalTypeInfo && <TraningProgramInfo\r\n                onChange={handleChangeItem}\r\n                traningProgram={selectedItem}\r\n                onRemove={removeItem}\r\n                onSave={saveItem}\r\n                setExercises={setExercises} />}\r\n            {modalInfo.type == ModalTypeAdd && <CreateTraningProgram\r\n                onChange={handleChangeItem}\r\n                item={selectedItem}\r\n                onSave={addItem}\r\n                setExercises={setExercises} />}\r\n        </Modal>\r\n\r\n        <MainButton text=\"Создать программу\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultTraningProgram())}/>\r\n    </div>\r\n}\r\n \r\nexport default TraningProgramScene;","import React from \"react\";\r\nimport { BottomNavigation, BottomNavigationAction, Paper } from \"@mui/material\";\r\n\r\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\r\nimport FitbitIcon from '@mui/icons-material/Fitbit';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport QueryStatsIcon from '@mui/icons-material/QueryStats';\r\nimport { Person } from \"@mui/icons-material\";\r\n\r\nconst Navigation = props => {\r\n    return <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\r\n        <BottomNavigation value={props.activeScene} onChange={props.handleChange} showLabels>\r\n            <BottomNavigationAction value=\"traning-programs\" icon={<ListAltIcon />} />\r\n            <BottomNavigationAction value=\"exercises\" icon={<FitbitIcon />} />\r\n            <BottomNavigationAction value=\"traning\" icon={<FitnessCenterIcon />} />\r\n            <BottomNavigationAction value=\"progress\" icon={<QueryStatsIcon />} />\r\n            <BottomNavigationAction value=\"account\" icon={<Person />} />\r\n        </BottomNavigation>\r\n    </Paper>\r\n}\r\n\r\nexport default Navigation;","import { Box, createTheme, CssBaseline, ThemeProvider } from '@mui/material';\r\nimport React, { SyntheticEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux/es/exports';\r\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\r\nimport Navigation from './Navigation'\r\nimport { RootState } from '../../redux/Store';\r\nimport { ThemePalette } from '../../reduxTypes';\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        mode: \"dark\",\r\n        primary: {\r\n            main: \"#EAE1DF\",\r\n            light: \"#f7f3f3\",\r\n            dark: \"#be9d9d\",\r\n            contrastText: \"#322E18\"\r\n        },\r\n        secondary: {\r\n            main: \"#545E56\",\r\n            light: \"#EAECEA\",\r\n            dark: \"#A9B1A9\"\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n    }\r\n});\r\n\r\nconst lightTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#EAE1DF\",\r\n            light: \"#f7f3f3\",\r\n            dark: \"#be9d9d\",\r\n            contrastText: \"#322E18\"\r\n        },\r\n        secondary: {\r\n            main: \"#545E56\",\r\n            light: \"#EAECEA\",\r\n            dark: \"#A9B1A9\"\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n    }\r\n});\r\n\r\nconst Layout = () => {\r\n    const [scene, setScene] = useState(\"traning\")\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const palette: ThemePalette = useSelector((state: RootState) => state.themePalette.palette)\r\n    useEffect(() => {\r\n        const path = location.pathname.substring(1);\r\n        if (path.length == 0 || path.includes('workout-process')) {\r\n            setScene(\"traning\")\r\n        } else {\r\n            setScene(path)\r\n        }\r\n    }, [location])\r\n\r\n    const handleChange = (event: SyntheticEvent, newValue: string) => {\r\n        navigate(`/${newValue}`)\r\n    };\r\n\r\n    return <Box sx={{ display: 'flex', height: '100%', justifyContent: 'center', pb: 7, pt: 0 }}>\r\n        <CssBaseline />\r\n        <ThemeProvider theme={palette === ThemePalette.light ? lightTheme : darkTheme}>\r\n            <Box component={\"main\"} sx={{ p: 1, width: '100%', height: '100%', overflowY: \"scroll\", pb: 10,  bgcolor: 'background.default', color: 'text.primary', }}>\r\n                <Outlet />\r\n                <Navigation activeScene={scene} handleChange={handleChange} />\r\n            </Box>\r\n        </ThemeProvider>\r\n    </Box>\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport Modal from \"../base/Modal\";\r\nimport ExercisesSelector from \"../exercise/ExercisesSelector\";\r\n\r\nconst ChangeExercisesModal = ({isOpen, onClose, handleCheckItem, isSelected, selected, onSaveExercises, selectedExercises}) => {\r\n    return <Modal\r\n        open={isOpen}\r\n        onClose={onClose}\r\n        title=\"Изменить упражнения\">\r\n        <ExercisesSelector\r\n            handleCheckItem={handleCheckItem}\r\n            selectedExercises={selectedExercises}\r\n            isSelected={isSelected}\r\n            selected={selected}\r\n            onSave={onSaveExercises} />\r\n    </Modal>\r\n}\r\n\r\nexport default ChangeExercisesModal;","import { Button, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, TextField } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport Modal from '../base/Modal';\r\n\r\nconst RejectWorkoutModal = ({ isOpen, onClose, rejectCause, handleChange, rejectWorkout }) => {\r\n    return <Modal\r\n        open={isOpen}\r\n        onClose={onClose}\r\n        title=\"Отмена тренировки\">\r\n        <Box>\r\n            <FormControl fullWidth>\r\n                <FormLabel id=\"reject-couse-group\">Укажите причину</FormLabel>\r\n                <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={rejectCause}\r\n                    onChange={handleChange}>\r\n                    <FormControlLabel value=\"Устал\" control={<Radio />} label=\"Устал\" />\r\n                    <FormControlLabel value=\"Плохое самочувствие\" control={<Radio />} label=\"Плохое самочувствие\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <Button onClick={rejectWorkout} fullWidth>Отменить тренировку</Button>\r\n        </Box>\r\n    </Modal>\r\n}\r\n\r\nexport default RejectWorkoutModal;","import { Grid, Paper, Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst WorkoutInfo = ({ workout }) => {\r\n    return <Grid item xs={12} sx={{display: 'flex', gap: 1, flexDirection: 'column'}}>\r\n        <Paper sx={{\r\n            p: 2\r\n        }}>\r\n            <Typography variant='h6'>{`Тоннаж: ${workout.volume} кг`}</Typography>\r\n            <Typography variant='h6'>{`Выполнено на ${workout.progress}%`}</Typography>\r\n        </Paper>\r\n    </Grid>\r\n}\r\n\r\nexport default WorkoutInfo;","import { Button, Grid, Paper, Typography } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { GetExerciseById } from '../../api/ExercisesAPI';\r\nimport MainButton from '../base/MainButton';\r\nimport Modal from '../base/Modal';\r\nimport { DefaultSet, GenerateProgramExercise } from '../Constants';\r\nimport SetsTable from '../program/SetsTable';\r\nimport { GetTraningProgramById } from '../service/TraningProgramService';\r\nimport { CompleteWorkout, GetWorkoutById, IsActive, IsNew, RejectWorkout, SaveWorkout, StartWorkout } from '../service/WorkoutService.ts';\r\nimport ChangeExercisesModal from '../traning/ChangeExercisesModal';\r\nimport RejectWorkoutModal from '../traning/RejectWorkoutModal';\r\nimport WorkoutInfo from '../traning/WorkoutInfo';\r\n\r\nconst WorkoutProcessScene = (props) => {\r\n    const { workoutId } = useParams();\r\n\r\n    const [selected, setSelected] = useState([]);\r\n    const [isOpen, setOpen] = useState(false)\r\n    const [workout, updateWorkout] = useState({ exercises: [] });\r\n    const [traningProgram, updateTraningProgram] = useState({ title: \"\" });\r\n    const [rejectState, updateRejectState] = useState({\r\n        open: false,\r\n        rejectCause: \"Устал\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        let result = GetWorkoutById(workoutId)\r\n        updateWorkout(result)\r\n        setSelected(result.exercises);\r\n        let traningProgram = GetTraningProgramById(result.traningProgramId)\r\n        updateTraningProgram(traningProgram)\r\n    }, [workoutId])\r\n\r\n    useEffect(() => {\r\n        setSelected(workout.exercises)\r\n    }, [workout])\r\n\r\n    const handleChangeReject = () => {\r\n        updateRejectState({ ...rejectState, open: !rejectState.open })\r\n    }\r\n\r\n    const onCloseReject = () => {\r\n        updateRejectState({\r\n            open: false,\r\n            rejectCause: \"\"\r\n        })\r\n    }\r\n\r\n    const handleChangeOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const onClose = () => {\r\n        setSelected(workout.exercises)\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const handleChangeInput = (e, exercise, index) => {\r\n        let target = getTargetExerciseById(exercise.id)\r\n        if (!e.target.value.match(/^([0-9]{1,})?(\\.)?([0-9]{1,})?$/))\r\n            return;\r\n\r\n        let newValue = e.target.value\r\n        target.sets[index][e.target.name] = newValue\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const handleChangeFloat = (e, exercise, index) => {\r\n        let target = getTargetExerciseById(exercise.id)\r\n\r\n        let newValue = parseFloat(e.target.value) || 0\r\n        target.sets[index][e.target.name] = newValue\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const handleChangeCompleted = (e, exercise, index) => {\r\n        let target = getTargetExerciseById(exercise.id)\r\n        target.sets[index].completed = !target.sets[index].completed;\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const getTargetExerciseById = id => {\r\n        return workout.exercises.find(e => e.id == id);\r\n    }\r\n\r\n    const updateWorkoutFilling = (target) => {\r\n        updateWorkout({\r\n            ...workout,\r\n            exercises: workout.exercises.map(e => {\r\n                return e.id == target.id ? target : e;\r\n            })\r\n        })\r\n        SaveWorkout(workout)\r\n    }\r\n\r\n    const addSet = (exercise) => {\r\n        let target = getTargetExerciseById(exercise.id);\r\n        target.sets.push(DefaultSet());\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const startWorkout = () => {\r\n        updateWorkoutFilling(StartWorkout(workout))\r\n    }\r\n\r\n    const completeWorkout = () => {\r\n        updateWorkoutFilling(CompleteWorkout(workout));\r\n    }\r\n\r\n    const rejectWorkout = () => {\r\n        updateWorkoutFilling(RejectWorkout(workout))\r\n        onCloseReject();\r\n    }\r\n\r\n    const handleCheckItem = id => {\r\n        if (!isSelected(id)) {\r\n            setSelected([...selected, GenerateProgramExercise(id)])\r\n        } else {\r\n            setSelected(selected.filter(e => e.id != id))\r\n        }\r\n    }\r\n\r\n    const onSaveExercises = () => {\r\n        workout.exercises = selected;\r\n        updateWorkoutFilling(workout);\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const isSelected = id => {\r\n        return selected.find(e => e.id == id) || false\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant='h6'>Тренировка {traningProgram.title}</Typography>\r\n        <Grid container spacing={2}>\r\n            {!IsActive(workout) && <WorkoutInfo workout={workout} />}\r\n            {workout.exercises.map((exercise, idx) => {\r\n                const item = GetExerciseById(exercise.id);\r\n                return <Grid item xs={12} key={idx}>\r\n                    <SetsTable\r\n                        infoMode={!IsActive(workout)}\r\n                        inputMode={IsActive(workout)}\r\n                        item={item}\r\n                        sets={exercise.sets}\r\n                        handleChangeCompleted={handleChangeCompleted}\r\n                        handleChangeInput={handleChangeInput}\r\n                        handleChangeFloat={handleChangeFloat}\r\n                        addSet={addSet} />\r\n                </Grid>\r\n            })}\r\n        </Grid>\r\n\r\n        <ChangeExercisesModal\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            handleCheckItem={handleCheckItem}\r\n            selectedExercises={workout.exercises}\r\n            isSelected={isSelected}\r\n            selected={selected}\r\n            onSaveExercises={onSaveExercises}\r\n        />\r\n\r\n        <RejectWorkoutModal\r\n            isOpen={rejectState.open}\r\n            rejectCause={rejectState.rejectCause}\r\n            onClose={onCloseReject}\r\n            handleChange={(e) => updateRejectState({ ...rejectState, rejectCause: e.target.value })}\r\n            rejectWorkout={rejectWorkout} />\r\n\r\n        {(IsNew(workout) || IsActive(workout)) && <Button onClick={handleChangeOpen}>Изменить упражнения</Button>}\r\n        {(IsNew(workout) || IsActive(workout)) && <Button onClick={handleChangeReject}>Отменить тренировку</Button>}\r\n\r\n        {IsActive(workout) && <MainButton\r\n            text={\"Завершить\"}\r\n            onClick={completeWorkout}\r\n            sx={{\r\n                backgroundColor: \"#FBAB7E\",\r\n                backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\r\n                color: 'black'\r\n            }} />}\r\n    </div>\r\n}\r\n\r\nexport default WorkoutProcessScene;","import { Box, Typography } from '@mui/material';\r\nimport { useTheme } from '@mui/system';\r\nimport React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nconst CustomTooltip = ({ payload }) => {\r\n\r\n    if (payload == null || payload == 'undefined')\r\n        return <div></div>\r\n\r\n    return <Box sx={{ p: 1, display: 'flex', flexDirection: 'column' }}>\r\n        {payload.length && <Typography variant='caption' color=\"secondary\">{payload[0].payload.date}</Typography>}\r\n        {payload.length && <Typography variant='caption' color=\"secondary\">{payload[0].value}</Typography>}\r\n    </Box>\r\n}\r\n\r\nconst Chart = ({ data, dataKey }) => {\r\n    const theme = useTheme();\r\n\r\n    return <ResponsiveContainer height={160} width=\"100%\">\r\n        <AreaChart\r\n            data={data}>\r\n            <Tooltip\r\n                position={{ y: 0 }}\r\n                content={<CustomTooltip />}\r\n                wrapperStyle={{ backgroundColor: theme.palette.secondary.light, outlineColor: theme.palette.secondary.dark, borderRadius: 1 }} />\r\n            <Area\r\n                type=\"monotone\"\r\n                dataKey={dataKey}\r\n                stroke={theme.palette.secondary.dark}\r\n                fill={theme.palette.secondary.light}\r\n                strokeWidth={2}\r\n            />\r\n        </AreaChart>\r\n    </ResponsiveContainer>\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport { Paper, Typography, useTheme } from \"@mui/material\";\r\nimport Chart from \"./Chart\";\r\nimport { Box } from '@mui/system';\r\n\r\nconst ChartCard = ({ title, maxValue, data, dataKey }) => {\r\n    const theme = useTheme();\r\n    return <Paper sx={{ p: 1, height: 220 }}>\r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Typography variant=\"h6\">{title}</Typography>\r\n            <Typography variant='h6' color={theme.palette.secondary.dark}>Макс. {maxValue}</Typography>\r\n        </Box>\r\n        <Chart data={data} dataKey={dataKey} />\r\n    </Paper>\r\n}\r\n\r\nexport default ChartCard;","import { Fade, Paper, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\n\r\nconst CountChart = ({ title, count, fade }) => {\r\n    return <Paper sx={{ p: 2, height: 140 }}>\r\n        <Box sx={{display: 'flex', flexDirection: \"column\", alignItems: 'stretch', height: \"100%\"}}>\r\n            <Box sx={{ display: 'flex', justifyContent: \"center\", flexGrow: 1 }}>\r\n                <Typography >{title}</Typography>\r\n            </Box>\r\n            <Box sx={{ display: 'flex', justifyContent: \"center\", alignItems: 'center', height: \"100%\", flexGrow: 2 }}>\r\n                <Fade in={fade} timeout={150}>\r\n                    <Typography variant='h2'>{count}</Typography>\r\n                </Fade>\r\n            </Box>\r\n        </Box>\r\n\r\n    </Paper>\r\n}\r\n\r\nexport default CountChart;","import { FormControl, InputLabel, MenuItem, Paper, Select, Typography, useTheme } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\nimport { MuscleGroupsEnum } from '../Constants';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst CustomTooltip = ({ payload, selectedMuscle }) => {\r\n\r\n    if (payload == null || payload == 'undefined')\r\n        return <div></div>\r\n\r\n    return <Box sx={{ p: 1, display: 'flex', flexDirection: 'column' }}>\r\n        {payload.length && <Typography variant='caption' color=\"secondary\">{payload[0].payload.date}</Typography>}\r\n        {payload.length && <Typography variant='caption' color=\"secondary\">{selectedMuscle} - {payload[0].payload.setsCount}</Typography>}\r\n    </Box>\r\n}\r\n\r\nconst MultilineChartCard = ({ data, title }) => {\r\n    const [selectedMuscle, setSelectedMuscle] = useState(\"BICEPS\")\r\n    const [setsData, updateSetsData] = useState([]);\r\n    useEffect(() => {\r\n        if (data != undefined && data.data != undefined) {\r\n            const newData = data.data.find(item => item.muscle == selectedMuscle);\r\n            updateSetsData(newData.data)\r\n        }\r\n            \r\n    }, [selectedMuscle, data])\r\n    const theme = useTheme();\r\n\r\n    return <Paper sx={{ p: 1, height: 300 }}>\r\n        <Box sx={{ display: 'flex', gap: 1, flexDirection: 'column' }}>\r\n            <Typography variant=\"h6\">{title}</Typography>\r\n            <FormControl\r\n                variant='standard'\r\n                sx={{ m: 1, ml: 0, mr: 0, pt: 1, pb: 1 }}\r\n                fullWidth>\r\n                <InputLabel id=\"demo-multiple-name-label\">Мышечные группы</InputLabel>\r\n                <Select\r\n                    onChange={(e) => { setSelectedMuscle(e.target.value) }}\r\n                    labelId=\"demo-multiple-name-label\"\r\n                    id=\"demo-multiple-name\"\r\n                    value={selectedMuscle}\r\n                    MenuProps={MenuProps}>\r\n                    {MuscleGroupsEnum.map((name) => (\r\n                        <MenuItem\r\n                            key={name}\r\n                            value={name}>\r\n                            {name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </Box>\r\n        <ResponsiveContainer height={160} width=\"100%\">\r\n            <AreaChart\r\n                data={setsData}>\r\n                <Tooltip\r\n                    position={{ y: 0 }}\r\n                    content={<CustomTooltip selectedMuscle={selectedMuscle} />}\r\n                    wrapperStyle={{ backgroundColor: theme.palette.secondary.light, outlineColor: theme.palette.secondary.dark, borderRadius: 1 }} />\r\n                <Area\r\n                    type=\"monotone\"\r\n                    dataKey=\"setsCount\"\r\n                    strokeWidth={2}\r\n                    stroke={theme.palette.secondary.dark}\r\n                    fill={theme.palette.secondary.light} />\r\n            </AreaChart>\r\n        </ResponsiveContainer>\r\n    </Paper>\r\n}\r\n\r\nexport default MultilineChartCard;","import { GetExercisesByMuscle } from \"../../api/ExercisesAPI\";\r\nimport { FormatDate, GetDateRangeByPeriod } from \"../../utils/DateUtils\";\r\nimport { MuscleGroupsEnum } from \"../Constants\";\r\nimport { GetWorkoutsByDateRange, IsRejected } from \"./WorkoutService.ts\";\r\n\r\nexport const GetStatisticByPeriod = period => {\r\n    let dateRange = GetDateRangeByPeriod(period);\r\n    const workouts = GetWorkoutsByDateRange(dateRange) || [];\r\n    const maxVolume = workouts.length && Math.max(...workouts.map(workout => workout.volume))\r\n    const maxDuration = workouts.length && Math.max(...workouts.map(workout => workout.duration || 0))\r\n\r\n    return {\r\n        workoutCount: workouts.length,\r\n        fullCompleteCount: workouts.filter(workout => workout.progress == 100).length,\r\n        rejectedCount: workouts.filter(IsRejected).length,\r\n        tonnageData: {\r\n            max: maxVolume,\r\n            data: workouts.map(workout => {\r\n                return {\r\n                    date: FormatDate(new Date(workout.endAt)),\r\n                    volume: workout.volume\r\n                }\r\n            })\r\n        },\r\n        durationData: {\r\n            max: maxDuration,\r\n            data: workouts.map(workout => {\r\n                return {\r\n                    date: FormatDate(new Date(workout.endAt)),\r\n                    duration: workout.duration\r\n                }\r\n            })\r\n        },\r\n        setsData: {\r\n            data: GetSetsData(workouts)\r\n        }\r\n    }\r\n}\r\n\r\nconst GetSetsData = workouts => {\r\n    const result = MuscleGroupsEnum.map(muscle => {\r\n        const res = workouts.map(workout => {\r\n            const allExercisesByMuscleIds = GetExercisesByMuscle(muscle)\r\n                .map(item => item.id);\r\n\r\n            const targetSets = workout.exercises.filter(item => allExercisesByMuscleIds.includes(item.id))\r\n                .flatMap(item => item.sets)\r\n                .filter(set => set.completed)\r\n            return {\r\n                date: FormatDate(new Date(workout.endAt)),\r\n                setsCount: targetSets.length\r\n            }\r\n        })\r\n        return {\r\n            muscle: muscle,\r\n            data: res.filter(item => item.setsCount > 0)\r\n        }\r\n    })\r\n    return result;\r\n\r\n}","import { Grid, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ChartCard from '../base/ChartCard';\r\nimport CountChart from '../base/CountChart';\r\nimport MultilineChartCard from '../base/MultilineChartCard';\r\nimport { MuscleGroupsEnum } from '../Constants';\r\nimport { GetStatisticByPeriod } from '../service/ProgressService';\r\n\r\nconst ProgressScene = () => {\r\n    const [period, updatePeriod] = useState(\"week\")\r\n    const [fade, updateFade] = useState(true)\r\n    const [statistic, updateStatistic] = useState({\r\n        workoutCount: 0,\r\n        fullCompleteCount: 0,\r\n        rejectedCount: 0,\r\n        tonnageData: {\r\n            max: 0,\r\n            data: []\r\n        },\r\n        durationData: {\r\n            max: 0,\r\n            data: []\r\n        },\r\n        setsData: [{\r\n            data: []\r\n        }]\r\n    })\r\n\r\n    useEffect(() => {\r\n        updateStatistic(GetStatisticByPeriod(period))\r\n    }, [period])\r\n\r\n    const handleChangePeriod = e => {\r\n        updateFade(false);\r\n        setTimeout(() => {\r\n            updatePeriod(e.target.value)\r\n            updateFade(true);\r\n        }, 150)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant='h6' align='center'>Тренировочный прогресс</Typography>\r\n        <Box sx={{ display: 'flex', justifyContent: \"center\", pt: 2, pb: 2 }}>\r\n            <ToggleButtonGroup\r\n                value={period}\r\n                size='small'\r\n                fullWidth\r\n                onChange={handleChangePeriod}\r\n                exclusive>\r\n                <ToggleButton value=\"year\" sx={{ p: \"8px\" }}>\r\n                    Год\r\n                </ToggleButton>\r\n                <ToggleButton value=\"week\">\r\n                    Неделя\r\n                </ToggleButton>\r\n                <ToggleButton value=\"month\">\r\n                    Месяц\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n        </Box>\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={4}>\r\n                <CountChart\r\n                    title=\"Тренировок\"\r\n                    fade={fade}\r\n                    count={statistic.workoutCount} />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <CountChart\r\n                    title=\"Завершено\"\r\n                    fade={fade}\r\n                    count={statistic.fullCompleteCount} />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <CountChart\r\n                    title=\"Отменено\"\r\n                    fade={fade}\r\n                    count={statistic.rejectedCount} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <ChartCard\r\n                    title={\"Тоннаж\"}\r\n                    maxValue={statistic.tonnageData.max}\r\n                    dataKey=\"volume\"\r\n                    data={statistic.tonnageData.data} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <ChartCard\r\n                    title={\"Длительность\"}\r\n                    maxValue={statistic.durationData.max}\r\n                    dataKey=\"duration\"\r\n                    data={statistic.durationData.data} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <MultilineChartCard\r\n                title=\"Подходы\"\r\n                data={statistic.setsData}\r\n                lineDataKeys={MuscleGroupsEnum}/>\r\n            </Grid>\r\n        </Grid>\r\n    </div>\r\n}\r\n\r\nexport default ProgressScene;","import { Button } from '@mui/material';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DebugScene = () => {\r\n    const navigate = useNavigate();\r\n    const reboot = () => {\r\n        navigate(\"/\");\r\n        window.location.reload(true);\r\n    }\r\n\r\n    return <div>\r\n        <Button fullWidth color=\"secondary\" onClick={reboot}>Перезагрузить</Button>\r\n        <Button fullWidth color=\"secondary\">Отчистить кеш</Button>\r\n        <Button fullWidth color=\"secondary\">Отчистить данные</Button>\r\n    </div>\r\n}\r\n \r\nexport default DebugScene;","import { AnyAction, createListenerMiddleware, createSlice } from \"@reduxjs/toolkit\";\r\nimport { ThemeInitialState, ThemePalette } from \"../reduxTypes\";\r\n\r\nconst initialState: ThemeInitialState = {\r\n    palette: ThemePalette.light\r\n}\r\n\r\nexport interface ChangeThemePalette extends AnyAction {\r\n    \r\n}\r\n\r\nexport const ThemeSlice = createSlice({\r\n    name: \"ChangeThemePalette\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        changePalette: (state) => {\r\n            if (state.palette === ThemePalette.light)\r\n                state.palette = ThemePalette.dark;\r\n            else\r\n                state.palette = ThemePalette.light\r\n        }\r\n    }\r\n})\r\n\r\nexport const {changePalette} = ThemeSlice.actions;\r\n\r\n\r\nexport default ThemeSlice.reducer;","import { Button, FormControlLabel, FormGroup, List, ListItem, ListItemButton, ListItemText, Switch, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { RootState } from '../../redux/Store';\r\nimport { ThemePalette } from '../../reduxTypes';\r\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\r\nimport { changePalette } from '../../redux/ThemeSlice';\r\n\r\nconst AccountScene = () => {\r\n    const navigation = useNavigate();\r\n    const palette: ThemePalette = useSelector((state: RootState) => state.themePalette.palette)\r\n    const dispatch = useDispatch();\r\n    return <div>\r\n        <Typography>Аккаунт</Typography>\r\n        <Button fullWidth variant='contained' onClick={() => navigation(\"/debug\")}>Debug</Button>\r\n        <FormGroup>\r\n            <FormControlLabel\r\n                control={<Switch checked={palette === ThemePalette.dark} onChange={() => dispatch(changePalette())}/>}\r\n                label=\"Темная тема\" />\r\n        </FormGroup>\r\n    </div>\r\n}\r\n\r\nexport default AccountScene;","import React from \"react\";\r\nimport './App.css';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\n\r\nimport { DefaultExercises, DefaultTraningPrograms } from \"./components/Constants\";\r\nimport { createHashRouter, createRoutesFromElements, Route, RouterProvider } from \"react-router-dom\";\r\n\r\nimport TraningScene from \"./components/scenes/TraningScene\";\r\nimport ExercisesScene from \"./components/scenes/ExercisesScene\";\r\nimport TraningProgramScene from \"./components/scenes/TraningProgramScene\";\r\nimport Layout from \"./components/base/Layout\";\r\nimport WorkoutProcessScene from \"./components/scenes/TraningProcessScene\";\r\nimport ProgressScene from \"./components/scenes/ProgressScene\";\r\nimport DebugScene from \"./components/scenes/DebugScene\";\r\nimport AccountScene from \"./components/scenes/ProfileScene\";\r\n\r\nconst initExercises = () => {\r\n  if (localStorage.getItem(\"exercises\") == null)\r\n    localStorage.setItem(\"exercises\", JSON.stringify(DefaultExercises))\r\n  if (localStorage.getItem(\"traning_programs\") == null)\r\n    localStorage.setItem(\"traning_programs\", JSON.stringify(DefaultTraningPrograms))\r\n}\r\n\r\nconst router = createHashRouter(\r\n  createRoutesFromElements(\r\n    <Route path=\"/\" element={<Layout />}>\r\n      <Route index element={<TraningScene />} />\r\n      <Route path=\"exercises\" element={<ExercisesScene />} />\r\n      <Route path=\"traning-programs\" element={<TraningProgramScene />} />\r\n      <Route path=\"traning\" element={<TraningScene />} />\r\n      <Route path=\"workout-process/:workoutId\" element={<WorkoutProcessScene />} />\r\n      <Route path=\"progress\" element={<ProgressScene/>} />\r\n      <Route path=\"account\" element={<AccountScene />} />\r\n      <Route path=\"debug\" element={<DebugScene/>}></Route>\r\n    </Route>\r\n  )\r\n);\r\n\r\nconst App = () => {\r\n  initExercises();\r\n  return (<RouterProvider router={router} />);\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\n// function forceSWupdate () {\r\n//   if ('serviceWorker' in navigator) {\r\n//     navigator.serviceWorker.getRegistrations().then(function (registrations) {\r\n//       for (let registration of registrations) {\r\n//         registration.update()\r\n//       }\r\n//     })\r\n//   }\r\n// }\r\n\r\n// forceSWupdate()\r\n\r\nexport function register(config) {\r\n  if ('serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n\r\n","import { AnyAction, createListenerMiddleware, Dispatch, ListenerEffectAPI } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./Store\";\r\nimport { changePalette } from \"./ThemeSlice\";\r\n\r\nexport const listenerMiddleware = createListenerMiddleware();\r\n\r\nlistenerMiddleware.startListening({\r\n    actionCreator: changePalette,\r\n    effect: async (action: AnyAction, listenerApi) => {\r\n        console.log(listenerApi.getOriginalState());\r\n        console.log(action.type);\r\n        await listenerApi.delay(1000);\r\n        localStorage.setItem(\"app-settings\", JSON.stringify(listenerApi.getState()))\r\n    }\r\n})","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport { listenerMiddleware } from \"./MiddlewareListener\";\r\nimport ThemeSlice from \"./ThemeSlice\"\r\n\r\nconst loadState = () => {\r\n    try {\r\n        const state = localStorage.getItem(\"app-settings\");\r\n        if (state != undefined)\r\n            return JSON.parse(state);\r\n        else\r\n            return {\r\n                themePalette: {\r\n                    palette: 'light'\r\n                }\r\n            }\r\n    } catch (e) {\r\n        return {\r\n            themePalette: {\r\n                palette: 'light'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        themePalette: ThemeSlice\r\n    },\r\n    preloadedState: loadState(),\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(listenerMiddleware.middleware)\r\n})\r\n\r\nexport default store;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/Store';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n// serviceWorkerRegistration.register();\r\n"],"sourceRoot":""}