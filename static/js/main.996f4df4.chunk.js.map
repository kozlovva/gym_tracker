{"version":3,"sources":["components/Constants.js","api/TraningProgramAPI.js","components/base/AddButton.js","components/base/Modal.js","components/program/TraningProgramCard.js","api/TraningAPI.js","utils/DateUtils.js","components/service/TraningService.js","components/service/TraningProgramService.js","components/base/TextWithIcon.js","components/traning/TraningCard.js","components/scenes/TraningScene.js","api/ExercisesAPI.js","components/exercise/ExerciseForm.js","components/exercise/CreateExercise.js","components/exercise/ExerciseInfo.js","components/exercise/ExerciseList.js","components/scenes/ExercisesScene.js","components/exercise/ExercisesSelector.js","components/program/TraningProgramForm.js","components/program/CreateTraningProgram.js","components/program/TraningProgramInfo.js","components/program/TraningProgramList.js","components/scenes/TraningProgramScene.js","components/base/Navigation.js","components/base/Layout.js","components/scenes/TraningProcessScene.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["MuscleGroupsInfo","BICEPS","locale","TRICEPS","QUADS","GLUTES","ABS","CHEST","SHOULDERS","HAMSTRINGS","FOREARMS","NECK","LATS","LOWER_BACK","MIDDLE_BACK","TRAPS","MuscleGroupsEnum","DefaultExercises","id","title","muscle","DefaultModalState","open","type","DefaultTraningPrograms","description","exercises","GetTraningPrograms","items","localStorage","getItem","JSON","parse","SetTraningPrograms","traningPrograms","console","log","setItem","stringify","AddButton","props","react_default","a","createElement","Paper","sx","position","bottom","left","right","pb","pl","pr","elevation","Button","variant","fullWidth","color","p","onClick","text","Transition","React","forwardRef","ref","Slide","Object","assign","direction","Modal","Dialog","TransitionComponent","PaperProps","height","width","m","borderBottomRightRadius","borderBottomLeftRadius","DialogTitle","IconButton","aria-label","onClose","top","theme","palette","grey","Close_default","DialogContent","children","Card","styled","objectSpread","display","minHeight","_ref","backgroundColor","primary","light","TraningProgramCard","TraningProgramCard_Card","e","item","CardActionArea","CardHeader","showCount","CardContent","Typography","length","GetTranings","PadTo2Digits","num","toString","padStart","FormatDate","date","getFullYear","getUTCMonth","getUTCDate","join","CreateTraning","selectedProgramId","traning","uuidv4","traningProgramId","duration","startAt","endAt","Date","push","SetTranings","GetTraningProgramById","find","TextWithIcon","Box","alignItems","justifyContent","icon","gutterBottom","mr","mb","lineHeight","TraningCard","backgroundImage","CardActions","Box_Box","flexDirection","flex","base_TextWithIcon","CalendarMonth_default","AccessTime_default","concat","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","EmptyResult","TraningScene","_useState","useState","_useState2","slicedToArray","todayTranings","setTodayTranings","_useState3","_useState4","traningHistory","setTraningHistory","_useState5","_useState6","isOpen","setIsOpen","navigate","useNavigate","useEffect","now","filter","GetTodayTranings","GetTraningHistory","onStart","asyncToGenerator","_callee","modaType","traningProgram","workout","_context","navigateToWorkout","_x","_x2","_x3","apply","arguments","handleChangeOpen","onChangeModal","overflow","Grid","container","spacing","map","idx","xs","traning_TraningCard","TraningScene_EmptyResult","Divider","mt","base_Modal","program_TraningProgramCard","base_AddButton","GetExercises","SetExercises","GetExercisesByMuscle","exercise","MenuProps","style","maxHeight","ITEM_HEIGHT","ExerciseFrom","TextField","onChange","label","pt","FormControl","ml","InputLabel","Select","labelId","MenuItem","CreateExercise","flexWrap","ExerciseForm","onSave","ExerciseInfo","onRemove","disableRipple","Accordion","&:not(:last-child)","borderBottom","AccordionSummary","expandIcon","ArrowForwardIosSharp_default","fontSize","_ref2","padding","& .MuiAccordionSummary-expandIconWrapper.Mui-expanded","transform","& .MuiAccordionSummary-content","marginLeft","AccordionDetails","MuiAccordionDetails","_ref3","borderTop","ExerciseList","expanded","setExpanded","calcCount","CountExercisesByMuscle","ExerciseList_Accordion","panel","event","newExpanded","ExerciseList_AccordionSummary","ExpandMore_default","aria-controls","Badge","showZero","badgeContent","ExerciseList_AccordionDetails","index","stopPropagation","onClickToExercise","textAlign","defaultModalState","ExercisesScene","modalInfo","setModalInfo","selectedItem","setSelectedItem","handleChangeExercise","field","target","closeModal","exercise_ExerciseList","exercise_ExerciseInfo","RemoveExercises","UpdateExercise","exercise_CreateExercise","AddExercises","ExercisesSelector","ExercisesSelector_AccordionSummary","endIcon","isSelected","Check_default","handleCheckItem","TraningProgramForm","selected","setSelected","setOpen","toConsumableArray","includes","List","exerciseId","ListItem","ListItemAvatar","Avatar","FitnessCenter_default","ListItemText","secondary","exercise_ExercisesSelector","selectedExercises","setExercises","Add_default","CreateTraningProgram","program_TraningProgramForm","TraningProgramInfo","TraningProgramList","program","TraningProgramScene","handleChangeItem","program_TraningProgramList","program_TraningProgramInfo","RemoveTraningProgram","UpdateTraningProgram","program_CreateTraningProgram","AddTraningProgram","Navigation","BottomNavigation","activeScene","handleChange","showLabels","BottomNavigationAction","ListAlt_default","Fitbit_default","darkTheme","createTheme","main","dark","contrastText","background","default","shape","borderRadius","typography","fontFamily","Layout","scene","setScene","location","useLocation","pathname","substring","CssBaseline","ThemeProvider","component","overflowY","react_router_dist","base_Navigation","newValue","TraningProcessScene","router","createBrowserRouter","createRoutesFromElements","path","element","base_Layout","scenes_TraningScene","scenes_ExercisesScene","scenes_TraningProgramScene","scenes_TraningProcessScene","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0","URL","process","href","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.996f4df4.chunk.js","sourcesContent":["import {v4 as uuidv4} from 'uuid';\n\nexport const MuscleGroupsInfo = {\n    \"BICEPS\": {\n        \"locale\": \"Бицепс\"\n    },\n    \"TRICEPS\": {\n        \"locale\": \"Трицепс\"\n    },\n    \"QUADS\": {\n        \"locale\": \"Передняя поверхность бедра\"\n    },\n    \"GLUTES\": {\n        \"locale\": \"Ягодицы\"\n    },\n    \"ABS\": {\n        \"locale\": \"Пресс\"\n    },\n    \"CHEST\": {\n        \"locale\": \"Грудь\"\n    },\n    \"SHOULDERS\": {\n        \"locale\": \"Плечи\"\n    },\n    \"HAMSTRINGS\": {\n        \"locale\": \"Задняя поверхность бедра\"\n    },\n    \"FOREARMS\": {\n        \"locale\": \"Предплечья\"\n    },\n    \"NECK\": {\n        \"locale\": \"Шея\"\n    },\n    \"LATS\": {\n        \"locale\": \"Широчайшие\"\n    },\n    \"LOWER_BACK\": {\n        \"locale\": \"Разгибатели спины/Поясница\"\n    },\n    \"MIDDLE_BACK\": {\n        \"locale\": \"Середина спины\"\n    },\n    \"TRAPS\": {\n        \"locale\": \"Трапеции\"\n    }\n};\n\nexport const MuscleGroupsEnum = [\n    \"BICEPS\", \n    \"TRICEPS\", \n    \"QUADS\", \n    \"GLUTES\", \n    \"ABS\", \n    \"CHEST\", \n    \"SHOULDERS\", \n    \"HAMSTRINGS\", \n    \"FOREARMS\", \n    \"NECK\", \n    \"LATS\", \n    \"LOWER_BACK\", \n    \"MIDDLE_BACK\", \n    \"TRAPS\"\n];\n\nexport const DefaultExercises = [\n    {\n        \"id\": \"1\",\n        \"title\": \"Подъем штанги на бицепс\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"18\",\n        \"title\": \"Подтягивания обратным хватом\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"19\",\n        \"title\": \"Подъем гантелей в скамье Скотта\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"15\",\n        \"title\": \"Молотки с гантелями\",\n        \"muscle\": \"BICEPS\"\n    }, \n    {\n        \"id\": \"2\",\n        \"title\": \"Французский жим со штангой\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"20\",\n        \"title\": \"Французский со штангой\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"21\",\n        \"title\": \"Жим лежа узким хватом\",\n        \"muscle\": \"TRICEPS\"\n    },\n    {\n        \"id\": \"22\",\n        \"title\": \"Разгибания на трицепс в верхнем блоке\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"3\",\n        \"title\": \"Приседания со штангой\",\n        \"muscle\": \"QUADS\"\n    }, \n    {\n        \"id\": \"23\",\n        \"title\": \"Жим ногами\",\n        \"muscle\": \"QUADS\"\n    }, \n    {\n        \"id\": \"24\",\n        \"title\": \"Разгибания в блоке на квадрицепс\",\n        \"muscle\": \"QUADS\"\n    },\n    {\n        \"id\": \"25\",\n        \"title\": \"Выпады с гантелей\",\n        \"muscle\": \"QUADS\"\n    },  \n    {\n        \"id\": \"4\",\n        \"title\": \"Отведения ноги в блоке\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"26\",\n        \"title\": \"Ягодичный мост\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"27\",\n        \"title\": \"Глубокие приседания с широкой постановкой ног\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"28\",\n        \"title\": \"Отведение ног в стороны в тренажере\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"5\",\n        \"title\": \"Скручивания в римском стуле\",\n        \"muscle\": \"ABS\"\n    }, \n    {\n        \"id\": \"29\",\n        \"title\": \"Скручивания в висе на перекладине\",\n        \"muscle\": \"ABS\"\n    }, \n    {\n        \"id\": \"6\",\n        \"title\": \"Жим со штангой лежа\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"30\",\n        \"title\": \"Жим со штангой лежа на наклонной скамье\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"31\",\n        \"title\": \"Бабочка\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"7\",\n        \"title\": \"Махи с шагтелями в стороны\",\n        \"muscle\": \"SHOULDERS\"\n    },\n    {\n        \"id\": \"16\",\n        \"title\": \"Армейский жим\",\n        \"muscle\":\"SHOULDERS\"\n    },\n    {\n        \"id\": \"17\",\n        \"title\": \"Жим гантелей сидя\",\n        \"muscle\": \"SHOULDERS\"\n    }, \n    {\n        \"id\": \"8\",\n        \"title\": \"Румынская тяга\",\n        \"muscle\": \"HAMSTRINGS\"\n    }, \n    {\n        \"id\": \"9\",\n        \"title\": \"Обезьяний хват\",\n        \"muscle\": \"FOREARMS\"\n    }, \n    {\n        \"id\": \"10\",\n        \"title\": \"Скричивания шеи с блином\",\n        \"muscle\": \"NECK\"\n    }, \n    {\n        \"id\": \"11\",\n        \"title\": \"Подтягивания\",\n        \"muscle\": \"LATS\"\n    }, \n    {\n        \"id\": \"12\",\n        \"title\": \"Экстензия\",\n        \"muscle\": \"LOWER_BACK\"\n    }, \n    {\n        \"id\": \"13\",\n        \"title\": \"Тяга нижнего блока\",\n        \"muscle\": \"MIDDLE_BACK\"\n    }, \n    {\n        \"id\": \"14\",\n        \"title\": \"Шраги с гантелями\",\n        \"muscle\": \"TRAPS\"\n    }\n]\n\nexport const ModalTypeInfo = \"INFO\";\nexport const ModalTypeAdd = \"ADD\";\n\nexport const DefaultExercise = () => {\n    return {\n        \"id\": uuidv4(),\n        title: \"\",\n        muscle: \"BICEPS\"\n    }\n}\n\nexport const DefaultModalState = {\n    open: false,\n    type: null,\n    title: null\n};\n\nexport const DefaultTraningProgram = () => {\n    return {\n        \"id\": uuidv4(),\n        \"title\": \"\",\n        \"description\": \"\",\n        \"exercises\": []\n    }\n}\n\nexport const DefaultTraningPrograms = [\n    {\n        \"id\": \"1\",\n        \"title\": \"Спина-трицепс\",\n        \"description\": \"\",\n        \"exercises\": [\"1\", \"2\"]\n    },\n    {\n        \"id\": \"2\",\n        \"title\": \"Грудь-бицепс\" ,\n        \"description\": \"\",\n        \"exercises\": []\n    },\n    {\n        \"id\": \"3\",\n        \"title\": \"Ноги-плечи\",\n        \"description\": \"\",\n        \"exercises\": []\n    },\n    {\n        \"id\": \"4\",\n        \"title\": \"Тяни (спина-бицепс)\",\n        \"description\": \"\",\n        \"exercises\": []\n    },\n    {\n        \"id\": \"5\",\n        \"title\": \"Тяни (ноги-плечи)\",\n        \"description\": \"\",\n        \"exercises\": []\n    },\n    {\n        \"id\": \"6\",\n        \"title\": \"Толкай (грудь-трицепс)\",\n        \"description\": \"\",\n        \"exercises\": []\n    },\n    {\n        \"id\": \"7\",\n        \"title\": \"Толкай (ноги-плечи)\",\n        \"description\": \"\",\n        \"exercises\": []\n    }\n]\n\nexport const DefaultTraning = () =>  {\n    return {\n        \"id\": uuidv4(),\n        \"traningProgramId\": \"\",\n        \"duration\": \"\",\n        \"startAt\": \"\",\n        \"endAt\": \"\"\n    }\n}","export const GetTraningPrograms = () => {\n    var items = localStorage.getItem(\"traning_programs\");\n    return items != null ? JSON.parse(items) : [];\n}\n\nexport const SetTraningPrograms = (traningPrograms) => {\n    console.log(\"Update traning program in local storage...\")\n    localStorage.setItem(\"traning_programs\", JSON.stringify(traningPrograms))\n}\n\nexport const AddTraningProgram = exercise => {\n    const items = GetTraningPrograms();\n    items.push(exercise);\n    SetTraningPrograms(items);\n}\n\nexport const RemoveTraningProgram = id => {\n    const items = GetTraningPrograms().filter(exercise => exercise.id != id);\n    SetTraningPrograms(items);\n}\n\nexport const UpdateTraningProgram = exercise => {\n    const items = GetTraningPrograms().map(e => {\n        if(e.id == exercise.id) {\n            \n            return exercise;\n        }\n\n        return e;\n    })\n    SetTraningPrograms(items);\n}\n\n\nexport const GetTraningProgramById = id => {\n    const exercises = GetTraningPrograms();\n    return exercises.find(e => e.id == id); \n}","import React from \"react\";\nimport { Button, Paper } from \"@mui/material\"\n\n\n\nconst AddButton = props => {\n    return <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, pb: 8, pl: 1, pr: 1 }} elevation={3}>\n        <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"secondary\"\n            sx={{ p: 2 }}\n            onClick={props.onClick}>\n            {props.text}\n        </Button>\n    </Paper>\n}\n\nexport default AddButton;","import { Dialog, DialogContent, DialogTitle, IconButton, Slide, Typography } from '@mui/material';\nimport React from 'react';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Modal = (props) => {\n    return <Dialog\n        open={props.open}\n        TransitionComponent={Transition}\n        PaperProps={{\n            sx: {\n                height: \"100%\",\n                width: \"100%\",\n                m: 0,\n                position: \"fixed\",\n                bottom: 0,\n                borderBottomRightRadius: 0,\n                borderBottomLeftRadius: 0\n            }\n        }}>\n        <DialogTitle>\n            {props.title}\n            <IconButton\n                aria-label=\"close\"\n                onClick={props.onClose}\n                sx={{\n                    position: 'absolute',\n                    right: 8,\n                    top: 8,\n                    color: (theme) => theme.palette.grey[500],\n                }}\n            >\n                <CloseIcon />\n            </IconButton>\n        </DialogTitle>\n        <DialogContent sx={{}}>\n            {props.children}\n        </DialogContent>\n    </Dialog>\n}\n\nexport default Modal;","import React from 'react';\nimport { Card as MuiCard, CardActionArea, CardContent, CardHeader, styled, Typography } from \"@mui/material\"\nimport { ModalTypeInfo } from '../Constants';\n\n\nconst Card = styled((props) => (\n    <MuiCard sx={{ display: \"flex\", minHeight: \"180px\", ...props.sx }} {...props} />\n))(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light\n}))\n\nconst TraningProgramCard = (props) => {\n\n    return <Card sx={props.sx}\n        onClick={(e) => props.onClick(e, ModalTypeInfo, props.item)}>\n        <CardActionArea>\n            <CardHeader title={props.item.title}>\n            </CardHeader>\n            \n            {props.showCount && <CardContent>\n                <Typography variant='caption'>Кол-во упражнений: {props.item.exercises.length || 0}</Typography>\n            </CardContent>}\n        </CardActionArea>\n    </Card>\n}\n\nexport default TraningProgramCard;","const DatabaseName = \"traning\";\n\nexport const GetTranings = () => {\n    var items = localStorage.getItem(DatabaseName);\n    return items ? JSON.parse(items) : [];\n}\n\n\nexport const SetTranings = items => {\n    localStorage.setItem(DatabaseName, JSON.stringify(items))\n}","const PadTo2Digits = (num) => {\n    return num.toString().padStart(2, '0');\n}\n\nexport const FormatDateTime = (date) => {\n    return (\n        [\n            date.getFullYear(),\n            PadTo2Digits(date.getUTCMonth() + 1),\n            PadTo2Digits(date.getUTCDate()),\n        ].join('-') +\n        ' ' +\n        [\n            PadTo2Digits(date.getUTCHours()),\n            PadTo2Digits(date.getUTCMinutes()),\n            PadTo2Digits(date.getUTCSeconds()),\n        ].join(':')\n    );\n}\n\nexport const FormatDate = (date) => {\n    return (\n        [\n            date.getFullYear(),\n            PadTo2Digits(date.getUTCMonth() + 1),\n            PadTo2Digits(date.getUTCDate()),\n        ].join('-')\n    );\n}","import { GetTranings, SetTranings } from \"../../api/TraningAPI\";\nimport { FormatDate } from \"../../utils/DateUtils\";\nimport { DefaultTraning } from \"../Constants\"\n\nexport const CreateTraning = (selectedProgramId) => {\n    const traning = DefaultTraning();\n    traning.traningProgramId = selectedProgramId;\n    traning.startAt = new Date();\n\n    const items = GetTranings();\n    items.push(traning);\n    SetTranings(items);\n    return traning;\n}\n\nexport const GetTodayTranings = () => {\n    var now = new Date();\n    return GetTranings()\n        .filter(e => FormatDate(new Date(e.startAt)) == FormatDate(now))\n}\n\nexport const GetTraningHistory = () => {\n    var now = new Date();\n    return GetTranings()\n        .filter(e => FormatDate(new Date(e.startAt)) != FormatDate(now))\n}","import { GetTraningPrograms } from \"../../api/TraningProgramAPI\"\n\nexport const GetTraningProgramById = id => {\n    return GetTraningPrograms().find(e => e.id == id);\n}","import { Box, Typography } from '@mui/material';\nimport React from 'react';\n\nconst TextWithIcon = (props) => {\n    return <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n        {props.icon}\n        <Typography variant=\"caption\" gutterBottom sx={{ mr: 1, mb: 0, lineHeight: 0 }}>{props.text}</Typography>\n    </Box>\n}\n\nexport default TextWithIcon;","import React from 'react';\nimport { Card, CardActionArea, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport Tag from '../base/Tag';\nimport { Box } from '@mui/system';\n\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport TextWithIcon from '../base/TextWithIcon';\n\n\n\nconst TraningCard = (props) => {\n    return <Card\n        onClick={props.onClick}\n        sx={{\n            display: 'flex',\n            backgroundColor: \"#FBAB7E\",\n            backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)'\n        }}>\n        <CardActionArea>\n            <CardHeader title={props.title}>\n            </CardHeader>\n            <CardActions sx={{ justifyContent: \"flex-end\", p: 2 }}>\n                <Box sx={{ display: 'flex', flexDirection: \"column\", flex: \"1 0 auto\" }}>\n                </Box>\n                <Box sx={{ display: \"flex\", alignItems: 'center', pl: 1 }}>\n                    <TextWithIcon\n                        icon={<CalendarMonthIcon />}\n                        text={props.date} />\n                    <TextWithIcon\n                        icon={<AccessTimeIcon />}\n                        text={`${props.duration} минут`} />\n                </Box>\n            </CardActions>\n        </CardActionArea>\n    </Card>;\n}\n\nexport default TraningCard;","import { Box, Card, CardActionArea, CardHeader, Divider, Grid, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { GetTraningPrograms } from \"../../api/TraningProgramAPI\";\nimport AddButton from \"../base/AddButton\";\nimport Modal from \"../base/Modal\";\nimport TraningProgramCard from \"../program/TraningProgramCard\";\nimport { CreateTraning, GetTodayTranings, GetTraningHistory } from \"../service/TraningService\";\nimport { GetTraningProgramById } from \"../service/TraningProgramService\";\nimport TraningCard from \"../traning/TraningCard\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst EmptyResult = () => <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\n    <Typography variant=\"caption\">Пока тренировок нет</Typography>\n</Box>\n\nexport const TraningScene = props => {\n    const [todayTranings, setTodayTranings] = useState([])\n    const [traningHistory, setTraningHistory] = useState([])\n    const [isOpen, setIsOpen] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const todayTranings = GetTodayTranings();\n        setTodayTranings(todayTranings);\n        const traningHistory = GetTraningHistory();\n        setTraningHistory(traningHistory)\n    }, [])\n\n    const onStart = async (e, modaType, traningProgram) => {\n        const workout = await CreateTraning(traningProgram.id);\n        navigateToWorkout(workout.id)\n    }\n\n    const handleChangeOpen = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const closeModal = () => {\n        handleChangeOpen();\n    }\n\n    const onChangeModal = () => {\n        if (isOpen) {\n            closeModal();\n        } else {\n            handleChangeOpen();\n        }\n    }\n\n    const navigateToWorkout = id => {\n        navigate(`/workout-process/${id}`)\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\",\n    }}>\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\n            <Typography>Сегодня</Typography>\n        </Box>\n        {todayTranings.length > 0\n            ? <Grid container spacing={2}>\n                {todayTranings.map((traning, idx) =>\n                    <Grid item key={idx} xs={12}>\n                        <TraningCard\n                            onClick={() => {navigateToWorkout(traning.id)}}\n                            title={GetTraningProgramById(traning.traningProgramId).title}\n                            date={traning.date}\n                            duration={traning.duration} />\n                    </Grid>\n                )}\n            </Grid>\n            : <EmptyResult />}\n\n\n\n        <Divider light sx={{ mt: 2, mb: 2 }}></Divider>\n\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\n            <Typography>История</Typography>\n        </Box>\n\n        {traningHistory.length > 0\n            ? <Grid container spacing={2}>\n                {traningHistory.map((traning, idx) =>\n                    <Grid item key={idx} xs={12}>\n                        <TraningCard\n                            title={GetTraningProgramById(traning.traningProgramId).title}\n                            date={traning.date}\n                            duration={traning.duration} />\n                    </Grid>\n                )}\n            </Grid>\n            : <EmptyResult />}\n\n\n        <Modal\n            open={isOpen}\n            onClose={() => onChangeModal(null)}\n            title=\"Выбери программу тренировок\">\n            <Grid container spacing={2}>\n                {GetTraningPrograms().map((item, idx) => <Grid item xs={12} key={idx}>\n                    <TraningProgramCard\n                        onClick={onStart}\n                        key={idx}\n                        item={item}\n                        showCount={false}\n                        sx={{ minHeight: \"80px\" }} />\n                </Grid>\n                )}\n            </Grid>\n\n\n        </Modal>\n\n        <AddButton text=\"Начать тренировку!\" onClick={onChangeModal} />\n    </Box>\n}\n\nexport default TraningScene;","export const GetExercises = () => {\n    var items = localStorage.getItem(\"exercises\");\n    return JSON.parse(items);\n}\n\nexport const SetExercises = exercises => {\n    console.log(\"Update exercises in local storage...\")\n    localStorage.setItem(\"exercises\", JSON.stringify(exercises))\n}\n\nexport const GetExercisesByMuscle = muscle => {\n    const items = GetExercises();\n    return items.filter(exercise => exercise.muscle == muscle);\n}\n\nexport const AddExercises = exercise => {\n    const items = GetExercises();\n    items.push(exercise);\n    SetExercises(items);\n}\n\nexport const RemoveExercises = id => {\n    const items = GetExercises().filter(exercise => exercise.id != id);\n    SetExercises(items);\n}\n\nexport const UpdateExercise = exercise => {\n    const items = GetExercises().map(e => {\n        if(e.id == exercise.id) {\n            return exercise;\n        }\n\n        return e;\n    })\n    SetExercises(items);\n}\n\nexport const CountExercisesByMuscle = muscle => {\n    return GetExercisesByMuscle(muscle).length;\n}\n\nexport const GetExerciseById = id => {\n    const exercises = GetExercises();\n    return exercises.find(e => e.id == id); \n}","import { Box, FormControl, InputLabel, MenuItem, Select, TextField } from '@mui/material';\nimport React from 'react';\nimport { MuscleGroupsEnum } from '../Constants';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst ExerciseFrom = (props) => {\n    return <Box>\n        <TextField\n            onChange={(e) => { props.onChange(e, \"title\") }}\n            fullWidth\n            id=\"exercise-title\"\n            label=\"Название\"\n            variant=\"standard\"\n            value={props.exercise.title}\n            sx={{ pt: 1, pb: 1 }} />\n\n        <FormControl\n            variant='standard'\n            sx={{ m: 1, ml: 0, mr: 0, pt: 1, pb: 1 }}\n            fullWidth>\n            <InputLabel id=\"demo-multiple-name-label\">Мышечные группы</InputLabel>\n            <Select\n                onChange={(e) => { props.onChange(e, \"muscle\") }}\n                labelId=\"demo-multiple-name-label\"\n                id=\"demo-multiple-name\"\n                value={props.exercise.muscle}\n                MenuProps={MenuProps}>\n                {MuscleGroupsEnum.map((name) => (\n                    <MenuItem\n                        key={name}\n                        value={name}>\n                        {name}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    </Box>\n}\n\nexport default ExerciseFrom;","import { Button, Card, CardActions, CardContent, createTheme, FormControl, InputLabel, MenuItem, OutlinedInput, Select, TextField, ThemeProvider, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport AddButton from '../base/AddButton';\nimport { MuscleGroupsEnum } from '../Constants';\nimport ExerciseFrom from './ExerciseForm';\n\nconst CreateExercise = (props) => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\" }}>\n            <ExerciseFrom\n                exercise={props.exercise}\n                onChange={props.onChange} />\n\n            <AddButton text=\"Создать\" onClick={props.onSave} />\n        </Box>\n    </div>\n};\n\nexport default CreateExercise;","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport AddButton from '../base/AddButton';\nimport ExerciseFrom from './ExerciseForm';\n\nconst ExerciseInfo = (props) => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\" }}>\n            <ExerciseFrom\n                exercise={props.exercise}\n                onChange={props.onChange} />\n\n            <Button\n                onClick={props.onRemove}\n                fullWidth\n                color=\"error\"\n                sx={{ justifyContent: \"flex-start\", mt: 1, pl: 0 }}\n                disableRipple>\n                Удалить упражнение\n            </Button>\n\n            <AddButton text=\"Сохранить\" onClick={props.onSave} />\n        </Box>\n    </div>\n};\n\nexport default ExerciseInfo;","import { Accordion as MuiAccordion, AccordionDetails as MuiAccordionDetails, AccordionSummary as MuiAccordionSummary, Badge, Button } from \"@mui/material\";\nimport React, { useState } from \"react\";\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport { Box, styled } from \"@mui/system\";\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo } from \"../Constants\";\nimport { CountExercisesByMuscle, GetExercisesByMuscle } from \"../../api/ExercisesAPI\";\n\nconst Accordion = styled((props) => (\n    <MuiAccordion elevation={0} {...props} />\n))(({ theme }) => ({\n    '&:not(:last-child)': {\n        borderBottom: 0,\n    }\n}));\n\nconst AccordionSummary = styled((props) => (\n    <MuiAccordionSummary\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n        {...props}\n    />\n))(({ theme }) => ({\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.primary.light,\n    flexDirection: 'row-reverse',\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(90deg)',\n    },\n    '& .MuiAccordionSummary-content': {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n    padding: theme.spacing(2),\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\nconst ExerciseList = (props) => {\n    const [expanded, setExpanded] = useState(null)\n\n    const handleChangeExpanded = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const onClickToExercise = (e, exercise) => {\n        e.stopPropagation();\n        props.onClick(e, ModalTypeInfo, exercise);\n    }\n\n    const calcCount = (muscle) => {\n        return CountExercisesByMuscle(muscle);\n    }\n\n    return <div>\n        {MuscleGroupsEnum.map((muscle, idx) => <Accordion\n            key={idx}\n            expanded={expanded == muscle}\n            onChange={handleChangeExpanded(muscle)}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1bh-content\"\n                id=\"panel1bh-header\">\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", pr: 2 }}>\n                    {MuscleGroupsInfo[muscle].locale}\n                    <Badge showZero badgeContent={calcCount(muscle)} color=\"secondary\"></Badge>\n                </Box>\n            </AccordionSummary>\n            <AccordionDetails>\n                {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\n                    <Button\n                        color=\"secondary\"\n                        onClick={(e) => onClickToExercise(e, exercise)}\n                        fullWidth\n                        sx={{ justifyContent: \"flex-start\", textAlign: \"left\" }}\n                        disableRipple>\n                        {exercise.title}\n                    </Button>\n                </Box>)}\n            </AccordionDetails>\n        </Accordion>)\n        }\n    </div >\n}\n\nexport default ExerciseList;","import { Box } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { AddExercises, RemoveExercises, UpdateExercise } from \"../../api/ExercisesAPI\";\nimport AddButton from \"../base/AddButton\";\nimport Modal from \"../base/Modal\";\nimport { DefaultExercise, ModalTypeAdd, ModalTypeInfo } from \"../Constants\";\nimport CreateExercise from \"../exercise/CreateExercise\";\nimport ExerciseInfo from \"../exercise/ExerciseInfo\";\nimport ExerciseList from \"../exercise/ExerciseList\";\n\nconst defaultModalState = {\n    open: false,\n    type: null,\n    title: null\n};\n\nconst ExercisesScene = props => {\n    const [modalInfo, setModalInfo] = useState(defaultModalState);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const handleChangeExercise = (e, field) => {\n        var item = selectedItem;\n        item[field] = e.target.value;\n        setSelectedItem({ ...item });\n    }\n\n    const removeExercise = () => {\n        RemoveExercises(selectedItem.id)\n        closeModal();\n    }\n\n    const closeModal = () => {\n        setModalInfo(defaultModalState);\n        setSelectedItem(null)\n    }\n\n    const onChangeModal = (e, type, item) => {\n        if (modalInfo.open) {\n            closeModal();\n        } else {\n            setModalInfo({\n                open: true,\n                type: type,\n                title: type == ModalTypeAdd ? \"Создание упражнения\" : null\n            });\n            setSelectedItem({ ...item });\n        }\n    }\n\n    const saveExercise = (e) => {\n        UpdateExercise(selectedItem);\n        closeModal();\n    }\n\n    const addExeecise = (e) => {\n        AddExercises(selectedItem);\n        closeModal();\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\",\n    }}>\n        <ExerciseList onClick={onChangeModal} />\n        <Modal\n            open={modalInfo.open}\n            onClose={(e) => onChangeModal(e, null, null)}\n            title={modalInfo.title}>\n            {modalInfo.type == ModalTypeInfo && <ExerciseInfo\n                onChange={handleChangeExercise}\n                exercise={selectedItem}\n                onRemove={removeExercise}\n                onSave={saveExercise} />}\n            {modalInfo.type == ModalTypeAdd && <CreateExercise\n                onChange={handleChangeExercise}\n                exercise={selectedItem}\n                onSave={addExeecise} />}\n        </Modal>\n\n        <AddButton text=\"Создать упражнение\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultExercise())} />\n    </Box>\n}\n\nexport default ExercisesScene;","import { Accordion, AccordionDetails, AccordionSummary as MuiAccordionSummary, Box, Button, styled } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { GetExercisesByMuscle } from '../../api/ExercisesAPI';\nimport AddButton from '../base/AddButton';\nimport { MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\nimport CheckIcon from '@mui/icons-material/Check';\n\nconst AccordionSummary = styled((props) => (\n    <MuiAccordionSummary\n        {...props}\n    />\n))(({ theme }) => ({\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.primary.light,\n    flexDirection: 'row-reverse',\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(90deg)',\n    },\n    '& .MuiAccordionSummary-content': {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst ExercisesSelector = (props) => {\n    return <div>\n        <Box sx={{ pb: 14 }}>\n            {MuscleGroupsEnum.map((muscle, idx) => <Accordion\n                key={idx}\n                expanded={true}>\n                <AccordionSummary\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\">\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", p: 1 }}>\n                        {MuscleGroupsInfo[muscle].locale}\n                    </Box>\n                </AccordionSummary>\n                <AccordionDetails>\n                    {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\n                        <Button\n                            endIcon={props.isSelected(exercise.id) ? <CheckIcon /> : <div></div>}\n                            color=\"secondary\"\n                            onClick={(e) => props.handleCheckItem(exercise.id)}\n                            fullWidth\n                            sx={{ justifyContent: \"space-between\", textAlign: \"left\" }}\n                            disableRipple>\n                            {exercise.title}\n                        </Button>\n                    </Box>)}\n                </AccordionDetails>\n            </Accordion>)}\n        </Box>\n\n        <AddButton text={`Применить`} onClick={props.onSave} />\n    </div>\n}\n\nexport default ExercisesSelector;","import { Avatar, Box, Button, IconButton, List, ListItem, ListItemAvatar, ListItemText, TextField, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport AddIcon from '@mui/icons-material/Add';\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\nimport { GetExerciseById } from '../../api/ExercisesAPI';\nimport Modal from '../base/Modal';\nimport ExercisesSelector from '../exercise/ExercisesSelector';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst TraningProgramForm = props => {\n    const [selected, setSelected] = useState([]);\n    const [isOpen, setOpen] = useState(false)\n\n    useEffect(() => {\n        setSelected([...props.item.exercises])\n    }, [])\n\n    const isSelected = id => {\n        return selected.includes(id)\n    }\n\n    const handleCheckItem = id => {\n        if (!isSelected(id)) {\n            setSelected([...selected, id])\n        } else {\n            setSelected(selected.filter(e => e != id))\n        }\n    }\n\n    const onClose = () => {\n        setSelected(props.item.exercises)\n        handleChangeOpen();\n    }\n\n    const handleChangeOpen = () => {\n        setOpen(!isOpen)\n    }\n\n    const onSaveExercises = () => {\n        props.setExercises(selected);\n        handleChangeOpen();\n    }\n\n    return <Box>\n        <TextField\n            onChange={(e) => { props.onChange(e, \"title\") }}\n            fullWidth\n            id=\"exercise-title\"\n            label=\"Название\"\n            variant=\"standard\"\n            value={props.item.title}\n            sx={{ pt: 1, pb: 1 }} />\n\n        {props.item.exercises.length == 0 && <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 2 }}>\n            <Typography variant='caption'>Упражнения не добавлены</Typography>\n        </Box>}\n\n        {props.item.exercises.length > 0 && <List>\n            {props.item.exercises.map((exerciseId, idx) => {\n                const exercise = GetExerciseById(exerciseId);\n                return <ListItem key={idx} sx={{ pl: 0, pr: 0 }}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <FitnessCenterIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={exercise.title} secondary={exercise.muscle} />\n                </ListItem>\n            })}\n        </List>}\n\n        <Modal\n            open={isOpen}\n            onClose={onClose}\n            title=\"Добавление упражнений\">\n            <ExercisesSelector\n                handleCheckItem={handleCheckItem}\n                selectedExercises={props.item.exercises}\n                isSelected={isSelected}\n                selected={selected}\n                onSave={onSaveExercises} />\n        </Modal>\n\n        <Button fullWidth>\n            <AddIcon color='action' onClick={handleChangeOpen} />\n        </Button>\n    </Box>\n}\n\nexport default TraningProgramForm;","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport AddButton from '../base/AddButton';\nimport TraningProgramForm from './TraningProgramForm';\n\nconst CreateTraningProgram = props => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\n            <TraningProgramForm\n                item={props.item}\n                onChange={props.onChange}\n                setExercises={props.setExercises}\n                onSave={props.setExercises}/>\n\n            <AddButton text=\"Сохранить\" onClick={props.onSave} />\n        </Box>\n    </div>\n}\n \nexport default CreateTraningProgram;","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport AddButton from '../base/AddButton';\nimport TraningProgramForm from './TraningProgramForm';\n\nconst TraningProgramInfo = props => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\n            <TraningProgramForm\n                item={props.item}\n                onChange={props.onChange}\n                setExercises={props.setExercises}\n                onSave={props.setExercises}/>\n\n            <Button\n                onClick={props.onRemove}\n                fullWidth\n                color=\"error\"\n                sx={{ justifyContent: \"flex-start\", mt: 1, pl: 0 }}\n                disableRipple>\n                Удалить программу\n            </Button>\n\n            <AddButton text=\"Сохранить\" onClick={props.onSave} />\n        </Box>\n    </div>\n}\n \nexport default TraningProgramInfo;","import { Grid } from '@mui/material';\nimport React from 'react';\nimport { GetTraningPrograms } from '../../api/TraningProgramAPI';\nimport TraningProgramCard from \"../program/TraningProgramCard\";\n\n\nconst TraningProgramList = (props) => {\n    return <Grid container spacing={2}>\n        {GetTraningPrograms().map((program, idx) => <Grid key={idx} item xs={12}>\n            <TraningProgramCard item={program} onClick={props.onClick}/>\n        </Grid>)}\n    </Grid>\n}\n \nexport default TraningProgramList;","import { Box } from '@mui/material';\nimport React, { useState } from 'react';\nimport { AddTraningProgram, RemoveTraningProgram, UpdateTraningProgram } from '../../api/TraningProgramAPI';\nimport AddButton from '../base/AddButton';\nimport Modal from '../base/Modal';\nimport { DefaultModalState, DefaultTraningProgram, ModalTypeAdd, ModalTypeInfo } from '../Constants';\nimport CreateTraningProgram from '../program/CreateTraningProgram';\nimport TraningProgramInfo from '../program/TraningProgramInfo';\nimport TraningProgramList from '../program/TraningProgramList';\n \nexport const TraningProgramScene = (props) => {\n    const [modalInfo, setModalInfo] = useState(DefaultModalState);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const handleChangeItem = (e, field) => {\n        var item = selectedItem;\n        item[field] = e.target.value;\n        setSelectedItem({ ...item });\n    }\n\n    const removeItem = () => {\n        RemoveTraningProgram(selectedItem.id)\n        closeModal();\n    }\n\n    const closeModal = () => {\n        setModalInfo(DefaultModalState);\n        setSelectedItem(null)\n    }\n\n    const onChangeModal = (e, type, item) => {\n        if (modalInfo.open) {\n            closeModal();\n        } else {\n            setModalInfo({\n                open: true,\n                type: type,\n                title: type == ModalTypeAdd ? \"Создание программы\" : null\n            });\n            setSelectedItem({ ...item });\n        }\n    }\n\n    const saveItem = (e) => {\n        UpdateTraningProgram(selectedItem);\n        closeModal();\n    }\n\n    const addItem = (e) => {\n        AddTraningProgram(selectedItem);\n        closeModal();\n    }\n\n    const setExercises = (exercises) => {\n        setSelectedItem({...selectedItem, exercises: exercises})\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\",\n    }}>\n        <TraningProgramList onClick={onChangeModal}/>\n        <Modal\n            open={modalInfo.open}\n            onClose={(e) => onChangeModal(e, null, null)}\n            title={modalInfo.title}>\n            {modalInfo.type == ModalTypeInfo && <TraningProgramInfo\n                onChange={handleChangeItem}\n                item={selectedItem}\n                onRemove={removeItem}\n                onSave={saveItem}\n                setExercises={setExercises} />}\n            {modalInfo.type == ModalTypeAdd && <CreateTraningProgram\n                onChange={handleChangeItem}\n                item={selectedItem}\n                onSave={addItem}\n                setExercises={setExercises} />}\n        </Modal>\n\n\n        <AddButton text=\"Создать программу\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultTraningProgram())}/>\n\n\n    </Box>\n}\n \nexport default TraningProgramScene;","import React from \"react\";\nimport { BottomNavigation, BottomNavigationAction, Paper } from \"@mui/material\";\n\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\nimport FitbitIcon from '@mui/icons-material/Fitbit';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\n\nconst Navigation = props => {\n    return <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\n        <BottomNavigation value={props.activeScene} onChange={props.handleChange} showLabels>\n            <BottomNavigationAction value=\"traning-programs\" label=\"Программы\" icon={<ListAltIcon />} />\n            <BottomNavigationAction value=\"traning\" label=\"Тренировки\" icon={<FitnessCenterIcon />} />\n            <BottomNavigationAction value=\"exercises\" label=\"Упражнения\" icon={<FitbitIcon />} />\n        </BottomNavigation>\n    </Paper>\n}\n\nexport default Navigation;","import { Box, createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport Navigation from './Navigation'\n\nconst darkTheme = createTheme({\n    palette: {\n        primary: {\n            main: \"#EAE1DF\",\n            light: \"#f7f3f3\",\n            dark: \"#be9d9d\",\n            contrastText: \"#322E18\"\n        },\n        secondary: {\n            main: \"#545E56\",\n            light: \"#EAECEA\",\n            dark: \"#A9B1A9\"\n        },\n        background: {\n            default: \"#f7f3f3\"\n        }\n    },\n    shape: {\n        borderRadius: '8px'\n    },\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n    }\n});\n\nconst Layout = ({children}) => {\n    const [scene, setScene] = useState(\"traning\")\n    const location = useLocation();\n    const navigate = useNavigate();\n    useEffect(() => {\n        setScene(location.pathname.substring(1))\n    }, [location])\n\n    const handleChange = (event, newValue) => {\n        console.log(scene)\n        navigate(`/${newValue}`)\n    };\n\n    return <Box sx={{ display: 'flex', height: '100%', justifyContent: 'center', pb: 7, pt: 0 }}>\n        <CssBaseline />\n        <ThemeProvider theme={darkTheme}><Box component={\"main\"} sx={{ p: 1, width: '100%', height: '100%', overflowY: \"scroll\", pb: 10 }}>\n            <Outlet />\n            <Navigation activeScene={scene} handleChange={handleChange} />\n        </Box>\n        </ThemeProvider>\n    </Box>\n}\n\nexport default Layout;","import React from 'react';\n\nconst TraningProcessScene = (props) => {\n    return <div>\n        Traning process\n    </div>\n}\n \nexport default TraningProcessScene;","import React from \"react\";\nimport './App.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nimport { DefaultExercises, DefaultTraningPrograms } from \"./components/Constants\";\nimport { createBrowserRouter, createRoutesFromElements, Route, RouterProvider } from \"react-router-dom\";\n\nimport TraningScene from \"./components/scenes/TraningScene\";\nimport ExercisesScene from \"./components/scenes/ExercisesScene\";\nimport TraningProgramScene from \"./components/scenes/TraningProgramScene\";\nimport Layout from \"./components/base/Layout\";\nimport TraningProcessScene from \"./components/scenes/TraningProcessScene\";\n\nconst initExercises = () => {\n  if (localStorage.getItem(\"exercises\") == null)\n    localStorage.setItem(\"exercises\", JSON.stringify(DefaultExercises))\n  if (localStorage.getItem(\"traning_programs\") == null)\n    localStorage.setItem(\"traning_programs\", JSON.stringify(DefaultTraningPrograms))\n}\n\nconst router = createBrowserRouter(\n  createRoutesFromElements(\n    <Route path=\"/\" element={<Layout />}>\n      <Route index element={<TraningScene />} />\n      <Route path=\"exercises\" element={<ExercisesScene />} />\n      <Route path=\"traning-programs\" element={<TraningProgramScene />} />\n      <Route path=\"traning\" element={<TraningScene />} />\n      <Route path=\"workout-process/:workoutId\" element={<TraningProcessScene />} />\n    </Route>\n  )\n);\n\nconst App = () => {\n  initExercises();\n  return (<RouterProvider router={router} />);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}