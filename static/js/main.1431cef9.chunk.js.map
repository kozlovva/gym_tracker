{"version":3,"sources":["components/Constants.js","api/TraningProgramAPI.js","components/base/AddButton.js","components/base/Modal.js","components/program/TraningProgramCard.js","api/WorkoutAPI.js","utils/DateUtils.js","components/service/WorkoutService.js","components/service/TraningProgramService.js","components/base/TextWithIcon.js","components/traning/TraningCard.js","components/scenes/TraningScene.js","api/ExercisesAPI.js","components/exercise/ExerciseForm.js","components/exercise/CreateExercise.js","components/base/RemoveEntityButton.js","components/exercise/ExerciseInfo.js","components/exercise/ExerciseList.js","components/scenes/ExercisesScene.js","components/exercise/ExercisesSelector.js","components/base/AddSetButton.js","components/program/SetsTable.js","components/program/TraningProgramForm.js","components/program/CreateTraningProgram.js","components/program/TraningProgramInfo.js","components/program/TraningProgramList.js","components/scenes/TraningProgramScene.js","components/base/Navigation.js","components/base/Layout.js","components/scenes/TraningProcessScene.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["MuscleGroupsInfo","BICEPS","locale","TRICEPS","QUADS","GLUTES","ABS","CHEST","SHOULDERS","HAMSTRINGS","FOREARMS","NECK","LATS","LOWER_BACK","MIDDLE_BACK","TRAPS","MuscleGroupsEnum","DefaultExercises","id","title","muscle","DefaultModalState","open","type","DefaultTraningPrograms","description","exercises","sets","repeats","complited","GetTraningPrograms","items","localStorage","getItem","JSON","parse","SetTraningPrograms","traningPrograms","console","log","setItem","stringify","AddButton","props","_ref","isBottom","react_default","a","createElement","Box","sx","position","width","bottom","left","right","pl","pr","Object","defineProperty","elevation","Button","variant","fullWidth","color","p","onClick","text","Transition","React","forwardRef","ref","Slide","assign","direction","Modal","Dialog","TransitionComponent","PaperProps","height","m","borderBottomRightRadius","borderBottomLeftRadius","DialogTitle","pb","IconButton","aria-label","onClose","top","theme","palette","grey","Close_default","DialogContent","children","Card","styled","objectSpread","display","minHeight","backgroundColor","primary","light","TraningProgramCard","TraningProgramCard_Card","e","item","CardActionArea","CardHeader","showCount","CardContent","Typography","length","GetWorkouts","PadTo2Digits","num","toString","padStart","FormatDate","date","getFullYear","getUTCMonth","getUTCDate","join","CreateWorkout","selectedProgram","traning","uuidv4","notes","traningProgramId","duration","startAt","endAt","Date","map","exercise","set","wieght","completed","push","SetWorkouts","GetWorkoutById","find","ById","GetTraningProgramById","TextWithIcon","alignItems","justifyContent","icon","gutterBottom","mr","mb","lineHeight","TraningCard","backgroundImage","CardActions","Box_Box","flexDirection","flex","base_TextWithIcon","CalendarMonth_default","AccessTime_default","concat","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","EmptyResult","TraningScene","_useState","useState","_useState2","slicedToArray","todayTranings","setTodayTranings","_useState3","_useState4","traningHistory","setTraningHistory","_useState5","_useState6","isOpen","setIsOpen","navigate","useNavigate","useEffect","now","filter","GetTodayWorkouts","GetWorkoutHistory","onStart","asyncToGenerator","_callee","modaType","traningProgram","workout","_context","navigateToWorkout","_x","_x2","_x3","apply","arguments","handleChangeOpen","onChangeModal","overflow","Grid","container","spacing","idx","xs","traning_TraningCard","TraningScene_EmptyResult","Divider","mt","base_Modal","program_TraningProgramCard","base_AddButton","GetExercises","SetExercises","GetExercisesByMuscle","GetExerciseById","MenuProps","style","maxHeight","ITEM_HEIGHT","ExerciseFrom","TextField","onChange","label","pt","FormControl","ml","InputLabel","Select","labelId","MenuItem","CreateExercise","flexWrap","ExerciseForm","onSave","RemoveEntityButton","disableRipple","ExerciseInfo","base_RemoveEntityButton","onRemove","Accordion","&:not(:last-child)","borderBottom","AccordionSummary","expandIcon","ArrowForwardIosSharp_default","fontSize","_ref2","padding","& .MuiAccordionSummary-expandIconWrapper.Mui-expanded","transform","& .MuiAccordionSummary-content","marginLeft","AccordionDetails","MuiAccordionDetails","_ref3","borderTop","ExerciseList","expanded","setExpanded","calcCount","CountExercisesByMuscle","ExerciseList_Accordion","panel","event","newExpanded","ExerciseList_AccordionSummary","ExpandMore_default","aria-controls","Badge","showZero","badgeContent","ExerciseList_AccordionDetails","index","stopPropagation","onClickToExercise","textAlign","defaultModalState","ExercisesScene","modalInfo","setModalInfo","selectedItem","setSelectedItem","handleChangeExercise","field","target","closeModal","exercise_ExerciseList","exercise_ExerciseInfo","RemoveExercises","UpdateExercise","exercise_CreateExercise","AddExercises","ExercisesSelector","ExercisesSelector_AccordionSummary","endIcon","isSelected","Check_default","handleCheckItem","AddSetButton","size","SetsTable","handleChangeInput","handleChangeCompleted","addSet","disableWiegth","disableCompleted","useTheme","Paper","TableContainer","Table","tableLayout","TableHead","TableRow","TableCell","align","TableBody","Checkbox","checked","base_AddSetButton","GenerateExercise","TraningProgramForm","selected","setSelected","setOpen","toConsumableArray","handleChangeRepeats","parseInt","program_SetsTable","exercise_ExercisesSelector","selectedExercises","setExercises","CreateTraningProgram","program_TraningProgramForm","TraningProgramInfo","TraningProgramList","program","TraningProgramScene","handleChangeItem","program_TraningProgramList","program_TraningProgramInfo","RemoveTraningProgram","UpdateTraningProgram","program_CreateTraningProgram","AddTraningProgram","Navigation","BottomNavigation","activeScene","handleChange","showLabels","BottomNavigationAction","ListAlt_default","FitnessCenter_default","Fitbit_default","darkTheme","createTheme","main","dark","contrastText","secondary","background","default","shape","borderRadius","typography","fontFamily","Layout","scene","setScene","location","useLocation","path","pathname","substring","includes","CssBaseline","ThemeProvider","component","overflowY","react_router_dist","base_Navigation","newValue","WorkoutProcessScene","workoutId","useParams","updateWorkout","getTargetExerciseById","updateWorkoutFilling","router","createHashRouter","createRoutesFromElements","element","base_Layout","scenes_TraningScene","scenes_ExercisesScene","scenes_TraningProgramScene","TraningProcessScene","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0","URL","process","href","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.1431cef9.chunk.js","sourcesContent":["import {v4 as uuidv4} from 'uuid';\n\nexport const MuscleGroupsInfo = {\n    \"BICEPS\": {\n        \"locale\": \"Бицепс\"\n    },\n    \"TRICEPS\": {\n        \"locale\": \"Трицепс\"\n    },\n    \"QUADS\": {\n        \"locale\": \"Передняя поверхность бедра\"\n    },\n    \"GLUTES\": {\n        \"locale\": \"Ягодицы\"\n    },\n    \"ABS\": {\n        \"locale\": \"Пресс\"\n    },\n    \"CHEST\": {\n        \"locale\": \"Грудь\"\n    },\n    \"SHOULDERS\": {\n        \"locale\": \"Плечи\"\n    },\n    \"HAMSTRINGS\": {\n        \"locale\": \"Задняя поверхность бедра\"\n    },\n    \"FOREARMS\": {\n        \"locale\": \"Предплечья\"\n    },\n    \"NECK\": {\n        \"locale\": \"Шея\"\n    },\n    \"LATS\": {\n        \"locale\": \"Широчайшие\"\n    },\n    \"LOWER_BACK\": {\n        \"locale\": \"Разгибатели спины/Поясница\"\n    },\n    \"MIDDLE_BACK\": {\n        \"locale\": \"Середина спины\"\n    },\n    \"TRAPS\": {\n        \"locale\": \"Трапеции\"\n    }\n};\n\nexport const MuscleGroupsEnum = [\n    \"BICEPS\", \n    \"TRICEPS\", \n    \"QUADS\", \n    \"GLUTES\", \n    \"ABS\", \n    \"CHEST\", \n    \"SHOULDERS\", \n    \"HAMSTRINGS\", \n    \"FOREARMS\", \n    \"NECK\", \n    \"LATS\", \n    \"LOWER_BACK\", \n    \"MIDDLE_BACK\", \n    \"TRAPS\"\n];\n\nexport const DefaultExercises = [\n    {\n        \"id\": \"1\",\n        \"title\": \"Подъем штанги на бицепс\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"18\",\n        \"title\": \"Подтягивания обратным хватом\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"19\",\n        \"title\": \"Подъем гантелей в скамье Скотта\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"15\",\n        \"title\": \"Молотки с гантелями\",\n        \"muscle\": \"BICEPS\"\n    }, \n    {\n        \"id\": \"2\",\n        \"title\": \"Французский жим со штангой\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"20\",\n        \"title\": \"Французский со штангой\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"21\",\n        \"title\": \"Жим лежа узким хватом\",\n        \"muscle\": \"TRICEPS\"\n    },\n    {\n        \"id\": \"22\",\n        \"title\": \"Разгибания на трицепс в верхнем блоке\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"3\",\n        \"title\": \"Приседания со штангой\",\n        \"muscle\": \"QUADS\"\n    }, \n    {\n        \"id\": \"23\",\n        \"title\": \"Жим ногами\",\n        \"muscle\": \"QUADS\"\n    }, \n    {\n        \"id\": \"24\",\n        \"title\": \"Разгибания в блоке на квадрицепс\",\n        \"muscle\": \"QUADS\"\n    },\n    {\n        \"id\": \"25\",\n        \"title\": \"Выпады с гантелей\",\n        \"muscle\": \"QUADS\"\n    },  \n    {\n        \"id\": \"4\",\n        \"title\": \"Отведения ноги в блоке\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"26\",\n        \"title\": \"Ягодичный мост\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"27\",\n        \"title\": \"Глубокие приседания с широкой постановкой ног\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"28\",\n        \"title\": \"Отведение ног в стороны в тренажере\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"5\",\n        \"title\": \"Скручивания в римском стуле\",\n        \"muscle\": \"ABS\"\n    }, \n    {\n        \"id\": \"29\",\n        \"title\": \"Скручивания в висе на перекладине\",\n        \"muscle\": \"ABS\"\n    }, \n    {\n        \"id\": \"6\",\n        \"title\": \"Жим со штангой лежа\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"30\",\n        \"title\": \"Жим со штангой лежа на наклонной скамье\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"31\",\n        \"title\": \"Бабочка\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"7\",\n        \"title\": \"Махи с шагтелями в стороны\",\n        \"muscle\": \"SHOULDERS\"\n    },\n    {\n        \"id\": \"16\",\n        \"title\": \"Армейский жим\",\n        \"muscle\":\"SHOULDERS\"\n    },\n    {\n        \"id\": \"17\",\n        \"title\": \"Жим гантелей сидя\",\n        \"muscle\": \"SHOULDERS\"\n    }, \n    {\n        \"id\": \"8\",\n        \"title\": \"Румынская тяга\",\n        \"muscle\": \"HAMSTRINGS\"\n    }, \n    {\n        \"id\": \"9\",\n        \"title\": \"Обезьяний хват\",\n        \"muscle\": \"FOREARMS\"\n    }, \n    {\n        \"id\": \"10\",\n        \"title\": \"Скричивания шеи с блином\",\n        \"muscle\": \"NECK\"\n    }, \n    {\n        \"id\": \"11\",\n        \"title\": \"Подтягивания\",\n        \"muscle\": \"LATS\"\n    }, \n    {\n        \"id\": \"12\",\n        \"title\": \"Экстензия\",\n        \"muscle\": \"LOWER_BACK\"\n    }, \n    {\n        \"id\": \"13\",\n        \"title\": \"Тяга нижнего блока\",\n        \"muscle\": \"MIDDLE_BACK\"\n    }, \n    {\n        \"id\": \"14\",\n        \"title\": \"Шраги с гантелями\",\n        \"muscle\": \"TRAPS\"\n    }\n]\n\nexport const ModalTypeInfo = \"INFO\";\nexport const ModalTypeAdd = \"ADD\";\n\nexport const DefaultExercise = () => {\n    return {\n        \"id\": uuidv4(),\n        title: \"\",\n        muscle: \"BICEPS\"\n    }\n}\n\nexport const DefaultModalState = {\n    open: false,\n    type: null,\n    title: null\n};\n\nexport const DefaultTraningProgram = () => {\n    return {\n        \"id\": uuidv4(),\n        \"title\": \"\",\n        \"description\": \"\",\n        \"exercises\": []\n    }\n}\n\nexport const DefaultTraningPrograms = [\n    {\n        \"id\": \"1\",\n        \"title\": \"Грудь-бицепс\",\n        \"description\": \"\",\n        \"exercises\": [\n            {\n                \"id\": \"1\",\n                \"sets\": [\n                    {\n                        repeats: 10,\n                        complited: false\n                    },\n                    {\n                        repeats: 10,\n                        complited: false\n                    },\n                    {\n                        repeats: 10,\n                        complited: false\n                    },\n                    {\n                        repeats: 10,\n                        complited: false\n                    }\n                ]\n            }\n        ]\n    },\n    \n]\n\nexport const DefaultTraning = () =>  {\n    return {\n        \"id\": uuidv4(),\n        \"notes\": \"\",\n        \"traningProgramId\": \"\",\n        \"duration\": \"\",\n        \"startAt\": \"\",\n        \"endAt\": \"\",\n        \"exercises\": []\n    }\n}\n\nexport const DefaultSet = {\n    repeats: 10,\n    wiegth: 0\n}","export const GetTraningPrograms = () => {\n    var items = localStorage.getItem(\"traning_programs\");\n    return items != null ? JSON.parse(items) : [];\n}\n\nexport const SetTraningPrograms = (traningPrograms) => {\n    console.log(\"Update traning program in local storage...\")\n    localStorage.setItem(\"traning_programs\", JSON.stringify(traningPrograms))\n}\n\nexport const AddTraningProgram = exercise => {\n    const items = GetTraningPrograms();\n    items.push(exercise);\n    SetTraningPrograms(items);\n}\n\nexport const RemoveTraningProgram = id => {\n    const items = GetTraningPrograms().filter(exercise => exercise.id != id);\n    SetTraningPrograms(items);\n}\n\nexport const UpdateTraningProgram = exercise => {\n    const items = GetTraningPrograms().map(e => {\n        if(e.id == exercise.id) {\n            \n            return exercise;\n        }\n\n        return e;\n    })\n    SetTraningPrograms(items);\n}\n\n\nexport const GetTraningProgramById = id => {\n    const exercises = GetTraningPrograms();\n    return exercises.find(e => e.id == id); \n}","import React from \"react\";\nimport { Box, Button, Paper } from \"@mui/material\"\n\nconst AddButton = props => {\n    console.log(\"is\", props.isBottom)\n    return <Box sx={{\n        position: 'fixed', \n        width: \"100%\", \n        bottom: props.isBottom ? 0 : 40, \n        left: 0, \n        right: 0, \n        pl: 1, \n        pr: 1,\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n    }} elevation={3}>\n        <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"secondary\"\n            sx={{\n                p: 2,\n            }}\n            onClick={props.onClick}>\n            {props.text}\n        </Button>\n    </Box>\n}\n\nexport default AddButton;","import { Dialog, DialogContent, DialogTitle, IconButton, Slide, Typography } from '@mui/material';\nimport React from 'react';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Modal = (props) => {\n    return <Dialog\n        open={props.open}\n        TransitionComponent={Transition}\n        PaperProps={{\n            sx: {\n                height: \"100%\",\n                width: \"100%\",\n                m: 0,\n                position: \"fixed\",\n                bottom: 0,\n                borderBottomRightRadius: 0,\n                borderBottomLeftRadius: 0\n            }\n        }}>\n        <DialogTitle sx={{pb:4}}>\n            {props.title}\n            <IconButton\n                aria-label=\"close\"\n                onClick={props.onClose}\n                sx={{\n                    position: 'absolute',\n                    right: 8,\n                    top: 8,\n                    color: (theme) => theme.palette.grey[500],\n                }}\n            >\n                <CloseIcon />\n            </IconButton>\n        </DialogTitle>\n        <DialogContent sx={{}}>\n            {props.children}\n        </DialogContent>\n    </Dialog>\n}\n\nexport default Modal;","import React from 'react';\nimport { Card as MuiCard, CardActionArea, CardContent, CardHeader, styled, Typography } from \"@mui/material\"\nimport { ModalTypeInfo } from '../Constants';\n\n\nconst Card = styled((props) => (\n    <MuiCard sx={{ display: \"flex\", minHeight: \"180px\", ...props.sx }} {...props} />\n))(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light\n}))\n\nconst TraningProgramCard = (props) => {\n\n    return <Card sx={props.sx}\n        onClick={(e) => props.onClick(e, ModalTypeInfo, props.item)}>\n        <CardActionArea>\n            <CardHeader title={props.item.title}>\n            </CardHeader>\n            \n            {props.showCount && <CardContent>\n                <Typography variant='caption'>Кол-во упражнений: {props.item.exercises.length || 0}</Typography>\n            </CardContent>}\n        </CardActionArea>\n    </Card>\n}\n\nexport default TraningProgramCard;","const DatabaseName = \"workout\";\n\nexport const GetWorkouts = () => {\n    var items = localStorage.getItem(DatabaseName);\n    return items ? JSON.parse(items) : [];\n}\n\n\nexport const SetWorkouts = items => {\n    localStorage.setItem(DatabaseName, JSON.stringify(items))\n}\n\nexport const GetWorkoutById = id => {\n    return GetWorkouts().find(e => e.id == id);\n}","const PadTo2Digits = (num) => {\n    return num.toString().padStart(2, '0');\n}\n\nexport const FormatDateTime = (date) => {\n    return (\n        [\n            date.getFullYear(),\n            PadTo2Digits(date.getUTCMonth() + 1),\n            PadTo2Digits(date.getUTCDate()),\n        ].join('-') +\n        ' ' +\n        [\n            PadTo2Digits(date.getUTCHours()),\n            PadTo2Digits(date.getUTCMinutes()),\n            PadTo2Digits(date.getUTCSeconds()),\n        ].join(':')\n    );\n}\n\nexport const FormatDate = (date) => {\n    console.log(date)\n    return (\n        [\n            date.getFullYear(),\n            PadTo2Digits(date.getUTCMonth() + 1),\n            PadTo2Digits(date.getUTCDate()),\n        ].join('-')\n    );\n}","import { GetWorkouts, SetWorkouts , GetWorkoutById as ById } from \"../../api/WorkoutAPI\";\nimport { FormatDate } from \"../../utils/DateUtils\";\nimport { DefaultTraning } from \"../Constants\"\n\nexport const CreateWorkout = (selectedProgram) => {\n    const traning = DefaultTraning();\n    traning.traningProgramId = selectedProgram.id;\n    traning.startAt = new Date();\n\n    traning.exercises = selectedProgram.exercises.map(exercise => {\n        \n        return {\n            id: exercise.id,\n            sets: exercise.sets.map(set => {\n                return {\n                    repeats: set.repeats,\n                    wieght: 0,\n                    completed: false\n                }\n            })\n        }\n    })\n\n    const items = GetWorkouts();\n    items.push(traning);\n    SetWorkouts (items);\n    return traning;\n}\n\nexport const GetTodayWorkouts = () => {\n    var now = new Date();\n    return GetWorkouts()\n        .filter(e => FormatDate(new Date(e.startAt)) == FormatDate(now))\n}\n\nexport const GetWorkoutHistory = () => {\n    var now = new Date();\n    return GetWorkouts()\n        .filter(e => FormatDate(new Date(e.startAt)) != FormatDate(now))\n}\n\nexport const GetWorkoutById = id => {\n    return ById(id);\n}","import { GetTraningPrograms } from \"../../api/TraningProgramAPI\"\n\nexport const GetTraningProgramById = id => {\n    return GetTraningPrograms().find(e => e.id == id);\n}","import { Box, Typography } from '@mui/material';\nimport React from 'react';\n\nconst TextWithIcon = (props) => {\n    return <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n        {props.icon}\n        <Typography variant=\"caption\" gutterBottom sx={{ mr: 1, mb: 0, lineHeight: 0 }}>{props.text}</Typography>\n    </Box>\n}\n\nexport default TextWithIcon;","import React from 'react';\nimport { Card, CardActionArea, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport Tag from '../base/Tag';\nimport { Box } from '@mui/system';\n\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport TextWithIcon from '../base/TextWithIcon';\nimport { FormatDate } from '../../utils/DateUtils';\n\n\n\nconst TraningCard = (props) => {\n    return <Card\n        onClick={props.onClick}\n        sx={{\n            display: 'flex',\n            backgroundColor: \"#FBAB7E\",\n            backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)'\n        }}>\n        <CardActionArea>\n            <CardHeader title={props.title}>\n            </CardHeader>\n            <CardActions sx={{ justifyContent: \"flex-end\", p: 2 }}>\n                <Box sx={{ display: 'flex', flexDirection: \"column\", flex: \"1 0 auto\" }}>\n                </Box>\n                <Box sx={{ display: \"flex\", alignItems: 'center', pl: 1 }}>\n                    <TextWithIcon\n                        icon={<CalendarMonthIcon />}\n                        text={FormatDate(new Date(props.date))} />\n                    <TextWithIcon\n                        icon={<AccessTimeIcon />}\n                        text={`${props.duration} минут`} />\n                </Box>\n            </CardActions>\n        </CardActionArea>\n    </Card>;\n}\n\nexport default TraningCard;","import { Box, Card, CardActionArea, CardHeader, Divider, Grid, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { GetTraningPrograms } from \"../../api/TraningProgramAPI\";\nimport AddButton from \"../base/AddButton\";\nimport Modal from \"../base/Modal\";\nimport TraningProgramCard from \"../program/TraningProgramCard\";\nimport { CreateWorkout, GetTodayWorkouts, GetWorkoutHistory } from \"../service/WorkoutService\";\nimport { GetTraningProgramById } from \"../service/TraningProgramService\";\nimport TraningCard from \"../traning/TraningCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormatDate, FormatDateTime } from \"../../utils/DateUtils\";\n\nconst EmptyResult = () => <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\n    <Typography variant=\"caption\">Пока тренировок нет</Typography>\n</Box>\n\nexport const TraningScene = props => {\n    const [todayTranings, setTodayTranings] = useState([])\n    const [traningHistory, setTraningHistory] = useState([])\n    const [isOpen, setIsOpen] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const todayTranings = GetTodayWorkouts();\n        setTodayTranings(todayTranings);\n        const traningHistory = GetWorkoutHistory();\n        setTraningHistory(traningHistory)\n    }, [])\n\n    const onStart = async (e, modaType, traningProgram) => {\n        const workout = await CreateWorkout(traningProgram);\n        navigateToWorkout(workout.id)\n    }\n\n    const handleChangeOpen = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const closeModal = () => {\n        handleChangeOpen();\n    }\n\n    const onChangeModal = () => {\n        if (isOpen) {\n            closeModal();\n        } else {\n            handleChangeOpen();\n        }\n    }\n\n    const navigateToWorkout = id => {\n        navigate(`/workout-process/${id}`)\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\",\n    }}>\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\n            <Typography>Сегодня</Typography>\n        </Box>\n        {todayTranings.length > 0\n            ? <Grid container spacing={2}>\n                {todayTranings.map((traning, idx) =>\n                    <Grid item key={idx} xs={12}>\n                        <TraningCard\n                            onClick={() => {navigateToWorkout(traning.id)}}\n                            title={GetTraningProgramById(traning.traningProgramId).title}\n                            date={traning.startAt}\n                            duration={traning.duration} />\n                    </Grid>\n                )}\n            </Grid>\n            : <EmptyResult />}\n\n\n\n        <Divider light sx={{ mt: 2, mb: 2 }}></Divider>\n\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\n            <Typography>История</Typography>\n        </Box>\n\n        {traningHistory.length > 0\n            ? <Grid container spacing={2}>\n                {traningHistory.map((traning, idx) =>\n                    <Grid item key={idx} xs={12}>\n                        <TraningCard\n                            title={GetTraningProgramById(traning.traningProgramId).title}\n                            date={traning.startAt}\n                            duration={traning.duration} />\n                    </Grid>\n                )}\n            </Grid>\n            : <EmptyResult />}\n\n\n        <Modal\n            open={isOpen}\n            onClose={() => onChangeModal(null)}\n            title=\"Выбери программу тренировок\">\n            <Grid container spacing={2}>\n                {GetTraningPrograms().map((item, idx) => <Grid item xs={12} key={idx}>\n                    <TraningProgramCard\n                        onClick={onStart}\n                        key={idx}\n                        item={item}\n                        showCount={false}\n                        sx={{ minHeight: \"80px\" }} />\n                </Grid>\n                )}\n            </Grid>\n\n\n        </Modal>\n\n        <AddButton text=\"Начать тренировку!\" onClick={onChangeModal} />\n    </Box>\n}\n\nexport default TraningScene;","export const GetExercises = () => {\n    var items = localStorage.getItem(\"exercises\");\n    return JSON.parse(items);\n}\n\nexport const SetExercises = exercises => {\n    console.log(\"Update exercises in local storage...\")\n    localStorage.setItem(\"exercises\", JSON.stringify(exercises))\n}\n\nexport const GetExercisesByMuscle = muscle => {\n    const items = GetExercises();\n    return items.filter(exercise => exercise.muscle == muscle);\n}\n\nexport const AddExercises = exercise => {\n    const items = GetExercises();\n    items.push(exercise);\n    SetExercises(items);\n}\n\nexport const RemoveExercises = id => {\n    const items = GetExercises().filter(exercise => exercise.id != id);\n    SetExercises(items);\n}\n\nexport const UpdateExercise = exercise => {\n    const items = GetExercises().map(e => {\n        if(e.id == exercise.id) {\n            return exercise;\n        }\n\n        return e;\n    })\n    SetExercises(items);\n}\n\nexport const CountExercisesByMuscle = muscle => {\n    return GetExercisesByMuscle(muscle).length;\n}\n\nexport const GetExerciseById = id => {\n    const exercises = GetExercises();\n    return exercises.find(e => e.id == id); \n}","import { Box, FormControl, InputLabel, MenuItem, Select, TextField } from '@mui/material';\nimport React from 'react';\nimport { MuscleGroupsEnum } from '../Constants';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst ExerciseFrom = (props) => {\n    return <Box>\n        <TextField\n            onChange={(e) => { props.onChange(e, \"title\") }}\n            fullWidth\n            id=\"exercise-title\"\n            label=\"Название\"\n            variant=\"standard\"\n            value={props.exercise.title}\n            sx={{ pt: 1, pb: 1 }} />\n\n        <FormControl\n            variant='standard'\n            sx={{ m: 1, ml: 0, mr: 0, pt: 1, pb: 1 }}\n            fullWidth>\n            <InputLabel id=\"demo-multiple-name-label\">Мышечные группы</InputLabel>\n            <Select\n                onChange={(e) => { props.onChange(e, \"muscle\") }}\n                labelId=\"demo-multiple-name-label\"\n                id=\"demo-multiple-name\"\n                value={props.exercise.muscle}\n                MenuProps={MenuProps}>\n                {MuscleGroupsEnum.map((name) => (\n                    <MenuItem\n                        key={name}\n                        value={name}>\n                        {name}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    </Box>\n}\n\nexport default ExerciseFrom;","import { Button, Card, CardActions, CardContent, createTheme, FormControl, InputLabel, MenuItem, OutlinedInput, Select, TextField, ThemeProvider, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport AddButton from '../base/AddButton';\nimport { MuscleGroupsEnum } from '../Constants';\nimport ExerciseFrom from './ExerciseForm';\n\nconst CreateExercise = (props) => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\" }}>\n            <ExerciseFrom\n                exercise={props.exercise}\n                onChange={props.onChange} />\n\n            <AddButton text=\"Создать\" onClick={props.onSave} isBottom={true} />\n        </Box>\n    </div>\n};\n\nexport default CreateExercise;","import { Button } from '@mui/material';\nimport React from 'react';\n\nconst RemoveEntityButton = props => {\n    return <Button\n        onClick={props.onClick}\n        fullWidth\n        color=\"error\"\n        sx={{ mt: 1, pl: 0 }}\n        disableRipple>\n            {props.text}\n    </Button>\n}\n\nexport default RemoveEntityButton;","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport AddButton from '../base/AddButton';\nimport RemoveEntityButton from '../base/RemoveEntityButton';\nimport ExerciseFrom from './ExerciseForm';\n\nconst ExerciseInfo = (props) => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\"}}>\n            <ExerciseFrom\n                exercise={props.exercise}\n                onChange={props.onChange} />\n\n            <RemoveEntityButton onClick={props.onRemove} text=\"Удалить упражнение\"/>\n\n            <AddButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\n        </Box>\n    </div>\n};\n\nexport default ExerciseInfo;","import { Accordion as MuiAccordion, AccordionDetails as MuiAccordionDetails, AccordionSummary as MuiAccordionSummary, Badge, Button } from \"@mui/material\";\nimport React, { useState } from \"react\";\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport { Box, styled } from \"@mui/system\";\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo } from \"../Constants\";\nimport { CountExercisesByMuscle, GetExercisesByMuscle } from \"../../api/ExercisesAPI\";\n\nconst Accordion = styled((props) => (\n    <MuiAccordion elevation={0} {...props} />\n))(({ theme }) => ({\n    '&:not(:last-child)': {\n        borderBottom: 0,\n    }\n}));\n\nconst AccordionSummary = styled((props) => (\n    <MuiAccordionSummary\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n        {...props}\n    />\n))(({ theme }) => ({\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.primary.light,\n    flexDirection: 'row-reverse',\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(90deg)',\n    },\n    '& .MuiAccordionSummary-content': {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n    padding: theme.spacing(2),\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\nconst ExerciseList = (props) => {\n    const [expanded, setExpanded] = useState(null)\n\n    const handleChangeExpanded = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const onClickToExercise = (e, exercise) => {\n        e.stopPropagation();\n        props.onClick(e, ModalTypeInfo, exercise);\n    }\n\n    const calcCount = (muscle) => {\n        return CountExercisesByMuscle(muscle);\n    }\n\n    return <div>\n        {MuscleGroupsEnum.map((muscle, idx) => <Accordion\n            key={idx}\n            expanded={expanded == muscle}\n            onChange={handleChangeExpanded(muscle)}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1bh-content\"\n                id=\"panel1bh-header\">\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", pr: 2 }}>\n                    {MuscleGroupsInfo[muscle].locale}\n                    <Badge showZero badgeContent={calcCount(muscle)} color=\"secondary\"></Badge>\n                </Box>\n            </AccordionSummary>\n            <AccordionDetails>\n                {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\n                    <Button\n                        color=\"secondary\"\n                        onClick={(e) => onClickToExercise(e, exercise)}\n                        fullWidth\n                        sx={{ justifyContent: \"flex-start\", textAlign: \"left\" }}\n                        disableRipple>\n                        {exercise.title}\n                    </Button>\n                </Box>)}\n            </AccordionDetails>\n        </Accordion>)\n        }\n    </div >\n}\n\nexport default ExerciseList;","import { Box } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { AddExercises, RemoveExercises, UpdateExercise } from \"../../api/ExercisesAPI\";\nimport AddButton from \"../base/AddButton\";\nimport Modal from \"../base/Modal\";\nimport { DefaultExercise, ModalTypeAdd, ModalTypeInfo } from \"../Constants\";\nimport CreateExercise from \"../exercise/CreateExercise\";\nimport ExerciseInfo from \"../exercise/ExerciseInfo\";\nimport ExerciseList from \"../exercise/ExerciseList\";\n\nconst defaultModalState = {\n    open: false,\n    type: null,\n    title: null\n};\n\nconst ExercisesScene = props => {\n    const [modalInfo, setModalInfo] = useState(defaultModalState);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const handleChangeExercise = (e, field) => {\n        var item = selectedItem;\n        item[field] = e.target.value;\n        setSelectedItem({ ...item });\n    }\n\n    const removeExercise = () => {\n        RemoveExercises(selectedItem.id)\n        closeModal();\n    }\n\n    const closeModal = () => {\n        setModalInfo(defaultModalState);\n        setSelectedItem(null)\n    }\n\n    const onChangeModal = (e, type, item) => {\n        if (modalInfo.open) {\n            closeModal();\n        } else {\n            setModalInfo({\n                open: true,\n                type: type,\n                title: type == ModalTypeAdd ? \"Создание упражнения\" : null\n            });\n            setSelectedItem({ ...item });\n        }\n    }\n\n    const saveExercise = (e) => {\n        UpdateExercise(selectedItem);\n        closeModal();\n    }\n\n    const addExeecise = (e) => {\n        AddExercises(selectedItem);\n        closeModal();\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\",\n    }}>\n        <ExerciseList onClick={onChangeModal} />\n        <Modal\n            open={modalInfo.open}\n            onClose={(e) => onChangeModal(e, null, null)}\n            title={modalInfo.title}>\n            {modalInfo.type == ModalTypeInfo && <ExerciseInfo\n                onChange={handleChangeExercise}\n                exercise={selectedItem}\n                onRemove={removeExercise}\n                onSave={saveExercise} />}\n            {modalInfo.type == ModalTypeAdd && <CreateExercise\n                onChange={handleChangeExercise}\n                exercise={selectedItem}\n                onSave={addExeecise} />}\n        </Modal>\n\n        <AddButton text=\"Создать упражнение\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultExercise())} />\n    </Box>\n}\n\nexport default ExercisesScene;","import { Accordion, AccordionDetails, AccordionSummary as MuiAccordionSummary, Box, Button, styled } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { GetExercisesByMuscle } from '../../api/ExercisesAPI';\nimport AddButton from '../base/AddButton';\nimport { MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\nimport CheckIcon from '@mui/icons-material/Check';\n\nconst AccordionSummary = styled((props) => (\n    <MuiAccordionSummary\n        {...props}\n    />\n))(({ theme }) => ({\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.primary.light,\n    flexDirection: 'row-reverse',\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(90deg)',\n    },\n    '& .MuiAccordionSummary-content': {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst ExercisesSelector = (props) => {\n    return <div>\n        <Box sx={{ pb: 14 }}>\n            {MuscleGroupsEnum.map((muscle, idx) => <Accordion\n                key={idx}\n                expanded={true}>\n                <AccordionSummary\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\">\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", p: 1 }}>\n                        {MuscleGroupsInfo[muscle].locale}\n                    </Box>\n                </AccordionSummary>\n                <AccordionDetails>\n                    {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\n                        <Button\n                            endIcon={props.isSelected(exercise.id) ? <CheckIcon /> : <div></div>}\n                            color=\"secondary\"\n                            onClick={(e) => props.handleCheckItem(exercise.id)}\n                            fullWidth\n                            sx={{ justifyContent: \"space-between\", textAlign: \"left\" }}\n                            disableRipple>\n                            {exercise.title}\n                        </Button>\n                    </Box>)}\n                </AccordionDetails>\n            </Accordion>)}\n        </Box>\n\n        <AddButton text={`Применить`} onClick={props.onSave} isBottom={true} />\n    </div>\n}\n\nexport default ExercisesSelector;","import React from 'react';\nimport { Button } from \"@mui/material\";\n\nconst AddSetButton = (props) => {\n    return <Button\n        size='small'\n        variant='contained'\n        color=\"secondary\"\n        onClick={props.onClick}>\n        {props.text}\n    </Button>\n}\n\nexport default AddSetButton;","import { Checkbox, Divider, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from '@mui/material';\nimport { Box, useTheme } from '@mui/system';\nimport React from 'react';\nimport AddSetButton from '../base/AddSetButton';\n\nconst SetsTable = ({item, sets, handleChangeInput, handleChangeCompleted, addSet, disableWiegth, disableCompleted}) => {\n    const theme = useTheme();\n\n    return <Paper sx={{ p: 1, mb: 2, mt: 1, backgroundColor: theme.palette.primary.light }}>\n        <Box sx={{ display: 'flex' }}>\n            <Box sx={{ display: 'flex', flexDirection: 'column', pl: 2, pr: 2 }}>\n                <Typography>{item.title}</Typography>\n                <Typography variant='caption'>{item.muscle}</Typography>\n            </Box>\n        </Box>\n\n        <Divider />\n\n        <Box>\n            <TableContainer>\n                <Table sx={{ width: \"100%\", tableLayout: 'fixed' }} size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Подход</TableCell>\n                            <TableCell align='center'>Повторы</TableCell>\n                            {!disableWiegth && <TableCell align='center'>Вес</TableCell>}\n                            {!disableCompleted &&<TableCell>Выполнен</TableCell>}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {sets.map((set, index) =>\n                            <TableRow key={index}>\n                                <TableCell>{index + 1}</TableCell>\n                                <TableCell align='center'>\n                                    <TextField\n                                        size='small'\n                                        name=\"repeats\"\n                                        type={\"number\"}\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\n                                        fullWidth\n                                        value={set.repeats} />\n                                </TableCell>\n                                {!disableWiegth && <TableCell align='center'>\n                                    <TextField\n                                        size='small'\n                                        name=\"wieght\"\n                                        type={\"number\"}\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\n                                        fullWidth\n                                        value={set.wieght} />\n                                </TableCell>}\n                                {!disableCompleted && <TableCell align='right'>\n                                    <Checkbox\n                                        name=\"completed\"\n                                        color='secondary'\n                                        checked={set.completed}\n                                        onChange={(e) => handleChangeCompleted(e, item, index)} />\n                                </TableCell>}\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <Box sx={{ display: 'flex', justifyContent: 'flex-end', pt: 1 }}>\n                <AddSetButton text=\"Добавить подход\" onClick={e => addSet(item)} />\n            </Box>\n        </Box>\n    </Paper>\n}\n\nexport default SetsTable;","import { Box, Button, Divider, Grid, Paper, TextField, Typography, useTheme } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { GetExerciseById } from '../../api/ExercisesAPI';\nimport Modal from '../base/Modal';\nimport ExercisesSelector from '../exercise/ExercisesSelector';\nimport SetsTable from './SetsTable';\n\nconst GenerateExercise = id => {\n    return {\n        id: id,\n        sets: [\n            {\n                repeats: 10,\n                completed: false\n            },\n            {\n                repeats: 10,\n                completed: false\n            },\n            {\n                repeats: 10,\n                completed: false\n            },\n            {\n                repeats: 10,\n                completed: false\n            }\n        ]\n    }\n}\n\nconst TraningProgramForm = props => {\n    const [selected, setSelected] = useState([]);\n    const [isOpen, setOpen] = useState(false)\n    const theme = useTheme();\n\n    useEffect(() => {\n        setSelected([...props.item.exercises])\n    }, [])\n\n    const isSelected = id => {\n        return selected.find(e => e.id == id) || false\n    }\n\n    const handleCheckItem = id => {\n        if (!isSelected(id)) {\n            setSelected([...selected, GenerateExercise(id)])\n        } else {\n            setSelected(selected.filter(e => e.id != id))\n        }\n    }\n\n    const onClose = () => {\n        setSelected(props.item.exercises)\n        handleChangeOpen();\n    }\n\n    const handleChangeOpen = () => {\n        setOpen(!isOpen)\n    }\n\n    const onSaveExercises = () => {\n        props.setExercises(selected);\n        handleChangeOpen();\n    }\n\n    const handleChangeRepeats = (e, exercise, index) => {\n        let target = selected.find(e => e.id == exercise.id);\n        target.sets[index].repeats = parseInt(e.target.value)\n        setSelected(selected.map(e => {\n            if (e.id == target.id)\n                return target;\n\n            return e;\n        }))\n    }\n\n    const addSet = (exercise) => {\n        let target = selected.find(e => e.id == exercise.id);\n        target.sets.push({\n            repeats: 10,\n            wieght: 0,\n            completed: false\n        });\n        setSelected(selected.map(e => {\n            if (e.id == target.id)\n                return target;\n\n            return e;\n        }))\n    }\n\n    return <Box>\n        <TextField\n            onChange={(e) => { props.onChange(e, \"title\") }}\n            fullWidth\n            id=\"exercise-title\"\n            label=\"Название\"\n            variant=\"standard\"\n            value={props.item.title}\n            sx={{ pt: 1, pb: 1 }} />\n\n        {props.item.exercises.length == 0 && <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 2 }}>\n            <Typography variant='caption'>Упражнения не добавлены</Typography>\n        </Box>}\n\n\n        {props.item.exercises.length > 0 && <Grid container spacing={2}>\n            {props.item.exercises.map((exercise, idx) => {\n                const item = GetExerciseById(exercise.id);\n                return <Grid item xs={12} key={idx}>\n                    <SetsTable\n                        item={item}\n                        sets={exercise.sets}\n                        handleChangeInput={handleChangeRepeats}\n                        disableWiegth disableCompleted\n                        addSet={addSet}\n                    />\n                </Grid>\n            })}\n        </Grid>\n        }\n\n        <Modal\n            open={isOpen}\n            onClose={onClose}\n            title=\"Добавление упражнений\">\n            <ExercisesSelector\n                handleCheckItem={handleCheckItem}\n                selectedExercises={props.item.exercises}\n                isSelected={isSelected}\n                selected={selected}\n                onSave={onSaveExercises} />\n        </Modal>\n\n        <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={handleChangeOpen}>\n            Добавить упражнение\n        </Button>\n    </Box >\n}\n\nexport default TraningProgramForm;","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport AddButton from '../base/AddButton';\nimport TraningProgramForm from './TraningProgramForm';\n\nconst CreateTraningProgram = props => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\n            <TraningProgramForm\n                item={props.item}\n                onChange={props.onChange}\n                setExercises={props.setExercises}\n                onSave={props.setExercises}/>\n\n            <AddButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\n        </Box>\n    </div>\n}\n \nexport default CreateTraningProgram;","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport AddButton from '../base/AddButton';\nimport TraningProgramForm from './TraningProgramForm';\n\nconst TraningProgramInfo = props => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\n            <TraningProgramForm\n                item={props.item}\n                onChange={props.onChange}\n                setExercises={props.setExercises}\n                onSave={props.setExercises}/>\n\n            <Button\n                onClick={props.onRemove}\n                fullWidth\n                color=\"error\"\n                sx={{  mt: 1, pl: 0 }}\n                disableRipple>\n                Удалить программу\n            </Button>\n\n            <AddButton text=\"Сохранить\" onClick={props.onSave} isBottom={true}/>\n        </Box>\n    </div>\n}\n \nexport default TraningProgramInfo;","import { Grid } from '@mui/material';\nimport React from 'react';\nimport { GetTraningPrograms } from '../../api/TraningProgramAPI';\nimport TraningProgramCard from \"../program/TraningProgramCard\";\n\n\nconst TraningProgramList = (props) => {\n    return <Grid container spacing={2}>\n        {GetTraningPrograms().map((program, idx) => <Grid key={idx} item xs={12}>\n            <TraningProgramCard item={program} onClick={props.onClick}/>\n        </Grid>)}\n    </Grid>\n}\n \nexport default TraningProgramList;","import { Box } from '@mui/material';\nimport React, { useState } from 'react';\nimport { AddTraningProgram, RemoveTraningProgram, UpdateTraningProgram } from '../../api/TraningProgramAPI';\nimport AddButton from '../base/AddButton';\nimport Modal from '../base/Modal';\nimport { DefaultModalState, DefaultTraningProgram, ModalTypeAdd, ModalTypeInfo } from '../Constants';\nimport CreateTraningProgram from '../program/CreateTraningProgram';\nimport TraningProgramInfo from '../program/TraningProgramInfo';\nimport TraningProgramList from '../program/TraningProgramList';\n \nexport const TraningProgramScene = (props) => {\n    const [modalInfo, setModalInfo] = useState(DefaultModalState);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const handleChangeItem = (e, field) => {\n        var item = selectedItem;\n        item[field] = e.target.value;\n        setSelectedItem({ ...item });\n    }\n\n    const removeItem = () => {\n        RemoveTraningProgram(selectedItem.id)\n        closeModal();\n    }\n\n    const closeModal = () => {\n        setModalInfo(DefaultModalState);\n        setSelectedItem(null)\n    }\n\n    const onChangeModal = (e, type, item) => {\n        if (modalInfo.open) {\n            closeModal();\n        } else {\n            setModalInfo({\n                open: true,\n                type: type,\n                title: type == ModalTypeAdd ? \"Создание программы\" : null\n            });\n            setSelectedItem({ ...item });\n        }\n    }\n\n    const saveItem = (e) => {\n        \n        UpdateTraningProgram(selectedItem);\n        closeModal();\n    }\n\n    const addItem = (e) => {\n        AddTraningProgram(selectedItem);\n        closeModal();\n    }\n\n    const setExercises = (exercises) => {\n        console.log(\"Exercises\", exercises);\n        setSelectedItem({...selectedItem, exercises: exercises})\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\",\n    }}>\n        <TraningProgramList onClick={onChangeModal}/>\n        <Modal\n            open={modalInfo.open}\n            onClose={(e) => onChangeModal(e, null, null)}\n            title={modalInfo.title}>\n            {modalInfo.type == ModalTypeInfo && <TraningProgramInfo\n                onChange={handleChangeItem}\n                item={selectedItem}\n                onRemove={removeItem}\n                onSave={saveItem}\n                setExercises={setExercises} />}\n            {modalInfo.type == ModalTypeAdd && <CreateTraningProgram\n                onChange={handleChangeItem}\n                item={selectedItem}\n                onSave={addItem}\n                setExercises={setExercises} />}\n        </Modal>\n\n\n        <AddButton text=\"Создать программу\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultTraningProgram())}/>\n    </Box>\n}\n \nexport default TraningProgramScene;","import React from \"react\";\nimport { BottomNavigation, BottomNavigationAction, Paper } from \"@mui/material\";\n\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\nimport FitbitIcon from '@mui/icons-material/Fitbit';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\n\nconst Navigation = props => {\n    return <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\n        <BottomNavigation value={props.activeScene} onChange={props.handleChange} showLabels>\n            <BottomNavigationAction value=\"traning-programs\" label=\"Программы\" icon={<ListAltIcon />} />\n            <BottomNavigationAction value=\"traning\" label=\"Тренировки\" icon={<FitnessCenterIcon />} />\n            <BottomNavigationAction value=\"exercises\" label=\"Упражнения\" icon={<FitbitIcon />} />\n        </BottomNavigation>\n    </Paper>\n}\n\nexport default Navigation;","import { Box, createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport Navigation from './Navigation'\n\nconst darkTheme = createTheme({\n    palette: {\n        primary: {\n            main: \"#EAE1DF\",\n            light: \"#f7f3f3\",\n            dark: \"#be9d9d\",\n            contrastText: \"#322E18\"\n        },\n        secondary: {\n            main: \"#545E56\",\n            light: \"#EAECEA\",\n            dark: \"#A9B1A9\"\n        },\n        background: {\n            default: \"#f7f3f3\"\n        }\n    },\n    shape: {\n        borderRadius: '8px'\n    },\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n    }\n});\n\nconst Layout = ({ children }) => {\n    const [scene, setScene] = useState(\"traning\")\n    const location = useLocation();\n    const navigate = useNavigate();\n    useEffect(() => {\n        const path = location.pathname.substring(1);\n        if (path.length == 0 || path.includes('workout-process')) {\n            setScene(\"traning\")\n        } else {\n            setScene(path)\n        }\n    }, [location])\n\n    const handleChange = (event, newValue) => {\n        console.log(scene)\n        navigate(`/${newValue}`)\n    };\n\n    return <Box sx={{ display: 'flex', height: '100%', justifyContent: 'center', pb: 7, pt: 0 }}>\n        <CssBaseline />\n        <ThemeProvider theme={darkTheme}>\n            <Box component={\"main\"} sx={{ p: 1, width: '100%', height: '100%', overflowY: \"scroll\", pb: 10 }}>\n                <Outlet />\n                <Navigation activeScene={scene} handleChange={handleChange} />\n            </Box>\n        </ThemeProvider>\n    </Box>\n}\n\nexport default Layout;","import { Box, Checkbox, Divider, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TableRow, TextField, Typography, useTheme } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { GetExerciseById } from '../../api/ExercisesAPI';\nimport AddSetButton from '../base/AddSetButton';\nimport SetsTable from '../program/SetsTable';\nimport { GetWorkoutById } from '../service/WorkoutService';\n\nconst WorkoutProcessScene = (props) => {\n    const { workoutId } = useParams();\n    const theme = useTheme();\n    const [workout, updateWorkout] = useState({ exercises: [] });\n    useEffect(() => {\n        let result = GetWorkoutById(workoutId)\n        updateWorkout(result)\n    }, [workoutId])\n\n    const handleChangeInput = (e, exercise, index) => {\n        let target = getTargetExerciseById(exercise.id)\n        let newValue = e.target.value == \"\" ? \"\" : parseInt(e.target.value);\n        target.sets[index][e.target.name] = newValue\n        updateWorkoutFilling(target)\n    }\n\n    const handleChangeCompleted = (e, exercise, index) => {\n        let target = getTargetExerciseById(exercise.id)\n        target.sets[index].completed = !target.sets[index].completed;\n        updateWorkoutFilling(target)\n    }\n\n    const getTargetExerciseById = id => {\n        return workout.exercises.find(e => e.id == id);\n    }\n\n    const updateWorkoutFilling = (target) => {\n        updateWorkout({\n            ...workout, exercises: workout.exercises.map(e => {\n                return e.id == target.id ? target : e;\n            })\n        })\n    }\n\n    const addSet = (exercise) => {\n        let target = getTargetExerciseById(exercise.id);\n        target.sets.push({\n            repeats: 10,\n            wieght: 0,\n            completed: false\n        });\n        updateWorkoutFilling(target)\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\"\n    }}>\n        <Grid container spacing={2}>\n            {workout.exercises.map((exercise, idx) => {\n                const item = GetExerciseById(exercise.id);\n                return <Grid item xs={12} key={idx}>\n                    <SetsTable\n                        item={item}\n                        sets={exercise.sets}\n                        handleChangeCompleted={handleChangeCompleted}\n                        handleChangeInput={handleChangeInput}\n                        addSet={addSet}/>\n                </Grid>\n            })}\n        </Grid>\n    </Box>\n}\n\nexport default WorkoutProcessScene;","import React from \"react\";\nimport './App.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nimport { DefaultExercises, DefaultTraningPrograms } from \"./components/Constants\";\nimport { createHashRouter, createRoutesFromElements, Route, RouterProvider } from \"react-router-dom\";\n\nimport TraningScene from \"./components/scenes/TraningScene\";\nimport ExercisesScene from \"./components/scenes/ExercisesScene\";\nimport TraningProgramScene from \"./components/scenes/TraningProgramScene\";\nimport Layout from \"./components/base/Layout\";\nimport WorkoutProcessScene from \"./components/scenes/TraningProcessScene\";\n\nconst initExercises = () => {\n  if (localStorage.getItem(\"exercises\") == null)\n    localStorage.setItem(\"exercises\", JSON.stringify(DefaultExercises))\n  if (localStorage.getItem(\"traning_programs\") == null)\n    localStorage.setItem(\"traning_programs\", JSON.stringify(DefaultTraningPrograms))\n}\n\nconst router = createHashRouter(\n  createRoutesFromElements(\n    <Route path=\"/\" element={<Layout />}>\n      <Route index element={<TraningScene />} />\n      <Route path=\"exercises\" element={<ExercisesScene />} />\n      <Route path=\"traning-programs\" element={<TraningProgramScene />} />\n      <Route path=\"traning\" element={<TraningScene />} />\n      <Route path=\"workout-process/:workoutId\" element={<WorkoutProcessScene />} />\n    </Route>\n  )\n);\n\nconst App = () => {\n  initExercises();\n  return (<RouterProvider router={router} />);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}