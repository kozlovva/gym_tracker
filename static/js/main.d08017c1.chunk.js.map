{"version":3,"sources":["components/Constants.js","api/TraningProgramAPI.js","components/base/MainButton.js","components/base/Modal.js","components/program/TraningProgramCard.js","api/WorkoutAPI.js","utils/DateUtils.js","components/service/WorkoutService.js","components/service/TraningProgramService.js","components/base/TextWithIcon.js","components/traning/TraningCard.js","components/scenes/TraningScene.js","api/ExercisesAPI.js","components/exercise/ExerciseForm.js","components/exercise/CreateExercise.js","components/base/RemoveEntityButton.js","components/exercise/ExerciseInfo.js","components/exercise/ExerciseList.js","components/scenes/ExercisesScene.js","components/exercise/ExercisesSelector.js","components/base/AddSetButton.js","components/program/SetsTable.js","components/program/TraningProgramForm.js","components/program/CreateTraningProgram.js","components/program/TraningProgramInfo.js","components/program/TraningProgramList.js","components/scenes/TraningProgramScene.js","components/base/Navigation.js","components/base/Layout.js","components/scenes/TraningProcessScene.js","components/base/Chart.js","components/base/ChartCard.js","components/service/ProgressService.js","components/scenes/ProgressScene.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["MuscleGroupsInfo","BICEPS","locale","TRICEPS","QUADS","GLUTES","ABS","CHEST","SHOULDERS","HAMSTRINGS","FOREARMS","NECK","LATS","LOWER_BACK","MIDDLE_BACK","TRAPS","MuscleGroupsEnum","DefaultExercises","id","title","muscle","DefaultModalState","open","type","DefaultTraningPrograms","description","exercises","sets","repeats","weight","complited","GenerateProgramExercise","i","push","completed","GetTraningPrograms","items","localStorage","getItem","JSON","parse","SetTraningPrograms","traningPrograms","console","log","setItem","stringify","MainButton","_ref","_ref2","isBottom","onClick","text","sx","react_default","a","createElement","Box","position","width","bottom","left","right","pl","pr","Object","defineProperty","elevation","Button","variant","fullWidth","color","objectSpread","p","Transition","React","forwardRef","props","ref","Slide","assign","direction","Modal","Dialog","TransitionComponent","PaperProps","height","m","borderBottomRightRadius","borderBottomLeftRadius","DialogTitle","pb","IconButton","aria-label","onClose","top","theme","palette","grey","Close_default","DialogContent","children","Card","styled","display","minHeight","backgroundColor","primary","light","TraningProgramCard","TraningProgramCard_Card","e","item","CardActionArea","CardHeader","showCount","CardContent","Typography","length","GetWorkouts","SetWorkouts","PadTo2Digits","num","toString","padStart","FormatDate","date","getFullYear","getUTCMonth","getUTCDate","join","CreateWorkout","selectedProgram","traning","uuidv4","notes","traningProgramId","duration","startAt","endAt","status","rejectCause","volume","progress","Date","map","exercise","set","GetWorkoutById","find","ById","SaveWorkout","workout","CompleteWorkout","from","to","concat","Math","floor","getTime","reduce","result","CalcExerciseVolume","CalcProgressInPercent","IsNew","IsActive","IsCompleted","workoutExercise","filter","sum","countOfSets","GetWorkoutSetsCount","completedSets","CalcCompletedSets","toFixed","GetTraningProgramById","TextWithIcon","alignItems","justifyContent","icon","gutterBottom","mr","mb","lineHeight","CustomCard","_objectSpread","backgroundImage","CardActions","flexDirection","flex","CalendarMonthIcon","AccessTimeIcon","TraningCard","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","EmptyResult","TraningScene","_useState","useState","_useState2","_slicedToArray","todayTranings","setTodayTranings","_useState3","_useState4","traningHistory","setTraningHistory","_useState5","_useState6","isOpen","setIsOpen","navigate","useNavigate","useEffect","now","GetTodayWorkouts","GetWorkoutHistory","onStart","_asyncToGenerator","_callee","modaType","traningProgram","_context","navigateToWorkout","_x","_x2","_x3","apply","arguments","handleChangeOpen","onChangeModal","overflow","Grid","container","spacing","idx","xs","Divider","mt","GetExercises","SetExercises","GetExercisesByMuscle","GetExerciseById","MenuProps","style","maxHeight","ITEM_HEIGHT","ExerciseFrom","TextField","onChange","label","pt","FormControl","ml","InputLabel","Select","labelId","MenuItem","CreateExercise","Box_Box","flexWrap","ExerciseForm","base_MainButton","onSave","RemoveEntityButton","disableRipple","ExerciseInfo","base_RemoveEntityButton","onRemove","Accordion","&:not(:last-child)","borderBottom","AccordionSummary","expandIcon","ArrowForwardIosSharp_default","fontSize","padding","& .MuiAccordionSummary-expandIconWrapper.Mui-expanded","transform","& .MuiAccordionSummary-content","marginLeft","AccordionDetails","MuiAccordionDetails","_ref3","borderTop","ExerciseList","slicedToArray","expanded","setExpanded","calcCount","CountExercisesByMuscle","ExerciseList_Accordion","panel","event","newExpanded","ExerciseList_AccordionSummary","ExpandMore_default","aria-controls","Badge","showZero","badgeContent","ExerciseList_AccordionDetails","index","stopPropagation","onClickToExercise","textAlign","defaultModalState","ExercisesScene","modalInfo","setModalInfo","selectedItem","setSelectedItem","handleChangeExercise","field","target","closeModal","exercise_ExerciseList","base_Modal","exercise_ExerciseInfo","RemoveExercises","UpdateExercise","exercise_CreateExercise","AddExercises","ExercisesSelector","ExercisesSelector_AccordionSummary","endIcon","isSelected","Check_default","handleCheckItem","AddSetButton","size","SetsTable","handleChangeInput","handleChangeCompleted","addSet","disableWeigth","disableCompleted","infoMode","inputMode","useTheme","Paper","TableContainer","Table","tableLayout","TableHead","TableRow","TableCell","align","TableBody","inputProps","Checkbox","disabled","checked","GenerateExercise","TraningProgramForm","selected","setSelected","setOpen","_toConsumableArray","handleChangeRepeats","parseInt","selectedExercises","setExercises","CreateTraningProgram","program_TraningProgramForm","TraningProgramInfo","TraningProgramList","program","program_TraningProgramCard","TraningProgramScene","handleChangeItem","RemoveTraningProgram","UpdateTraningProgram","AddTraningProgram","Navigation","BottomNavigation","activeScene","handleChange","showLabels","BottomNavigationAction","ListAltIcon","FitnessCenterIcon","QueryStatsIcon","FitbitIcon","darkTheme","createTheme","main","dark","contrastText","secondary","background","default","shape","borderRadius","typography","fontFamily","Layout","scene","setScene","location","useLocation","path","pathname","substring","includes","CssBaseline","ThemeProvider","component","overflowY","Outlet","newValue","WorkoutProcessScene","workoutId","useParams","updateWorkout","getTargetExerciseById","updateWorkoutFilling","StartWorkout","CustomTooltip","payload","Chart","data","dataKey","ResponsiveContainer","AreaChart","Tooltip","y","content","wrapperStyle","outlineColor","Area","stroke","fill","strokeWidth","ChartCard","maxValue","gap","GetStatisticByPeriod","period","range","dateRange","setDate","getDate","GetDateRangeByPeriod","workouts","max","workoutCount","fullCompleteCount","tonnageData","ProgressScene","updatePeriod","fade","updateFade","statistic","updateStatistic","ToggleButtonGroup","setTimeout","exclusive","ToggleButton","Fade","in","timeout","router","createHashRouter","createRoutesFromElements","Route","element","App","RouterProvider","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","getRegistrations","registrations","_step","_iterator","_createForOfIteratorHelper","s","n","update","f","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0","URL","process","href","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.d08017c1.chunk.js","sourcesContent":["import {v4 as uuidv4} from 'uuid';\n\nexport const MuscleGroupsInfo = {\n    \"BICEPS\": {\n        \"locale\": \"Бицепс\"\n    },\n    \"TRICEPS\": {\n        \"locale\": \"Трицепс\"\n    },\n    \"QUADS\": {\n        \"locale\": \"Передняя поверхность бедра\"\n    },\n    \"GLUTES\": {\n        \"locale\": \"Ягодицы\"\n    },\n    \"ABS\": {\n        \"locale\": \"Пресс\"\n    },\n    \"CHEST\": {\n        \"locale\": \"Грудь\"\n    },\n    \"SHOULDERS\": {\n        \"locale\": \"Плечи\"\n    },\n    \"HAMSTRINGS\": {\n        \"locale\": \"Задняя поверхность бедра\"\n    },\n    \"FOREARMS\": {\n        \"locale\": \"Предплечья\"\n    },\n    \"NECK\": {\n        \"locale\": \"Шея\"\n    },\n    \"LATS\": {\n        \"locale\": \"Широчайшие\"\n    },\n    \"LOWER_BACK\": {\n        \"locale\": \"Разгибатели спины/Поясница\"\n    },\n    \"MIDDLE_BACK\": {\n        \"locale\": \"Середина спины\"\n    },\n    \"TRAPS\": {\n        \"locale\": \"Трапеции\"\n    }\n};\n\nexport const MuscleGroupsEnum = [\n    \"BICEPS\", \n    \"TRICEPS\", \n    \"QUADS\", \n    \"GLUTES\", \n    \"ABS\", \n    \"CHEST\", \n    \"SHOULDERS\", \n    \"HAMSTRINGS\", \n    \"FOREARMS\", \n    \"NECK\", \n    \"LATS\", \n    \"LOWER_BACK\", \n    \"MIDDLE_BACK\", \n    \"TRAPS\"\n];\n\nexport const DefaultExercises = [\n    {\n        \"id\": \"1\",\n        \"title\": \"Подъем штанги на бицепс\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"18\",\n        \"title\": \"Подтягивания обратным хватом\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"19\",\n        \"title\": \"Подъем гантелей в скамье Скотта\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"15\",\n        \"title\": \"Молотки с гантелями\",\n        \"muscle\": \"BICEPS\"\n    }, \n    {\n        \"id\": \"2\",\n        \"title\": \"Французский жим со штангой\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"20\",\n        \"title\": \"Французский со штангой\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"21\",\n        \"title\": \"Жим лежа узким хватом\",\n        \"muscle\": \"TRICEPS\"\n    },\n    {\n        \"id\": \"22\",\n        \"title\": \"Разгибания на трицепс в верхнем блоке\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"3\",\n        \"title\": \"Приседания со штангой\",\n        \"muscle\": \"QUADS\"\n    }, \n    {\n        \"id\": \"23\",\n        \"title\": \"Жим ногами\",\n        \"muscle\": \"QUADS\"\n    }, \n    {\n        \"id\": \"24\",\n        \"title\": \"Разгибания в блоке на квадрицепс\",\n        \"muscle\": \"QUADS\"\n    },\n    {\n        \"id\": \"25\",\n        \"title\": \"Выпады с гантелей\",\n        \"muscle\": \"QUADS\"\n    },  \n    {\n        \"id\": \"4\",\n        \"title\": \"Отведения ноги в блоке\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"26\",\n        \"title\": \"Ягодичный мост\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"27\",\n        \"title\": \"Глубокие приседания с широкой постановкой ног\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"28\",\n        \"title\": \"Отведение ног в стороны в тренажере\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"5\",\n        \"title\": \"Скручивания в римском стуле\",\n        \"muscle\": \"ABS\"\n    }, \n    {\n        \"id\": \"29\",\n        \"title\": \"Скручивания в висе на перекладине\",\n        \"muscle\": \"ABS\"\n    }, \n    {\n        \"id\": \"6\",\n        \"title\": \"Жим со штангой лежа\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"30\",\n        \"title\": \"Жим со штангой лежа на наклонной скамье\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"31\",\n        \"title\": \"Бабочка\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"7\",\n        \"title\": \"Махи с шагтелями в стороны\",\n        \"muscle\": \"SHOULDERS\"\n    },\n    {\n        \"id\": \"16\",\n        \"title\": \"Армейский жим\",\n        \"muscle\":\"SHOULDERS\"\n    },\n    {\n        \"id\": \"17\",\n        \"title\": \"Жим гантелей сидя\",\n        \"muscle\": \"SHOULDERS\"\n    }, \n    {\n        \"id\": \"8\",\n        \"title\": \"Румынская тяга\",\n        \"muscle\": \"HAMSTRINGS\"\n    }, \n    {\n        \"id\": \"9\",\n        \"title\": \"Обезьяний хват\",\n        \"muscle\": \"FOREARMS\"\n    }, \n    {\n        \"id\": \"10\",\n        \"title\": \"Скричивания шеи с блином\",\n        \"muscle\": \"NECK\"\n    }, \n    {\n        \"id\": \"11\",\n        \"title\": \"Подтягивания\",\n        \"muscle\": \"LATS\"\n    }, \n    {\n        \"id\": \"12\",\n        \"title\": \"Экстензия\",\n        \"muscle\": \"LOWER_BACK\"\n    }, \n    {\n        \"id\": \"13\",\n        \"title\": \"Тяга нижнего блока\",\n        \"muscle\": \"MIDDLE_BACK\"\n    }, \n    {\n        \"id\": \"14\",\n        \"title\": \"Шраги с гантелями\",\n        \"muscle\": \"TRAPS\"\n    }\n]\n\nexport const ModalTypeInfo = \"INFO\";\nexport const ModalTypeAdd = \"ADD\";\n\nexport const DefaultExercise = () => {\n    return {\n        \"id\": uuidv4(),\n        title: \"\",\n        muscle: \"BICEPS\"\n    }\n}\n\nexport const DefaultModalState = {\n    open: false,\n    type: null,\n    title: null\n};\n\nexport const DefaultTraningProgram = () => {\n    return {\n        \"id\": uuidv4(),\n        \"title\": \"\",\n        \"description\": \"\",\n        \"exercises\": []\n    }\n}\n\nexport const DefaultTraningPrograms = [\n    {\n        \"id\": \"1\",\n        \"title\": \"Грудь-бицепс\",\n        \"description\": \"\",\n        \"exercises\": [\n            {\n                \"id\": \"1\",\n                \"sets\": [\n                    {\n                        repeats: 10,\n                        weight: 0,\n                        complited: false\n                    },\n                    {\n                        repeats: 10,\n                        weight: 0,\n                        complited: false\n                    },\n                    {\n                        repeats: 10,\n                        weight: 0,\n                        complited: false\n                    },\n                    {\n                        repeats: 10,\n                        weight: 0,\n                        complited: false\n                    }\n                ]\n            }\n        ]\n    },\n    \n]\n\nexport const DefaultTraning = () =>  {\n    return {\n        \"id\": uuidv4(),\n        \"notes\": \"\",\n        \"traningProgramId\": \"\",\n        \"duration\": \"\",\n        \"startAt\": \"\",\n        \"endAt\": \"\",\n        \"exercises\": [],\n        \"status\": \"ACTIVE\",\n        \"rejectCause\": \"\",\n        \"volume\": 0,\n        \"progress\": 0\n    }\n}\n\nexport const Statuses = [\n    \"NEW\", \"ACTIVE\", \"COMPLETED\", \"REJECTED\"\n]\n\nexport const DefaultSet =() => {\n    return {\n        repeats: 10,\n        weight: 0,\n        completed: false\n    } \n}\n\nexport const GenerateProgramExercise = id => {\n    let setCount = 4;\n    let sets = [];\n    for (let i = 0; i<setCount; i++) {\n        sets.push(DefaultSet())\n    }\n    return {\n        id: id,\n        sets: sets\n    }\n}","export const GetTraningPrograms = () => {\n    var items = localStorage.getItem(\"traning_programs\");\n    return items != null ? JSON.parse(items) : [];\n}\n\nexport const SetTraningPrograms = (traningPrograms) => {\n    console.log(\"Update traning program in local storage...\")\n    localStorage.setItem(\"traning_programs\", JSON.stringify(traningPrograms))\n}\n\nexport const AddTraningProgram = exercise => {\n    const items = GetTraningPrograms();\n    items.push(exercise);\n    SetTraningPrograms(items);\n}\n\nexport const RemoveTraningProgram = id => {\n    const items = GetTraningPrograms().filter(exercise => exercise.id != id);\n    SetTraningPrograms(items);\n}\n\nexport const UpdateTraningProgram = exercise => {\n    const items = GetTraningPrograms().map(e => {\n        if(e.id == exercise.id) {\n            \n            return exercise;\n        }\n\n        return e;\n    })\n    SetTraningPrograms(items);\n}\n\n\nexport const GetTraningProgramById = id => {\n    const exercises = GetTraningPrograms();\n    return exercises.find(e => e.id == id); \n}","import React from \"react\";\nimport { Box, Button } from \"@mui/material\"\n\nconst MainButton = ({isBottom, onClick, text, sx}) => {\n    return <Box sx={{\n        position: 'fixed', \n        width: \"100%\", \n        bottom: isBottom ? 0 : 40, \n        left: 0, \n        right: 0, \n        pl: 1, \n        pr: 1,\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n    }} elevation={3}>\n        <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"secondary\"\n            sx={{\n                p: 2,\n                ...sx\n            }}\n            onClick={onClick}>\n            {text}\n        </Button>\n    </Box>\n}\n\nexport default MainButton;","import { Dialog, DialogContent, DialogTitle, IconButton, Slide, Typography } from '@mui/material';\nimport React from 'react';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Modal = (props) => {\n    return <Dialog\n        open={props.open}\n        TransitionComponent={Transition}\n        PaperProps={{\n            sx: {\n                height: \"100%\",\n                width: \"100%\",\n                m: 0,\n                position: \"fixed\",\n                bottom: 0,\n                borderBottomRightRadius: 0,\n                borderBottomLeftRadius: 0\n            }\n        }}>\n        <DialogTitle sx={{pb:4}}>\n            {props.title}\n            <IconButton\n                aria-label=\"close\"\n                onClick={props.onClose}\n                sx={{\n                    position: 'absolute',\n                    right: 8,\n                    top: 8,\n                    color: (theme) => theme.palette.grey[500],\n                }}\n            >\n                <CloseIcon />\n            </IconButton>\n        </DialogTitle>\n        <DialogContent sx={{}}>\n            {props.children}\n        </DialogContent>\n    </Dialog>\n}\n\nexport default Modal;","import React from 'react';\nimport { Card as MuiCard, CardActionArea, CardContent, CardHeader, styled, Typography } from \"@mui/material\"\nimport { ModalTypeInfo } from '../Constants';\n\nconst Card = styled((props) => (\n    <MuiCard sx={{ display: \"flex\", minHeight: \"180px\", ...props.sx }} {...props} />\n))(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light\n}))\n\nconst TraningProgramCard = (props) => {\n\n    return <Card sx={props.sx}\n        onClick={(e) => props.onClick(e, ModalTypeInfo, props.item)}>\n        <CardActionArea>\n            <CardHeader title={props.item.title}>\n            </CardHeader>\n            \n            {props.showCount && <CardContent>\n                <Typography variant='caption'>Кол-во упражнений: {props.item.exercises.length || 0}</Typography>\n            </CardContent>}\n        </CardActionArea>\n    </Card>\n}\n\nexport default TraningProgramCard;","const DatabaseName = \"workout\";\n\nexport const GetWorkouts = () => {\n    var items = localStorage.getItem(DatabaseName);\n    return items ? JSON.parse(items) : [];\n}\n\n\nexport const SetWorkouts = items => {\n    localStorage.setItem(DatabaseName, JSON.stringify(items))\n}\n\nexport const GetWorkoutById = id => {\n    return GetWorkouts().find(e => e.id == id);\n}","const PadTo2Digits = (num) => {\n    return num.toString().padStart(2, '0');\n}\n\nexport const FormatDateTime = (date) => {\n    return (\n        [\n            date.getFullYear(),\n            PadTo2Digits(date.getUTCMonth() + 1),\n            PadTo2Digits(date.getUTCDate()),\n        ].join('-') +\n        ' ' +\n        [\n            PadTo2Digits(date.getUTCHours()),\n            PadTo2Digits(date.getUTCMinutes()),\n            PadTo2Digits(date.getUTCSeconds()),\n        ].join(':')\n    );\n}\n\nexport const FormatDate = (date) => {\n    return (\n        [\n            date.getFullYear(),\n            PadTo2Digits(date.getUTCMonth() + 1),\n            PadTo2Digits(date.getUTCDate()),\n        ].join('-')\n    );\n}\n\nexport const MinutesBetweenDates = (from, to) => {\n    console.log(`From ${from} - to ${to}`)\n    return Math.floor((to.getTime() - from.getTime()) / 1000 / 60);\n}\n\nexport const GetDateRangeByPeriod = period => {\n    const date = new Date();\n    if (period == \"week\") {\n        date.setDate(date.getDate() - 7) \n    }\n    if (period == \"year\") {\n        date.setDate(date.getDate() - 365)\n    }\n    if (period == \"month\") {\n        date.setDate(date.getDate() - 30)\n    }\n\n    return {to: new Date(), from: date}\n}","import { GetWorkouts, SetWorkouts, GetWorkoutById as ById } from \"../../api/WorkoutAPI\";\nimport { FormatDate, MinutesBetweenDates } from \"../../utils/DateUtils\";\nimport { DefaultTraning } from \"../Constants\"\n\nexport const CreateWorkout = (selectedProgram) => {\n    const traning = DefaultTraning();\n    traning.traningProgramId = selectedProgram.id;\n    traning.startAt = new Date();\n\n    traning.exercises = selectedProgram.exercises.map(exercise => {\n\n        return {\n            id: exercise.id,\n            sets: exercise.sets.map(set => {\n                return {\n                    repeats: set.repeats,\n                    weight: 0,\n                    completed: false\n                }\n            })\n        }\n    })\n\n    const items = GetWorkouts();\n    items.push(traning);\n    SetWorkouts(items);\n    return traning;\n}\n\nexport const GetTodayWorkouts = () => {\n    var now = new Date();\n    return GetWorkouts()\n        .filter(e => FormatDate(new Date(e.startAt)) == FormatDate(now))\n}\n\nexport const GetWorkoutHistory = () => {\n    var now = new Date();\n    return GetWorkouts()\n        .filter(e => FormatDate(new Date(e.startAt)) != FormatDate(now))\n}\n\nexport const GetWorkoutById = id => {\n    return ById(id);\n}\n\nexport const SaveWorkout = workout => {\n    const items = GetWorkouts();\n    SetWorkouts(items.map(item => {\n        return item.id == workout.id ? workout : item\n    }));\n}\n\nexport const StartWorkout = workout => {\n    workout.startAt = new Date();\n    workout.status = \"ACTIVE\";\n    SaveWorkout(workout)\n    return workout;\n}\n\nexport const CompleteWorkout = workout => {\n    workout.endAt = new Date();\n    workout.status = \"COMPLETED\";\n    workout.duration = MinutesBetweenDates(new Date(workout.startAt), workout.endAt);\n    workout.volume = workout.exercises\n        .reduce((result, exercise) => result + CalcExerciseVolume(exercise), 0);\n    workout.progress = CalcProgressInPercent(workout);\n    SaveWorkout(workout)\n    return workout;\n}\n\nexport const RejectWorkout = (workout, cause) => {\n    workout.endAt = new Date();\n    workout.status = \"REJECTED\";\n    workout.rejectCause = cause\n    SaveWorkout(workout)\n    return workout;\n}\n\nexport const IsNew = workout => {\n    return workout.status == \"NEW\";\n}\n\nexport const IsActive = workout => {\n    return workout.status == \"ACTIVE\";\n}\n\nexport const IsCompleted = workout => {\n    return workout.status == \"COMPLETED\";\n}\n\nexport const CalcExerciseVolume = workoutExercise => {\n    let result = workoutExercise.sets\n        .filter(set => set.completed)\n        .reduce((sum, set) => sum + set.repeats * set.weight, 0);\n    return result;\n}\n\nexport const CalcProgressInPercent = workout => {\n    let countOfSets = GetWorkoutSetsCount(workout);\n    let completedSets = workout.exercises.reduce((result, exercise) => result + CalcCompletedSets(exercise), 0)\n    console.log(`${countOfSets} - ${completedSets}`)\n    return ((completedSets / countOfSets) * 100).toFixed(0)\n}\n\nexport const CalcCompletedSets = workoutExercise => {\n    return workoutExercise.sets.filter(set => set.completed).length\n}\n\nexport const GetWorkoutSetsCount = workout => {\n    return workout.exercises.reduce((result, exercise) => result + exercise.sets.length, 0)\n}\n\nexport const GetWorkoutsByDateRange = range => {\n    return GetWorkouts()\n        .filter(workout => { \n            const endAt = new Date(workout.endAt);\n            if (endAt >= range.from && endAt <= range.to) {\n                return workout;\n            }\n        })\n}","import { GetTraningPrograms } from \"../../api/TraningProgramAPI\"\n\nexport const GetTraningProgramById = id => {\n    return GetTraningPrograms().find(e => e.id == id);\n}","import { Box, Typography } from '@mui/material';\nimport React from 'react';\n\nconst TextWithIcon = (props) => {\n    return <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n        {props.icon}\n        <Typography variant=\"caption\" gutterBottom sx={{ mr: 1, mb: 0, lineHeight: 0 }}>{props.text}</Typography>\n    </Box>\n}\n\nexport default TextWithIcon;","import React from 'react';\nimport { Card, CardActionArea, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport Tag from '../base/Tag';\nimport { Box } from '@mui/system';\n\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport TextWithIcon from '../base/TextWithIcon';\nimport { FormatDate } from '../../utils/DateUtils';\n\nconst defailtSx = {\n    display: 'flex'\n}\n\nconst TraningCard = (props) => {\n    if (props.status == \"REJECTED\")\n        return <CustomCard {...props} sx={{\n            backgroundColor: \"#93291E\",\n            backgroundImage: 'linear-gradient(62deg, #ED213A 0%, #93291E 100%)',\n\n        }} />\n    if (props.status == \"COMPLETED\")\n        return <CustomCard {...props} sx={{\n            backgroundColor: \"#E2E2E2\",\n            backgroundImage: 'linear-gradient(62deg, #C9D6FF 0%, #E2E2E2 100%)',\n\n        }} />\n\n    return <CustomCard {...props} />\n}\n\nconst CustomCard = props => {\n    return <Card\n        onClick={props.onClick}\n        sx={{\n            display: 'flex',\n            backgroundColor: \"#FBAB7E\",\n            backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\n            ...props.sx\n        }}>\n        <CardActionArea>\n            <CardHeader title={props.title}>\n            </CardHeader>\n            <CardActions sx={{ justifyContent: \"flex-end\", p: 2 }}>\n                <Box sx={{ display: 'flex', flexDirection: \"column\", flex: \"1 0 auto\" }}>\n                </Box>\n                <Box sx={{ display: \"flex\", alignItems: 'center', pl: 1 }}>\n                    <TextWithIcon\n                        icon={<CalendarMonthIcon />}\n                        text={FormatDate(new Date(props.date))} />\n                    <TextWithIcon\n                        icon={<AccessTimeIcon />}\n                        text={`${props.duration} мин.`} />\n                </Box>\n            </CardActions>\n        </CardActionArea>\n    </Card>\n}\n\nexport default TraningCard;","import { Box, Divider, Grid, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { GetTraningPrograms } from \"../../api/TraningProgramAPI\";\nimport MainButton from \"../base/MainButton\";\nimport Modal from \"../base/Modal\";\nimport TraningProgramCard from \"../program/TraningProgramCard\";\nimport { CreateWorkout, GetTodayWorkouts, GetWorkoutHistory } from \"../service/WorkoutService\";\nimport { GetTraningProgramById } from \"../service/TraningProgramService\";\nimport TraningCard from \"../traning/TraningCard\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst EmptyResult = () => <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\n    <Typography variant=\"caption\">Пока тренировок нет</Typography>\n</Box>\n\nexport const TraningScene = props => {\n    const [todayTranings, setTodayTranings] = useState([])\n    const [traningHistory, setTraningHistory] = useState([])\n    const [isOpen, setIsOpen] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const todayTranings = GetTodayWorkouts();\n        setTodayTranings(todayTranings);\n        const traningHistory = GetWorkoutHistory();\n        setTraningHistory(traningHistory)\n    }, [])\n\n    const onStart = async (e, modaType, traningProgram) => {\n        const workout = await CreateWorkout(traningProgram);\n        navigateToWorkout(workout.id)\n    }\n\n    const handleChangeOpen = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const closeModal = () => {\n        handleChangeOpen();\n    }\n\n    const onChangeModal = () => {\n        if (isOpen) {\n            closeModal();\n        } else {\n            handleChangeOpen();\n        }\n    }\n\n    const navigateToWorkout = id => {\n        navigate(`/workout-process/${id}`)\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\",\n    }}>\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\n            <Typography>Сегодня</Typography>\n        </Box>\n        {todayTranings.length > 0\n            ? <Grid container spacing={2}>\n                {todayTranings.map((traning, idx) =>\n                    <Grid item key={idx} xs={12}>\n                        <TraningCard\n                            status={traning.status}\n                            onClick={() => {navigateToWorkout(traning.id)}}\n                            title={GetTraningProgramById(traning.traningProgramId).title}\n                            date={traning.startAt}\n                            duration={traning.duration} />\n                    </Grid>\n                )}\n            </Grid>\n            : <EmptyResult />}\n\n\n\n        <Divider light sx={{ mt: 2, mb: 2 }}></Divider>\n\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\n            <Typography>История</Typography>\n        </Box>\n\n        {traningHistory.length > 0\n            ? <Grid container spacing={2}>\n                {traningHistory.map((traning, idx) =>\n                    <Grid item key={idx} xs={12}>\n                        <TraningCard\n                            title={GetTraningProgramById(traning.traningProgramId).title}\n                            date={traning.startAt}\n                            duration={traning.duration} />\n                    </Grid>\n                )}\n            </Grid>\n            : <EmptyResult />}\n\n\n        <Modal\n            open={isOpen}\n            onClose={() => onChangeModal(null)}\n            title=\"Выбери программу тренировок\">\n            <Grid container spacing={2}>\n                {GetTraningPrograms().map((item, idx) => <Grid item xs={12} key={idx}>\n                    <TraningProgramCard\n                        onClick={onStart}\n                        key={idx}\n                        item={item}\n                        showCount={false}\n                        sx={{ minHeight: \"80px\" }} />\n                </Grid>\n                )}\n            </Grid>\n\n\n        </Modal>\n\n        <MainButton text=\"Начать тренировку!\" onClick={onChangeModal} />\n    </Box>\n}\n\nexport default TraningScene;","export const GetExercises = () => {\n    var items = localStorage.getItem(\"exercises\");\n    return JSON.parse(items);\n}\n\nexport const SetExercises = exercises => {\n    console.log(\"Update exercises in local storage...\")\n    localStorage.setItem(\"exercises\", JSON.stringify(exercises))\n}\n\nexport const GetExercisesByMuscle = muscle => {\n    const items = GetExercises();\n    return items.filter(exercise => exercise.muscle == muscle);\n}\n\nexport const AddExercises = exercise => {\n    const items = GetExercises();\n    items.push(exercise);\n    SetExercises(items);\n}\n\nexport const RemoveExercises = id => {\n    const items = GetExercises().filter(exercise => exercise.id != id);\n    SetExercises(items);\n}\n\nexport const UpdateExercise = exercise => {\n    const items = GetExercises().map(e => {\n        if(e.id == exercise.id) {\n            return exercise;\n        }\n\n        return e;\n    })\n    SetExercises(items);\n}\n\nexport const CountExercisesByMuscle = muscle => {\n    return GetExercisesByMuscle(muscle).length;\n}\n\nexport const GetExerciseById = id => {\n    const exercises = GetExercises();\n    return exercises.find(e => e.id == id); \n}","import { Box, FormControl, InputLabel, MenuItem, Select, TextField } from '@mui/material';\nimport React from 'react';\nimport { MuscleGroupsEnum } from '../Constants';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst ExerciseFrom = (props) => {\n    return <Box>\n        <TextField\n            onChange={(e) => { props.onChange(e, \"title\") }}\n            fullWidth\n            id=\"exercise-title\"\n            label=\"Название\"\n            variant=\"standard\"\n            value={props.exercise.title}\n            sx={{ pt: 1, pb: 1 }} />\n\n        <FormControl\n            variant='standard'\n            sx={{ m: 1, ml: 0, mr: 0, pt: 1, pb: 1 }}\n            fullWidth>\n            <InputLabel id=\"demo-multiple-name-label\">Мышечные группы</InputLabel>\n            <Select\n                onChange={(e) => { props.onChange(e, \"muscle\") }}\n                labelId=\"demo-multiple-name-label\"\n                id=\"demo-multiple-name\"\n                value={props.exercise.muscle}\n                MenuProps={MenuProps}>\n                {MuscleGroupsEnum.map((name) => (\n                    <MenuItem\n                        key={name}\n                        value={name}>\n                        {name}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    </Box>\n}\n\nexport default ExerciseFrom;","import { Box } from '@mui/system';\nimport React from 'react';\nimport MainButton from '../base/MainButton';\nimport ExerciseFrom from './ExerciseForm';\n\nconst CreateExercise = (props) => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\" }}>\n            <ExerciseFrom\n                exercise={props.exercise}\n                onChange={props.onChange} />\n\n            <MainButton text=\"Создать\" onClick={props.onSave} isBottom={true} />\n        </Box>\n    </div>\n};\n\nexport default CreateExercise;","import { Button } from '@mui/material';\nimport React from 'react';\n\nconst RemoveEntityButton = props => {\n    return <Button\n        onClick={props.onClick}\n        fullWidth\n        color=\"error\"\n        sx={{ mt: 1, pl: 0 }}\n        disableRipple>\n            {props.text}\n    </Button>\n}\n\nexport default RemoveEntityButton;","import { Box } from '@mui/system';\nimport React from 'react';\nimport MainButton from '../base/MainButton';\nimport RemoveEntityButton from '../base/RemoveEntityButton';\nimport ExerciseFrom from './ExerciseForm';\n\nconst ExerciseInfo = (props) => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\"}}>\n            <ExerciseFrom\n                exercise={props.exercise}\n                onChange={props.onChange} />\n\n            <RemoveEntityButton onClick={props.onRemove} text=\"Удалить упражнение\"/>\n\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\n        </Box>\n    </div>\n};\n\nexport default ExerciseInfo;","import { Accordion as MuiAccordion, AccordionDetails as MuiAccordionDetails, AccordionSummary as MuiAccordionSummary, Badge, Button } from \"@mui/material\";\nimport React, { useState } from \"react\";\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport { Box, styled } from \"@mui/system\";\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo } from \"../Constants\";\nimport { CountExercisesByMuscle, GetExercisesByMuscle } from \"../../api/ExercisesAPI\";\n\nconst Accordion = styled((props) => (\n    <MuiAccordion elevation={0} {...props} />\n))(({ theme }) => ({\n    '&:not(:last-child)': {\n        borderBottom: 0,\n    }\n}));\n\nconst AccordionSummary = styled((props) => (\n    <MuiAccordionSummary\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n        {...props}\n    />\n))(({ theme }) => ({\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.primary.light,\n    flexDirection: 'row-reverse',\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(90deg)',\n    },\n    '& .MuiAccordionSummary-content': {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n    padding: theme.spacing(2),\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\nconst ExerciseList = (props) => {\n    const [expanded, setExpanded] = useState(null)\n\n    const handleChangeExpanded = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const onClickToExercise = (e, exercise) => {\n        e.stopPropagation();\n        props.onClick(e, ModalTypeInfo, exercise);\n    }\n\n    const calcCount = (muscle) => {\n        return CountExercisesByMuscle(muscle);\n    }\n\n    return <div>\n        {MuscleGroupsEnum.map((muscle, idx) => <Accordion\n            key={idx}\n            expanded={expanded == muscle}\n            onChange={handleChangeExpanded(muscle)}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1bh-content\"\n                id=\"panel1bh-header\">\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", pr: 2 }}>\n                    {MuscleGroupsInfo[muscle].locale}\n                    <Badge showZero badgeContent={calcCount(muscle)} color=\"secondary\"></Badge>\n                </Box>\n            </AccordionSummary>\n            <AccordionDetails>\n                {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\n                    <Button\n                        color=\"secondary\"\n                        onClick={(e) => onClickToExercise(e, exercise)}\n                        fullWidth\n                        sx={{ justifyContent: \"flex-start\", textAlign: \"left\" }}\n                        disableRipple>\n                        {exercise.title}\n                    </Button>\n                </Box>)}\n            </AccordionDetails>\n        </Accordion>)\n        }\n    </div >\n}\n\nexport default ExerciseList;","import { Box } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { AddExercises, RemoveExercises, UpdateExercise } from \"../../api/ExercisesAPI\";\nimport MainButton from \"../base/MainButton\";\nimport Modal from \"../base/Modal\";\nimport { DefaultExercise, ModalTypeAdd, ModalTypeInfo } from \"../Constants\";\nimport CreateExercise from \"../exercise/CreateExercise\";\nimport ExerciseInfo from \"../exercise/ExerciseInfo\";\nimport ExerciseList from \"../exercise/ExerciseList\";\n\nconst defaultModalState = {\n    open: false,\n    type: null,\n    title: null\n};\n\nconst ExercisesScene = props => {\n    const [modalInfo, setModalInfo] = useState(defaultModalState);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const handleChangeExercise = (e, field) => {\n        var item = selectedItem;\n        item[field] = e.target.value;\n        setSelectedItem({ ...item });\n    }\n\n    const removeExercise = () => {\n        RemoveExercises(selectedItem.id)\n        closeModal();\n    }\n\n    const closeModal = () => {\n        setModalInfo(defaultModalState);\n        setSelectedItem(null)\n    }\n\n    const onChangeModal = (e, type, item) => {\n        if (modalInfo.open) {\n            closeModal();\n        } else {\n            setModalInfo({\n                open: true,\n                type: type,\n                title: type == ModalTypeAdd ? \"Создание упражнения\" : null\n            });\n            setSelectedItem({ ...item });\n        }\n    }\n\n    const saveExercise = (e) => {\n        UpdateExercise(selectedItem);\n        closeModal();\n    }\n\n    const addExeecise = (e) => {\n        AddExercises(selectedItem);\n        closeModal();\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\",\n    }}>\n        <ExerciseList onClick={onChangeModal} />\n        <Modal\n            open={modalInfo.open}\n            onClose={(e) => onChangeModal(e, null, null)}\n            title={modalInfo.title}>\n            {modalInfo.type == ModalTypeInfo && <ExerciseInfo\n                onChange={handleChangeExercise}\n                exercise={selectedItem}\n                onRemove={removeExercise}\n                onSave={saveExercise} />}\n            {modalInfo.type == ModalTypeAdd && <CreateExercise\n                onChange={handleChangeExercise}\n                exercise={selectedItem}\n                onSave={addExeecise} />}\n        </Modal>\n\n        <MainButton text=\"Создать упражнение\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultExercise())} />\n    </Box>\n}\n\nexport default ExercisesScene;","import { Accordion, AccordionDetails, AccordionSummary as MuiAccordionSummary, Box, Button, styled } from '@mui/material';\nimport React from 'react';\nimport { GetExercisesByMuscle } from '../../api/ExercisesAPI';\nimport MainButton from '../base/MainButton';\nimport { MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\nimport CheckIcon from '@mui/icons-material/Check';\n\nconst AccordionSummary = styled((props) => (\n    <MuiAccordionSummary\n        {...props}\n    />\n))(({ theme }) => ({\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.primary.light,\n    flexDirection: 'row-reverse',\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(90deg)',\n    },\n    '& .MuiAccordionSummary-content': {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst ExercisesSelector = (props) => {\n    return <div>\n        <Box sx={{ pb: 14 }}>\n            {MuscleGroupsEnum.map((muscle, idx) => <Accordion\n                key={idx}\n                expanded={true}>\n                <AccordionSummary\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\">\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", p: 1 }}>\n                        {MuscleGroupsInfo[muscle].locale}\n                    </Box>\n                </AccordionSummary>\n                <AccordionDetails>\n                    {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\n                        <Button\n                            endIcon={props.isSelected(exercise.id) ? <CheckIcon /> : <div></div>}\n                            color=\"secondary\"\n                            onClick={(e) => props.handleCheckItem(exercise.id)}\n                            fullWidth\n                            sx={{ justifyContent: \"space-between\", textAlign: \"left\" }}\n                            disableRipple>\n                            {exercise.title}\n                        </Button>\n                    </Box>)}\n                </AccordionDetails>\n            </Accordion>)}\n        </Box>\n\n        <MainButton text={`Применить`} onClick={props.onSave} isBottom={true} />\n    </div>\n}\n\nexport default ExercisesSelector;","import React from 'react';\nimport { Button } from \"@mui/material\";\n\nconst AddSetButton = (props) => {\n    return <Button\n        size='small'\n        variant='contained'\n        color=\"secondary\"\n        onClick={props.onClick}>\n        {props.text}\n    </Button>\n}\n\nexport default AddSetButton;","import { Checkbox, Divider, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from '@mui/material';\nimport { Box, useTheme } from '@mui/system';\nimport React from 'react';\nimport AddSetButton from '../base/AddSetButton';\nimport { MuscleGroupsInfo } from '../Constants';\n\nconst SetsTable = ({ item, sets, handleChangeInput, handleChangeCompleted, addSet, disableWeigth, disableCompleted, infoMode, inputMode }) => {\n    const theme = useTheme();\n    console.log(sets);\n\n    return <Paper sx={{ p: 1, mb: 2, mt: 1, backgroundColor: theme.palette.primary.light }}>\n        <Box sx={{ display: 'flex' }}>\n            <Box sx={{ display: 'flex', flexDirection: 'column', pl: 2, pr: 2 }}>\n                <Typography>{item.title}</Typography>\n                <Typography variant='caption'>{MuscleGroupsInfo[item.muscle].locale}</Typography>\n            </Box>\n        </Box>\n\n        <Divider />\n\n        <Box>\n            <TableContainer>\n                <Table sx={{ width: \"100%\", tableLayout: 'fixed' }} size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Подход</TableCell>\n                            <TableCell align='center'>Повторы</TableCell>\n                            {!disableWeigth && <TableCell align='center'>Вес</TableCell>}\n                            {!disableCompleted && <TableCell>Выполнен</TableCell>}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {sets.map((set, index) =>\n                            <TableRow key={index}>\n                                <TableCell>{index + 1}</TableCell>\n                                <TableCell align='center'>\n                                    {inputMode && <TextField\n                                        inputProps={{\n                                            sx: { textAlign: \"center\" }\n                                        }}\n                                        size='small'\n                                        name=\"repeats\"\n                                        type={\"number\"}\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\n                                        fullWidth\n                                        value={set.repeats} />}\n                                    {infoMode && set.repeats}\n                                </TableCell>\n                                {!disableWeigth && <TableCell align='center'>\n                                    {inputMode && <TextField\n                                        inputProps={{\n                                            sx: { textAlign: \"center\" }\n                                        }}\n                                        size='small'\n                                        name=\"weight\"\n                                        type={\"number\"}\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\n                                        fullWidth\n                                        value={set.weight} />}\n                                    {infoMode && set.weight}\n                                </TableCell>}\n                                {!disableCompleted && <TableCell align='right'>\n                                    <Checkbox\n                                        disabled={infoMode}\n                                        name=\"completed\"\n                                        color='secondary'\n                                        checked={set.completed}\n                                        onChange={(e) => handleChangeCompleted(e, item, index)} />\n                                </TableCell>}\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {inputMode && <Box sx={{ display: 'flex', justifyContent: 'flex-end', pt: 1 }}>\n                <AddSetButton text=\"Добавить подход\" onClick={e => addSet(item)} />\n            </Box>}\n        </Box>\n    </Paper>\n}\n\nexport default SetsTable;","import { Box, Button, Grid, TextField, Typography, useTheme } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { GetExerciseById } from '../../api/ExercisesAPI';\nimport Modal from '../base/Modal';\nimport { DefaultSet } from '../Constants';\nimport ExercisesSelector from '../exercise/ExercisesSelector';\nimport SetsTable from './SetsTable';\n\nconst GenerateExercise = id => {\n    return {\n        id: id,\n        sets: [\n            {\n                repeats: 10,\n                completed: false\n            },\n            {\n                repeats: 10,\n                completed: false\n            },\n            {\n                repeats: 10,\n                completed: false\n            },\n            {\n                repeats: 10,\n                completed: false\n            }\n        ]\n    }\n}\n\nconst TraningProgramForm = props => {\n    const [selected, setSelected] = useState([]);\n    const [isOpen, setOpen] = useState(false)\n    const theme = useTheme();\n\n    useEffect(() => {\n        setSelected([...props.item.exercises])\n    }, [])\n\n    const isSelected = id => {\n        return selected.find(e => e.id == id) || false\n    }\n\n    const handleCheckItem = id => {\n        if (!isSelected(id)) {\n            setSelected([...selected, GenerateExercise(id)])\n        } else {\n            setSelected(selected.filter(e => e.id != id))\n        }\n    }\n\n    const onClose = () => {\n        setSelected(props.item.exercises)\n        handleChangeOpen();\n    }\n\n    const handleChangeOpen = () => {\n        setOpen(!isOpen)\n    }\n\n    const onSaveExercises = () => {\n        props.setExercises(selected);\n        handleChangeOpen();\n    }\n\n    const handleChangeRepeats = (e, exercise, index) => {\n        let target = selected.find(e => e.id == exercise.id);\n        target.sets[index].repeats = parseInt(e.target.value)\n        setSelected(selected.map(e => {\n            if (e.id == target.id)\n                return target;\n\n            return e;\n        }))\n    }\n\n    const addSet = (exercise) => {\n        let target = selected.find(e => e.id == exercise.id);\n        target.sets.push(DefaultSet());\n        setSelected(selected.map(e => {\n            if (e.id == target.id)\n                return target;\n\n            return e;\n        }))\n    }\n\n    return <Box>\n        <TextField\n            onChange={(e) => { props.onChange(e, \"title\") }}\n            fullWidth\n            id=\"exercise-title\"\n            label=\"Название\"\n            variant=\"standard\"\n            value={props.item.title}\n            sx={{ pt: 1, pb: 1 }} />\n\n        {props.item.exercises.length == 0 && <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 2 }}>\n            <Typography variant='caption'>Упражнения не добавлены</Typography>\n        </Box>}\n\n\n        {props.item.exercises.length > 0 && <Grid container spacing={2}>\n            {props.item.exercises.map((exercise, idx) => {\n                const item = GetExerciseById(exercise.id);\n                return <Grid item xs={12} key={idx}>\n                    <SetsTable\n                        item={item}\n                        sets={exercise.sets}\n                        handleChangeInput={handleChangeRepeats}\n                        disableWeigth disableCompleted infoMode\n                        addSet={addSet}\n                    />\n                </Grid>\n            })}\n        </Grid>\n        }\n\n        <Modal\n            open={isOpen}\n            onClose={onClose}\n            title=\"Добавление упражнений\">\n            <ExercisesSelector\n                handleCheckItem={handleCheckItem}\n                selectedExercises={props.item.exercises}\n                isSelected={isSelected}\n                selected={selected}\n                onSave={onSaveExercises} />\n        </Modal>\n\n        <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={handleChangeOpen}>\n           Изменить упражнения\n        </Button>\n    </Box >\n}\n\nexport default TraningProgramForm;","import { Box } from '@mui/system';\nimport React from 'react';\nimport MainButton from '../base/MainButton';\nimport TraningProgramForm from './TraningProgramForm';\n\nconst CreateTraningProgram = props => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\n            <TraningProgramForm\n                item={props.item}\n                onChange={props.onChange}\n                setExercises={props.setExercises}\n                onSave={props.setExercises}/>\n\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\n        </Box>\n    </div>\n}\n \nexport default CreateTraningProgram;","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport MainButton from '../base/MainButton';\nimport TraningProgramForm from './TraningProgramForm';\n\nconst TraningProgramInfo = props => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\n            <TraningProgramForm\n                item={props.item}\n                onChange={props.onChange}\n                setExercises={props.setExercises}\n                onSave={props.setExercises}/>\n\n            <Button\n                onClick={props.onRemove}\n                fullWidth\n                color=\"error\"\n                sx={{  mt: 1, pl: 0 }}\n                disableRipple>\n                Удалить программу\n            </Button>\n\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true}/>\n        </Box>\n    </div>\n}\n \nexport default TraningProgramInfo;","import { Grid } from '@mui/material';\nimport React from 'react';\nimport { GetTraningPrograms } from '../../api/TraningProgramAPI';\nimport TraningProgramCard from \"../program/TraningProgramCard\";\n\nconst TraningProgramList = (props) => {\n    return <Grid container spacing={2}>\n        {GetTraningPrograms().map((program, idx) => <Grid key={idx} item xs={12}>\n            <TraningProgramCard item={program} onClick={props.onClick}/>\n        </Grid>)}\n    </Grid>\n}\n \nexport default TraningProgramList;","import { Box } from '@mui/material';\nimport React, { useState } from 'react';\nimport { AddTraningProgram, RemoveTraningProgram, UpdateTraningProgram } from '../../api/TraningProgramAPI';\nimport MainButton from '../base/MainButton';\nimport Modal from '../base/Modal';\nimport { DefaultModalState, DefaultTraningProgram, ModalTypeAdd, ModalTypeInfo } from '../Constants';\nimport CreateTraningProgram from '../program/CreateTraningProgram';\nimport TraningProgramInfo from '../program/TraningProgramInfo';\nimport TraningProgramList from '../program/TraningProgramList';\n \nexport const TraningProgramScene = (props) => {\n    const [modalInfo, setModalInfo] = useState(DefaultModalState);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const handleChangeItem = (e, field) => {\n        var item = selectedItem;\n        item[field] = e.target.value;\n        setSelectedItem({ ...item });\n    }\n\n    const removeItem = () => {\n        RemoveTraningProgram(selectedItem.id)\n        closeModal();\n    }\n\n    const closeModal = () => {\n        setModalInfo(DefaultModalState);\n        setSelectedItem(null)\n    }\n\n    const onChangeModal = (e, type, item) => {\n        if (modalInfo.open) {\n            closeModal();\n        } else {\n            setModalInfo({\n                open: true,\n                type: type,\n                title: type == ModalTypeAdd ? \"Создание программы\" : null\n            });\n            setSelectedItem({ ...item });\n        }\n    }\n\n    const saveItem = (e) => {\n        UpdateTraningProgram(selectedItem);\n        closeModal();\n    }\n\n    const addItem = (e) => {\n        AddTraningProgram(selectedItem);\n        closeModal();\n    }\n\n    const setExercises = (exercises) => {\n        console.log(\"Exercises\", exercises);\n        setSelectedItem({...selectedItem, exercises: exercises})\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\",\n    }}>\n        <TraningProgramList onClick={onChangeModal}/>\n        <Modal\n            open={modalInfo.open}\n            onClose={(e) => onChangeModal(e, null, null)}\n            title={modalInfo.title}>\n            {modalInfo.type == ModalTypeInfo && <TraningProgramInfo\n                onChange={handleChangeItem}\n                item={selectedItem}\n                onRemove={removeItem}\n                onSave={saveItem}\n                setExercises={setExercises} />}\n            {modalInfo.type == ModalTypeAdd && <CreateTraningProgram\n                onChange={handleChangeItem}\n                item={selectedItem}\n                onSave={addItem}\n                setExercises={setExercises} />}\n        </Modal>\n\n\n        <MainButton text=\"Создать программу\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultTraningProgram())}/>\n    </Box>\n}\n \nexport default TraningProgramScene;","import React from \"react\";\nimport { BottomNavigation, BottomNavigationAction, Paper } from \"@mui/material\";\n\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\nimport FitbitIcon from '@mui/icons-material/Fitbit';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\nimport QueryStatsIcon from '@mui/icons-material/QueryStats';\n\nconst Navigation = props => {\n    return <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\n        <BottomNavigation value={props.activeScene} onChange={props.handleChange} showLabels>\n            <BottomNavigationAction value=\"traning-programs\" label=\"Программы\" icon={<ListAltIcon />} />\n            <BottomNavigationAction value=\"traning\" label=\"Тренировки\" icon={<FitnessCenterIcon />} />\n            <BottomNavigationAction value=\"progress\" label=\"Прогресс\" icon={<QueryStatsIcon />} />\n            <BottomNavigationAction value=\"exercises\" label=\"Упражнения\" icon={<FitbitIcon />} />\n        </BottomNavigation>\n    </Paper>\n}\n\nexport default Navigation;","import { Box, createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport Navigation from './Navigation'\n\nconst darkTheme = createTheme({\n    palette: {\n        primary: {\n            main: \"#EAE1DF\",\n            light: \"#f7f3f3\",\n            dark: \"#be9d9d\",\n            contrastText: \"#322E18\"\n        },\n        secondary: {\n            main: \"#545E56\",\n            light: \"#EAECEA\",\n            dark: \"#A9B1A9\"\n        },\n        background: {\n            default: \"#f7f3f3\"\n        }\n    },\n    shape: {\n        borderRadius: '8px'\n    },\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n    }\n});\n\nconst Layout = ({ children }) => {\n    const [scene, setScene] = useState(\"traning\")\n    const location = useLocation();\n    const navigate = useNavigate();\n    useEffect(() => {\n        const path = location.pathname.substring(1);\n        if (path.length == 0 || path.includes('workout-process')) {\n            setScene(\"traning\")\n        } else {\n            setScene(path)\n        }\n    }, [location])\n\n    const handleChange = (event, newValue) => {\n        navigate(`/${newValue}`)\n    };\n\n    return <Box sx={{ display: 'flex', height: '100%', justifyContent: 'center', pb: 7, pt: 0 }}>\n        <CssBaseline />\n        <ThemeProvider theme={darkTheme}>\n            <Box component={\"main\"} sx={{ p: 1, width: '100%', height: '100%', overflowY: \"scroll\", pb: 10 }}>\n                <Outlet />\n                <Navigation activeScene={scene} handleChange={handleChange} />\n            </Box>\n        </ThemeProvider>\n    </Box>\n}\n\nexport default Layout;","import { Box, Button, Grid, Paper, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { GetExerciseById } from '../../api/ExercisesAPI';\nimport MainButton from '../base/MainButton';\nimport Modal from '../base/Modal';\nimport { DefaultSet, GenerateProgramExercise } from '../Constants';\nimport ExercisesSelector from '../exercise/ExercisesSelector';\nimport SetsTable from '../program/SetsTable';\nimport { CompleteWorkout, GetWorkoutById, IsActive, IsCompleted, IsNew, SaveWorkout, StartWorkout } from '../service/WorkoutService';\n\nconst WorkoutProcessScene = (props) => {\n    const { workoutId } = useParams();\n\n    const [selected, setSelected] = useState([]);\n    const [isOpen, setOpen] = useState(false)\n    const [workout, updateWorkout] = useState({ exercises: [] });\n    useEffect(() => {\n        let result = GetWorkoutById(workoutId)\n        updateWorkout(result)\n        setSelected(result.exercises);\n    }, [workoutId])\n\n    useEffect(() => {\n        setSelected(workout.exercises)\n    }, [workout])\n\n\n    const handleChangeOpen = () => {\n        setOpen(!isOpen)\n    }\n\n    const onClose = () => {\n        setSelected(workout.exercises)\n        handleChangeOpen();\n    }\n\n    const handleChangeInput = (e, exercise, index) => {\n        let target = getTargetExerciseById(exercise.id)\n        let newValue = e.target.value == \"\" ? \"\" : parseInt(e.target.value);\n        target.sets[index][e.target.name] = newValue\n        updateWorkoutFilling(target)\n    }\n\n    const handleChangeCompleted = (e, exercise, index) => {\n        let target = getTargetExerciseById(exercise.id)\n        target.sets[index].completed = !target.sets[index].completed;\n        updateWorkoutFilling(target)\n    }\n\n    const getTargetExerciseById = id => {\n        return workout.exercises.find(e => e.id == id);\n    }\n\n    const updateWorkoutFilling = (target) => {\n        updateWorkout({\n            ...workout,\n            exercises: workout.exercises.map(e => {\n                return e.id == target.id ? target : e;\n            })\n        })\n        SaveWorkout(workout)\n    }\n\n    const addSet = (exercise) => {\n        let target = getTargetExerciseById(exercise.id);\n        target.sets.push(DefaultSet());\n        updateWorkoutFilling(target)\n    }\n\n    const startWorkout = () => {\n        updateWorkoutFilling(StartWorkout(workout))\n    }\n\n    const completeWorkout = () => {\n        updateWorkoutFilling(CompleteWorkout(workout));\n    }\n\n    const handleCheckItem = id => {\n        if (!isSelected(id)) {\n            setSelected([...selected, GenerateProgramExercise(id)])\n        } else {\n            setSelected(selected.filter(e => e.id != id))\n        }\n    }\n\n    const onSaveExercises = () => {\n        workout.exercises = selected;\n        updateWorkoutFilling(workout);\n        handleChangeOpen();\n    }\n\n    const isSelected = id => {\n        return selected.find(e => e.id == id) || false\n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\"\n    }}>\n        <Grid container spacing={2}>\n            {IsCompleted(workout) && <Grid item xs={12}>\n                <Paper sx={{\n                    p: 2\n                }}>\n                    <Typography variant='h6'>{`Тоннаж: ${workout.volume} кг`}</Typography>\n                    <Typography variant='h6'>{`Выполнено на ${workout.progress}%`}</Typography>\n                </Paper>\n                </Grid>}\n            {workout.exercises.map((exercise, idx) => {\n                const item = GetExerciseById(exercise.id);\n                return <Grid item xs={12} key={idx}>\n                    <SetsTable\n                        infoMode={IsCompleted(workout) || IsNew(workout)}\n                        inputMode={IsActive(workout)}\n                        item={item}\n                        sets={exercise.sets}\n                        handleChangeCompleted={handleChangeCompleted}\n                        handleChangeInput={handleChangeInput}\n                        addSet={addSet} />\n                </Grid>\n            })}\n        </Grid>\n\n        <Modal\n            open={isOpen}\n            onClose={onClose}\n            title=\"Изменить упражнения\">\n            <ExercisesSelector\n                handleCheckItem={handleCheckItem}\n                selectedExercises={workout.exercises}\n                isSelected={isSelected}\n                selected={selected}\n                onSave={onSaveExercises} />\n        </Modal>\n\n       {(IsNew(workout) || IsActive(workout)) && <Button onClick={handleChangeOpen}>Изменить упражнения</Button>}\n\n        {IsNew(workout) && <MainButton\n            text={\"Go!\"}\n            onClick={startWorkout}\n            sx={{\n                backgroundColor: \"#FBAB7E\",\n                backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\n                color: 'black'\n            }} />}\n        {IsActive(workout) && <MainButton\n            text={\"Завершить\"}\n            onClick={completeWorkout}\n            sx={{\n                backgroundColor: \"#FBAB7E\",\n                backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\n                color: 'black'\n            }} />}\n    </Box>\n}\n\nexport default WorkoutProcessScene;","import { Box, Typography } from '@mui/material';\nimport { useTheme } from '@mui/system';\nimport React from 'react';\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\n\nconst CustomTooltip = ({ payload }) => {\n    return <Box sx={{ p: 1, display: 'flex', flexDirection: 'column' }}>\n        {payload.length && <Typography variant='caption'>{payload[0].payload.date}</Typography>}\n        {payload.length && <Typography variant='caption'>{payload[0].value}</Typography>}\n    </Box>\n}\n\nconst Chart = ({ data, dataKey }) => {\n    const theme = useTheme();\n\n    return <ResponsiveContainer height={160} width=\"100%\">\n        <AreaChart\n            data={data}>\n            <Tooltip\n                position={{ y: 0 }}\n                content={<CustomTooltip />}\n                wrapperStyle={{backgroundColor: theme.palette.secondary.light, outlineColor: theme.palette.secondary.dark }} />\n            <Area\n                type=\"monotone\"\n                dataKey={dataKey}\n                stroke={theme.palette.secondary.dark}\n                fill={theme.palette.secondary.light}\n                strokeWidth={2}\n            />\n        </AreaChart>\n    </ResponsiveContainer>\n}\n\nexport default Chart;","import React from 'react';\nimport { Paper, Typography, useTheme } from \"@mui/material\";\nimport Chart from \"./Chart\";\nimport { Box } from '@mui/system';\n\nconst ChartCard = ({ title, maxValue, data, dataKey }) => {\n    const theme = useTheme();\n    return <Paper sx={{ p: 2, height: 220 }}>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n            <Typography variant=\"h6\">{title}</Typography>\n            <Typography variant='h6' color={theme.palette.secondary.dark}>Макс. {maxValue}</Typography>\n        </Box>\n        <Chart data={data} dataKey={dataKey} />\n    </Paper>\n}\n\nexport default ChartCard;","import { FormatDate, GetDateRangeByPeriod } from \"../../utils/DateUtils\";\nimport { GetWorkoutsByDateRange } from \"./WorkoutService\";\n\nexport const GetStatisticByPeriod = period => {\n    let dateRange = GetDateRangeByPeriod(period);\n    const workouts = GetWorkoutsByDateRange(dateRange);\n    const max = Math.max(...workouts.map(workout => workout.volume))\n    return {\n        workoutCount: workouts.length,\n        fullCompleteCount: workouts.filter(workout => workout.progress == 100).length,\n        tonnageData: {\n            max: max,\n            data: workouts.map(workout => {\n                return {\n                    date: FormatDate(new Date(workout.endAt)),\n                    volume: workout.volume\n                }\n            })\n        }\n    }\n}","import { Fade, Grid, Paper, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useEffect, useState } from 'react';\nimport ChartCard from '../base/ChartCard';\nimport { GetStatisticByPeriod } from '../service/ProgressService';\n\nconst ProgressScene = () => {\n    const [period, updatePeriod] = useState(\"week\")\n    const [fade, updateFade] = useState(true)\n    const [statistic, updateStatistic] = useState({\n        workoutCount: 0,\n        fullCompleteCount: 0,\n        tonnageData: {\n            max: 0,\n            data: []\n        }\n    })\n\n    useEffect(() => {\n        updateStatistic(GetStatisticByPeriod(period))\n    }, [period])\n\n    const handleChangePeriod = e => {\n        \n        updateFade(false);\n        setTimeout(() => {\n            updatePeriod(e.target.value)\n            updateFade(true);\n        }, 150)\n        \n    }\n\n    return <Box sx={{\n        height: \"100%\", overflow: \"scroll\",\n    }}>\n        <Typography variant='h6'>Тренировочный прогресс</Typography>\n        TEST\n        <Box sx={{ display: 'flex', justifyContent: \"center\", pt: 2, pb: 2 }}>\n            <ToggleButtonGroup\n                value={period}\n                size='small'\n                fullWidth\n                onChange={handleChangePeriod}\n                exclusive>\n                <ToggleButton value=\"year\" sx={{ p: \"8px\" }}>\n                    Год\n                </ToggleButton>\n                <ToggleButton value=\"week\">\n                    Неделя\n                </ToggleButton>\n                <ToggleButton value=\"month\">\n                    Месяц\n                </ToggleButton>\n            </ToggleButtonGroup>\n        </Box>\n        <Grid container spacing={2}>\n            <Grid item xs={6}>\n                <Paper sx={{ p: 2, height: 220 }}>\n                    <Box sx={{ display: 'flex', justifyContent: \"center\"}}>\n                        <Typography>Тренировок</Typography>\n                    </Box>\n                    <Box sx={{ display: 'flex', justifyContent: \"center\", alignItems: 'center', height: \"100%\" }}>\n                        <Fade in={fade} timeout={150}>\n                            <Typography variant='h2'>{statistic.workoutCount}</Typography>\n                        </Fade>\n                    </Box>\n                </Paper>\n            </Grid>\n            <Grid item xs={6}>\n                <Paper sx={{ p: 2, height: 220 }}>\n                    <Box sx={{ display: 'flex', justifyContent: \"center\"}}>\n                        <Typography>Завершено</Typography>\n                    </Box>\n                    <Box sx={{ display: 'flex', justifyContent: \"center\", alignItems: 'center', height: \"100%\" }}>\n                        <Fade in={fade}>\n                            <Typography variant='h2'>{statistic.fullCompleteCount}</Typography>\n                        </Fade>\n\n                    </Box>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ChartCard title={\"Тоннаж\"} maxValue={statistic.tonnageData.max} dataKey=\"volume\" data={statistic.tonnageData.data} />\n            </Grid>\n        </Grid>\n    </Box>\n}\n\nexport default ProgressScene;","import React from \"react\";\nimport './App.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nimport { DefaultExercises, DefaultTraningPrograms } from \"./components/Constants\";\nimport { createHashRouter, createRoutesFromElements, Route, RouterProvider } from \"react-router-dom\";\n\nimport TraningScene from \"./components/scenes/TraningScene\";\nimport ExercisesScene from \"./components/scenes/ExercisesScene\";\nimport TraningProgramScene from \"./components/scenes/TraningProgramScene\";\nimport Layout from \"./components/base/Layout\";\nimport WorkoutProcessScene from \"./components/scenes/TraningProcessScene\";\nimport ProgressScene from \"./components/scenes/ProgressScene\";\n\nconst initExercises = () => {\n  if (localStorage.getItem(\"exercises\") == null)\n    localStorage.setItem(\"exercises\", JSON.stringify(DefaultExercises))\n  if (localStorage.getItem(\"traning_programs\") == null)\n    localStorage.setItem(\"traning_programs\", JSON.stringify(DefaultTraningPrograms))\n}\n\nconst router = createHashRouter(\n  createRoutesFromElements(\n    <Route path=\"/\" element={<Layout />}>\n      <Route index element={<TraningScene />} />\n      <Route path=\"exercises\" element={<ExercisesScene />} />\n      <Route path=\"traning-programs\" element={<TraningProgramScene />} />\n      <Route path=\"traning\" element={<TraningScene />} />\n      <Route path=\"workout-process/:workoutId\" element={<WorkoutProcessScene />} />\n      <Route path=\"progress\" element={<ProgressScene/>} />\n    </Route>\n  )\n);\n\nconst App = () => {\n  initExercises();\n  return (<RouterProvider router={router} />);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction forceSWupdate () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.getRegistrations().then(function (registrations) {\n      for (let registration of registrations) {\n        registration.update()\n      }\n    })\n  }\n}\n\nforceSWupdate()\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}