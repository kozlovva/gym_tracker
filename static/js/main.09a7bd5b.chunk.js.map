{"version":3,"sources":["components/Constants.js","api/TraningProgramAPI.js","components/base/MainButton.js","components/base/Modal.js","api/ExercisesAPI.js","components/service/TraningProgramService.js","components/program/TraningProgramCard.js","api/WorkoutAPI.js","utils/DateUtils.js","components/service/WorkoutService.js","components/base/TextWithIcon.js","components/traning/TraningCard.js","components/scenes/TraningScene.js","components/exercise/ExerciseForm.js","components/exercise/CreateExercise.js","components/base/RemoveEntityButton.js","components/exercise/ExerciseInfo.js","components/exercise/ExerciseList.js","components/scenes/ExercisesScene.js","components/exercise/ExercisesSelector.js","components/base/AddSetButton.js","components/program/SetsTable.js","components/program/TraningProgramForm.js","components/program/CreateTraningProgram.js","components/program/TraningProgramInfo.js","components/program/TraningProgramList.js","components/scenes/TraningProgramScene.js","components/base/Navigation.js","components/base/Layout.js","components/scenes/TraningProcessScene.js","components/base/Chart.js","components/base/ChartCard.js","components/base/CountChart.js","components/service/ProgressService.js","components/scenes/ProgressScene.js","components/scenes/DebugScene.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["MuscleGroupsInfo","BICEPS","locale","TRICEPS","QUADS","GLUTES","ABS","CHEST","SHOULDERS","HAMSTRINGS","FOREARMS","NECK","LATS","LOWER_BACK","MIDDLE_BACK","TRAPS","MuscleGroupsEnum","DefaultExercises","id","title","muscle","DefaultModalState","open","type","DefaultTraningPrograms","description","exercises","sets","repeats","weight","complited","GenerateProgramExercise","i","push","completed","GetTraningPrograms","items","localStorage","getItem","JSON","parse","SetTraningPrograms","traningPrograms","console","log","setItem","stringify","MainButton","_ref","_ref2","isBottom","onClick","text","sx","React","createElement","Box","position","width","bottom","left","right","pl","pr","_defineProperty","elevation","Button","variant","fullWidth","color","_objectSpread","p","Transition","forwardRef","props","ref","Slide","Object","assign","direction","Modal","Dialog","TransitionComponent","PaperProps","height","m","borderBottomRightRadius","borderBottomLeftRadius","DialogTitle","pb","IconButton","aria-label","onClose","top","theme","palette","grey","CloseIcon","DialogContent","children","GetExercises","SetExercises","GetExercisesByMuscle","filter","exercise","GetExerciseById","find","e","GetTraningProgramById","TraningProgramCard","useTheme","muscleGroups","program","res","_toConsumableArray","Set","map","item","GetUniqueMuscleGroups","join","Paper","display","minHeight","flexDirection","backgroundColor","secondary","light","flexGrow","withCount","Typography","length","alignItems","GetWorkouts","SetWorkouts","PadTo2Digits","num","toString","padStart","FormatDate","date","getFullYear","getUTCMonth","getUTCDate","CreateWorkout","selectedProgram","traning","uuidv4","notes","traningProgramId","duration","startAt","endAt","status","rejectCause","volume","progress","Date","set","GetWorkoutById","ById","SaveWorkout","workout","CompleteWorkout","from","to","concat","Math","floor","getTime","reduce","result","CalcExerciseVolume","CalcProgressInPercent","IsNew","IsActive","IsCompleted","workoutExercise","sum","countOfSets","GetWorkoutSetsCount","completedSets","CalcCompletedSets","toFixed","TextWithIcon","justifyContent","icon","gutterBottom","mr","mb","lineHeight","CustomCard","Card","backgroundImage","CardActionArea","CardHeader","CardActions","flex","CalendarMonthIcon","AccessTimeIcon","TraningCard","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","EmptyResult","TraningScene","_useState","useState","_useState2","_slicedToArray","todayTranings","setTodayTranings","_useState3","_useState4","traningHistory","setTraningHistory","_useState5","_useState6","isOpen","setIsOpen","navigate","useNavigate","useEffect","now","GetTodayWorkouts","GetWorkoutHistory","onStart","_asyncToGenerator","_callee","modaType","traningProgram","_context","navigateToWorkout","_x","_x2","_x3","apply","arguments","handleChangeOpen","onChangeModal","Grid","container","spacing","idx","xs","Divider","mt","showCount","MenuProps","style","maxHeight","ITEM_HEIGHT","ExerciseFrom","TextField","onChange","label","pt","FormControl","ml","InputLabel","Select","labelId","MenuItem","CreateExercise","flexWrap","onSave","RemoveEntityButton","disableRipple","ExerciseInfo","onRemove","Accordion","styled","MuiAccordion","&:not(:last-child)","borderBottom","AccordionSummary","MuiAccordionSummary","expandIcon","ArrowForwardIosSharpIcon","fontSize","padding","primary","& .MuiAccordionSummary-expandIconWrapper.Mui-expanded","transform","& .MuiAccordionSummary-content","marginLeft","AccordionDetails","MuiAccordionDetails","_ref3","borderTop","ExerciseList","expanded","setExpanded","calcCount","CountExercisesByMuscle","panel","event","newExpanded","ExpandMoreIcon","aria-controls","Badge","showZero","badgeContent","zIndex","index","stopPropagation","onClickToExercise","textAlign","defaultModalState","ExercisesScene","modalInfo","setModalInfo","selectedItem","setSelectedItem","handleChangeExercise","field","target","closeModal","RemoveExercises","UpdateExercise","AddExercises","ExercisesSelector","endIcon","isSelected","CheckIcon","handleCheckItem","AddSetButton","size","SetsTable","handleChangeInput","handleChangeCompleted","addSet","disableWeigth","disableCompleted","infoMode","inputMode","TableContainer","Table","tableLayout","TableHead","TableRow","TableCell","align","TableBody","inputProps","Checkbox","disabled","checked","GenerateExercise","TraningProgramForm","selected","setSelected","setOpen","handleChangeRepeats","parseInt","selectedExercises","setExercises","CreateTraningProgram","TraningProgramInfo","TraningProgramList","TraningProgramScene","handleChangeItem","RemoveTraningProgram","UpdateTraningProgram","AddTraningProgram","Navigation","BottomNavigation","activeScene","handleChange","showLabels","BottomNavigationAction","ListAltIcon","FitnessCenterIcon","QueryStatsIcon","FitbitIcon","darkTheme","createTheme","main","dark","contrastText","background","default","shape","borderRadius","typography","fontFamily","Layout","scene","setScene","location","useLocation","path","pathname","substring","includes","CssBaseline","ThemeProvider","component","overflowY","Outlet","newValue","WorkoutProcessScene","workoutId","useParams","updateWorkout","getTargetExerciseById","updateWorkoutFilling","StartWorkout","CustomTooltip","payload","Chart","data","dataKey","ResponsiveContainer","AreaChart","Tooltip","y","content","wrapperStyle","outlineColor","Area","stroke","fill","strokeWidth","ChartCard","maxValue","gap","CountChart","count","fade","Fade","in","timeout","GetStatisticByPeriod","period","range","dateRange","setDate","getDate","GetDateRangeByPeriod","workouts","maxVolume","max","maxDuration","workoutCount","fullCompleteCount","tonnageData","durationData","ProgressScene","updatePeriod","updateFade","statistic","updateStatistic","ToggleButtonGroup","setTimeout","exclusive","ToggleButton","DebugScene","window","reload","router","createHashRouter","createRoutesFromElements","Route","element","App","RouterProvider","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.09a7bd5b.chunk.js","sourcesContent":["import {v4 as uuidv4} from 'uuid';\r\n\r\nexport const MuscleGroupsInfo = {\r\n    \"BICEPS\": {\r\n        \"locale\": \"Бицепс\"\r\n    },\r\n    \"TRICEPS\": {\r\n        \"locale\": \"Трицепс\"\r\n    },\r\n    \"QUADS\": {\r\n        \"locale\": \"Передняя поверхность бедра\"\r\n    },\r\n    \"GLUTES\": {\r\n        \"locale\": \"Ягодицы\"\r\n    },\r\n    \"ABS\": {\r\n        \"locale\": \"Пресс\"\r\n    },\r\n    \"CHEST\": {\r\n        \"locale\": \"Грудь\"\r\n    },\r\n    \"SHOULDERS\": {\r\n        \"locale\": \"Плечи\"\r\n    },\r\n    \"HAMSTRINGS\": {\r\n        \"locale\": \"Задняя поверхность бедра\"\r\n    },\r\n    \"FOREARMS\": {\r\n        \"locale\": \"Предплечья\"\r\n    },\r\n    \"NECK\": {\r\n        \"locale\": \"Шея\"\r\n    },\r\n    \"LATS\": {\r\n        \"locale\": \"Широчайшие\"\r\n    },\r\n    \"LOWER_BACK\": {\r\n        \"locale\": \"Разгибатели спины/Поясница\"\r\n    },\r\n    \"MIDDLE_BACK\": {\r\n        \"locale\": \"Середина спины\"\r\n    },\r\n    \"TRAPS\": {\r\n        \"locale\": \"Трапеции\"\r\n    }\r\n};\r\n\r\nexport const MuscleGroupsEnum = [\r\n    \"BICEPS\", \r\n    \"TRICEPS\", \r\n    \"QUADS\", \r\n    \"GLUTES\", \r\n    \"ABS\", \r\n    \"CHEST\", \r\n    \"SHOULDERS\", \r\n    \"HAMSTRINGS\", \r\n    \"FOREARMS\", \r\n    \"NECK\", \r\n    \"LATS\", \r\n    \"LOWER_BACK\", \r\n    \"MIDDLE_BACK\", \r\n    \"TRAPS\"\r\n];\r\n\r\nexport const DefaultExercises = [\r\n    {\r\n        \"id\": \"1\",\r\n        \"title\": \"Подъем штанги на бицепс\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"18\",\r\n        \"title\": \"Подтягивания обратным хватом\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"19\",\r\n        \"title\": \"Подъем гантелей в скамье Скотта\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"15\",\r\n        \"title\": \"Молотки с гантелями\",\r\n        \"muscle\": \"BICEPS\"\r\n    }, \r\n    {\r\n        \"id\": \"2\",\r\n        \"title\": \"Французский жим со штангой\",\r\n        \"muscle\": \"TRICEPS\"\r\n    }, \r\n    {\r\n        \"id\": \"20\",\r\n        \"title\": \"Французский со штангой\",\r\n        \"muscle\": \"TRICEPS\"\r\n    }, \r\n    {\r\n        \"id\": \"21\",\r\n        \"title\": \"Жим лежа узким хватом\",\r\n        \"muscle\": \"TRICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"22\",\r\n        \"title\": \"Разгибания на трицепс в верхнем блоке\",\r\n        \"muscle\": \"TRICEPS\"\r\n    }, \r\n    {\r\n        \"id\": \"3\",\r\n        \"title\": \"Приседания со штангой\",\r\n        \"muscle\": \"QUADS\"\r\n    }, \r\n    {\r\n        \"id\": \"23\",\r\n        \"title\": \"Жим ногами\",\r\n        \"muscle\": \"QUADS\"\r\n    }, \r\n    {\r\n        \"id\": \"24\",\r\n        \"title\": \"Разгибания в блоке на квадрицепс\",\r\n        \"muscle\": \"QUADS\"\r\n    },\r\n    {\r\n        \"id\": \"25\",\r\n        \"title\": \"Выпады с гантелей\",\r\n        \"muscle\": \"QUADS\"\r\n    },  \r\n    {\r\n        \"id\": \"4\",\r\n        \"title\": \"Отведения ноги в блоке\",\r\n        \"muscle\": \"GLUTES\"\r\n    }, \r\n    {\r\n        \"id\": \"26\",\r\n        \"title\": \"Ягодичный мост\",\r\n        \"muscle\": \"GLUTES\"\r\n    }, \r\n    {\r\n        \"id\": \"27\",\r\n        \"title\": \"Глубокие приседания с широкой постановкой ног\",\r\n        \"muscle\": \"GLUTES\"\r\n    }, \r\n    {\r\n        \"id\": \"28\",\r\n        \"title\": \"Отведение ног в стороны в тренажере\",\r\n        \"muscle\": \"GLUTES\"\r\n    }, \r\n    {\r\n        \"id\": \"5\",\r\n        \"title\": \"Скручивания в римском стуле\",\r\n        \"muscle\": \"ABS\"\r\n    }, \r\n    {\r\n        \"id\": \"29\",\r\n        \"title\": \"Скручивания в висе на перекладине\",\r\n        \"muscle\": \"ABS\"\r\n    }, \r\n    {\r\n        \"id\": \"6\",\r\n        \"title\": \"Жим со штангой лежа\",\r\n        \"muscle\": \"CHEST\"\r\n    }, \r\n    {\r\n        \"id\": \"30\",\r\n        \"title\": \"Жим со штангой лежа на наклонной скамье\",\r\n        \"muscle\": \"CHEST\"\r\n    }, \r\n    {\r\n        \"id\": \"31\",\r\n        \"title\": \"Бабочка\",\r\n        \"muscle\": \"CHEST\"\r\n    }, \r\n    {\r\n        \"id\": \"7\",\r\n        \"title\": \"Махи с шагтелями в стороны\",\r\n        \"muscle\": \"SHOULDERS\"\r\n    },\r\n    {\r\n        \"id\": \"16\",\r\n        \"title\": \"Армейский жим\",\r\n        \"muscle\":\"SHOULDERS\"\r\n    },\r\n    {\r\n        \"id\": \"17\",\r\n        \"title\": \"Жим гантелей сидя\",\r\n        \"muscle\": \"SHOULDERS\"\r\n    }, \r\n    {\r\n        \"id\": \"8\",\r\n        \"title\": \"Румынская тяга\",\r\n        \"muscle\": \"HAMSTRINGS\"\r\n    }, \r\n    {\r\n        \"id\": \"9\",\r\n        \"title\": \"Обезьяний хват\",\r\n        \"muscle\": \"FOREARMS\"\r\n    }, \r\n    {\r\n        \"id\": \"10\",\r\n        \"title\": \"Скричивания шеи с блином\",\r\n        \"muscle\": \"NECK\"\r\n    }, \r\n    {\r\n        \"id\": \"11\",\r\n        \"title\": \"Подтягивания\",\r\n        \"muscle\": \"LATS\"\r\n    }, \r\n    {\r\n        \"id\": \"12\",\r\n        \"title\": \"Экстензия\",\r\n        \"muscle\": \"LOWER_BACK\"\r\n    }, \r\n    {\r\n        \"id\": \"13\",\r\n        \"title\": \"Тяга нижнего блока\",\r\n        \"muscle\": \"MIDDLE_BACK\"\r\n    }, \r\n    {\r\n        \"id\": \"14\",\r\n        \"title\": \"Шраги с гантелями\",\r\n        \"muscle\": \"TRAPS\"\r\n    }\r\n]\r\n\r\nexport const ModalTypeInfo = \"INFO\";\r\nexport const ModalTypeAdd = \"ADD\";\r\n\r\nexport const DefaultExercise = () => {\r\n    return {\r\n        \"id\": uuidv4(),\r\n        title: \"\",\r\n        muscle: \"BICEPS\"\r\n    }\r\n}\r\n\r\nexport const DefaultModalState = {\r\n    open: false,\r\n    type: null,\r\n    title: null\r\n};\r\n\r\nexport const DefaultTraningProgram = () => {\r\n    return {\r\n        \"id\": uuidv4(),\r\n        \"title\": \"\",\r\n        \"description\": \"\",\r\n        \"exercises\": []\r\n    }\r\n}\r\n\r\nexport const DefaultTraningPrograms = [\r\n    {\r\n        \"id\": \"1\",\r\n        \"title\": \"Грудь-бицепс\",\r\n        \"description\": \"\",\r\n        \"exercises\": [\r\n            {\r\n                \"id\": \"1\",\r\n                \"sets\": [\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    },\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    },\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    },\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \r\n]\r\n\r\nexport const DefaultTraning = () =>  {\r\n    return {\r\n        \"id\": uuidv4(),\r\n        \"notes\": \"\",\r\n        \"traningProgramId\": \"\",\r\n        \"duration\": \"\",\r\n        \"startAt\": \"\",\r\n        \"endAt\": \"\",\r\n        \"exercises\": [],\r\n        \"status\": \"ACTIVE\",\r\n        \"rejectCause\": \"\",\r\n        \"volume\": 0,\r\n        \"progress\": 0\r\n    }\r\n}\r\n\r\nexport const Statuses = [\r\n    \"NEW\", \"ACTIVE\", \"COMPLETED\", \"REJECTED\"\r\n]\r\n\r\nexport const DefaultSet =() => {\r\n    return {\r\n        repeats: 10,\r\n        weight: 0,\r\n        completed: false\r\n    } \r\n}\r\n\r\nexport const GenerateProgramExercise = id => {\r\n    let setCount = 4;\r\n    let sets = [];\r\n    for (let i = 0; i<setCount; i++) {\r\n        sets.push(DefaultSet())\r\n    }\r\n    return {\r\n        id: id,\r\n        sets: sets\r\n    }\r\n}","export const GetTraningPrograms = () => {\r\n    var items = localStorage.getItem(\"traning_programs\");\r\n    return items != null ? JSON.parse(items) : [];\r\n}\r\n\r\nexport const SetTraningPrograms = (traningPrograms) => {\r\n    console.log(\"Update traning program in local storage...\")\r\n    localStorage.setItem(\"traning_programs\", JSON.stringify(traningPrograms))\r\n}\r\n\r\nexport const AddTraningProgram = exercise => {\r\n    const items = GetTraningPrograms();\r\n    items.push(exercise);\r\n    SetTraningPrograms(items);\r\n}\r\n\r\nexport const RemoveTraningProgram = id => {\r\n    const items = GetTraningPrograms().filter(exercise => exercise.id != id);\r\n    SetTraningPrograms(items);\r\n}\r\n\r\nexport const UpdateTraningProgram = exercise => {\r\n    const items = GetTraningPrograms().map(e => {\r\n        if(e.id == exercise.id) {\r\n            \r\n            return exercise;\r\n        }\r\n\r\n        return e;\r\n    })\r\n    SetTraningPrograms(items);\r\n}\r\n\r\n\r\nexport const GetTraningProgramById = id => {\r\n    const exercises = GetTraningPrograms();\r\n    return exercises.find(e => e.id == id); \r\n}","import React from \"react\";\r\nimport { Box, Button } from \"@mui/material\"\r\n\r\nconst MainButton = ({isBottom, onClick, text, sx}) => {\r\n    return <Box sx={{\r\n        position: 'fixed', \r\n        width: \"100%\", \r\n        bottom: isBottom ? 0 : 40, \r\n        left: 0, \r\n        right: 0, \r\n        pl: 1, \r\n        pr: 1,\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }} elevation={3}>\r\n        <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"secondary\"\r\n            sx={{\r\n                p: 2,\r\n                ...sx\r\n            }}\r\n            onClick={onClick}>\r\n            {text}\r\n        </Button>\r\n    </Box>\r\n}\r\n\r\nexport default MainButton;","import { Dialog, DialogContent, DialogTitle, IconButton, Slide, Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst Transition = React.forwardRef((props, ref) => {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Modal = (props) => {\r\n    return <Dialog\r\n        open={props.open}\r\n        TransitionComponent={Transition}\r\n        PaperProps={{\r\n            sx: {\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                m: 0,\r\n                position: \"fixed\",\r\n                bottom: 0,\r\n                borderBottomRightRadius: 0,\r\n                borderBottomLeftRadius: 0\r\n            }\r\n        }}>\r\n        <DialogTitle sx={{pb:4}}>\r\n            {props.title}\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                onClick={props.onClose}\r\n                sx={{\r\n                    position: 'absolute',\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                }}\r\n            >\r\n                <CloseIcon />\r\n            </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent sx={{}}>\r\n            {props.children}\r\n        </DialogContent>\r\n    </Dialog>\r\n}\r\n\r\nexport default Modal;","export const GetExercises = () => {\r\n    var items = localStorage.getItem(\"exercises\");\r\n    return JSON.parse(items);\r\n}\r\n\r\nexport const SetExercises = exercises => {\r\n    console.log(\"Update exercises in local storage...\")\r\n    localStorage.setItem(\"exercises\", JSON.stringify(exercises))\r\n}\r\n\r\nexport const GetExercisesByMuscle = muscle => {\r\n    const items = GetExercises();\r\n    return items.filter(exercise => exercise.muscle == muscle);\r\n}\r\n\r\nexport const AddExercises = exercise => {\r\n    const items = GetExercises();\r\n    items.push(exercise);\r\n    SetExercises(items);\r\n}\r\n\r\nexport const RemoveExercises = id => {\r\n    const items = GetExercises().filter(exercise => exercise.id != id);\r\n    SetExercises(items);\r\n}\r\n\r\nexport const UpdateExercise = exercise => {\r\n    const items = GetExercises().map(e => {\r\n        if(e.id == exercise.id) {\r\n            return exercise;\r\n        }\r\n\r\n        return e;\r\n    })\r\n    SetExercises(items);\r\n}\r\n\r\nexport const CountExercisesByMuscle = muscle => {\r\n    return GetExercisesByMuscle(muscle).length;\r\n}\r\n\r\nexport const GetExerciseById = id => {\r\n    const exercises = GetExercises();\r\n    return exercises.find(e => e.id == id); \r\n}","import { GetExerciseById } from \"../../api/ExercisesAPI\";\r\nimport { GetTraningPrograms } from \"../../api/TraningProgramAPI\"\r\n\r\nexport const GetTraningProgramById = id => {\r\n    return GetTraningPrograms().find(e => e.id == id);\r\n}\r\n\r\nexport const GetUniqueMuscleGroups = program => {\r\n    const res = [...new Set(program.exercises.map(item => {\r\n        const exercise = GetExerciseById(item.id);\r\n        return exercise.muscle;\r\n    }))]\r\n    console.log(res);\r\n    return res;\r\n}","import React from 'react';\r\nimport { Paper, Typography, useTheme } from \"@mui/material\"\r\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\r\nimport { Box } from '@mui/system';\r\nimport { GetUniqueMuscleGroups } from \"../service/TraningProgramService\"\r\n\r\nconst TraningProgramCard = (props) => {\r\n    const theme = useTheme();\r\n    const muscleGroups = GetUniqueMuscleGroups(props.item)\r\n        .map(item => MuscleGroupsInfo[item] ? MuscleGroupsInfo[item].locale : '')\r\n        .join();\r\n    return <Paper\r\n        sx={{\r\n            display: \"flex\",\r\n            minHeight: \"160px\",\r\n            flexDirection: 'column',\r\n            p: 1,\r\n            backgroundColor: theme.palette.secondary.light,\r\n            ...props.sx\r\n        }}\r\n        onClick={(e) => props.onClick(e, ModalTypeInfo, props.item)}>\r\n        <Box sx={{ flexGrow: 4 }}>\r\n            {props.withCount && <Typography variant='caption' color=\"secondary\">Упражнений {props.item.exercises.length || 0}</Typography>}\r\n        </Box>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <Typography>{props.item.title}</Typography>\r\n        </Box>\r\n        <Box sx={{ flexGrow: 1, display: 'flex', alignItems: \"end\" }}>\r\n            <Typography variant='caption' color=\"secondary\">{muscleGroups}</Typography>\r\n        </Box>\r\n    </Paper>\r\n}\r\n\r\nexport default TraningProgramCard;","const DatabaseName = \"workout\";\r\n\r\nexport const GetWorkouts = () => {\r\n    var items = localStorage.getItem(DatabaseName);\r\n    return items ? JSON.parse(items) : [];\r\n}\r\n\r\n\r\nexport const SetWorkouts = items => {\r\n    localStorage.setItem(DatabaseName, JSON.stringify(items))\r\n}\r\n\r\nexport const GetWorkoutById = id => {\r\n    return GetWorkouts().find(e => e.id == id);\r\n}","const PadTo2Digits = (num) => {\r\n    return num.toString().padStart(2, '0');\r\n}\r\n\r\nexport const FormatDateTime = (date) => {\r\n    return (\r\n        [\r\n            date.getFullYear(),\r\n            PadTo2Digits(date.getUTCMonth() + 1),\r\n            PadTo2Digits(date.getUTCDate()),\r\n        ].join('-') +\r\n        ' ' +\r\n        [\r\n            PadTo2Digits(date.getUTCHours()),\r\n            PadTo2Digits(date.getUTCMinutes()),\r\n            PadTo2Digits(date.getUTCSeconds()),\r\n        ].join(':')\r\n    );\r\n}\r\n\r\nexport const FormatDate = (date) => {\r\n    return (\r\n        [\r\n            date.getFullYear(),\r\n            PadTo2Digits(date.getUTCMonth() + 1),\r\n            PadTo2Digits(date.getUTCDate()),\r\n        ].join('-')\r\n    );\r\n}\r\n\r\nexport const MinutesBetweenDates = (from, to) => {\r\n    console.log(`From ${from} - to ${to}`)\r\n    return Math.floor((to.getTime() - from.getTime()) / 1000 / 60);\r\n}\r\n\r\nexport const GetDateRangeByPeriod = period => {\r\n    const date = new Date();\r\n    if (period == \"week\") {\r\n        date.setDate(date.getDate() - 7) \r\n    }\r\n    if (period == \"year\") {\r\n        date.setDate(date.getDate() - 365)\r\n    }\r\n    if (period == \"month\") {\r\n        date.setDate(date.getDate() - 30)\r\n    }\r\n\r\n    return {to: new Date(), from: date}\r\n}","import { GetWorkouts, SetWorkouts, GetWorkoutById as ById } from \"../../api/WorkoutAPI\";\r\nimport { FormatDate, MinutesBetweenDates } from \"../../utils/DateUtils\";\r\nimport { DefaultTraning } from \"../Constants\"\r\n\r\nexport const CreateWorkout = (selectedProgram) => {\r\n    const traning = DefaultTraning();\r\n    traning.traningProgramId = selectedProgram.id;\r\n    traning.startAt = new Date();\r\n\r\n    traning.exercises = selectedProgram.exercises.map(exercise => {\r\n\r\n        return {\r\n            id: exercise.id,\r\n            sets: exercise.sets.map(set => {\r\n                return {\r\n                    repeats: set.repeats,\r\n                    weight: 0,\r\n                    completed: false\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    const items = GetWorkouts();\r\n    items.push(traning);\r\n    SetWorkouts(items);\r\n    return traning;\r\n}\r\n\r\nexport const GetTodayWorkouts = () => {\r\n    var now = new Date();\r\n    return GetWorkouts()\r\n        .filter(e => FormatDate(new Date(e.startAt)) == FormatDate(now))\r\n}\r\n\r\nexport const GetWorkoutHistory = () => {\r\n    var now = new Date();\r\n    return GetWorkouts()\r\n        .filter(e => FormatDate(new Date(e.startAt)) != FormatDate(now))\r\n}\r\n\r\nexport const GetWorkoutById = id => {\r\n    return ById(id);\r\n}\r\n\r\nexport const SaveWorkout = workout => {\r\n    const items = GetWorkouts();\r\n    SetWorkouts(items.map(item => {\r\n        return item.id == workout.id ? workout : item\r\n    }));\r\n}\r\n\r\nexport const StartWorkout = workout => {\r\n    workout.startAt = new Date();\r\n    workout.status = \"ACTIVE\";\r\n    SaveWorkout(workout)\r\n    return workout;\r\n}\r\n\r\nexport const CompleteWorkout = workout => {\r\n    workout.endAt = new Date();\r\n    workout.status = \"COMPLETED\";\r\n    workout.duration = MinutesBetweenDates(new Date(workout.startAt), workout.endAt);\r\n    workout.volume = workout.exercises\r\n        .reduce((result, exercise) => result + CalcExerciseVolume(exercise), 0);\r\n    workout.progress = CalcProgressInPercent(workout);\r\n    SaveWorkout(workout)\r\n    return workout;\r\n}\r\n\r\nexport const RejectWorkout = (workout, cause) => {\r\n    workout.endAt = new Date();\r\n    workout.status = \"REJECTED\";\r\n    workout.rejectCause = cause\r\n    SaveWorkout(workout)\r\n    return workout;\r\n}\r\n\r\nexport const IsNew = workout => {\r\n    return workout.status == \"NEW\";\r\n}\r\n\r\nexport const IsActive = workout => {\r\n    return workout.status == \"ACTIVE\";\r\n}\r\n\r\nexport const IsCompleted = workout => {\r\n    return workout.status == \"COMPLETED\";\r\n}\r\n\r\nexport const CalcExerciseVolume = workoutExercise => {\r\n    let result = workoutExercise.sets\r\n        .filter(set => set.completed)\r\n        .reduce((sum, set) => sum + set.repeats * set.weight, 0);\r\n    return result;\r\n}\r\n\r\nexport const CalcProgressInPercent = workout => {\r\n    let countOfSets = GetWorkoutSetsCount(workout);\r\n    let completedSets = workout.exercises.reduce((result, exercise) => result + CalcCompletedSets(exercise), 0)\r\n    console.log(`${countOfSets} - ${completedSets}`)\r\n    return ((completedSets / countOfSets) * 100).toFixed(0)\r\n}\r\n\r\nexport const CalcCompletedSets = workoutExercise => {\r\n    return workoutExercise.sets.filter(set => set.completed).length\r\n}\r\n\r\nexport const GetWorkoutSetsCount = workout => {\r\n    return workout.exercises.reduce((result, exercise) => result + exercise.sets.length, 0)\r\n}\r\n\r\nexport const GetWorkoutsByDateRange = range => {\r\n    return GetWorkouts()\r\n        .filter(workout => { \r\n            const endAt = new Date(workout.endAt);\r\n            if (endAt >= range.from && endAt <= range.to) {\r\n                return workout;\r\n            }\r\n        })\r\n}","import { Box, Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst TextWithIcon = (props) => {\r\n    return <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n        {props.icon}\r\n        <Typography variant=\"caption\" gutterBottom sx={{ mr: 1, mb: 0, lineHeight: 0 }}>{props.text}</Typography>\r\n    </Box>\r\n}\r\n\r\nexport default TextWithIcon;","import React from 'react';\r\nimport { Card, CardActionArea, CardActions, CardContent, CardHeader, CardMedia, Typography, useTheme } from \"@mui/material\";\r\nimport Tag from '../base/Tag';\r\nimport { Box } from '@mui/system';\r\n\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport TextWithIcon from '../base/TextWithIcon';\r\nimport { FormatDate } from '../../utils/DateUtils';\r\n\r\nconst defailtSx = {\r\n    display: 'flex'\r\n}\r\n\r\nconst TraningCard = (props) => {\r\n    if (props.status == \"REJECTED\")\r\n        return <CustomCard {...props} sx={{\r\n            backgroundColor: \"#93291E\",\r\n            backgroundImage: 'linear-gradient(62deg, #ED213A 0%, #93291E 100%)',\r\n\r\n        }} />\r\n    if (props.status == \"COMPLETED\")\r\n        return <CustomCard {...props} sx={{\r\n            backgroundColor: \"#E2E2E2\",\r\n            backgroundImage: 'linear-gradient(62deg, #C9D6FF 0%, #E2E2E2 100%)',\r\n\r\n        }} />\r\n\r\n    return <CustomCard {...props} />\r\n}\r\n\r\nconst CustomCard = props => {\r\n    const theme = useTheme();\r\n    return <Card\r\n        onClick={props.onClick}\r\n        sx={{\r\n            display: 'flex',\r\n            backgroundColor: \"#FBAB7E\",\r\n            backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\r\n            ...props.sx\r\n        }}>\r\n        <CardActionArea>\r\n            <CardHeader title={props.title}>\r\n            </CardHeader>\r\n            <CardActions sx={{ justifyContent: \"flex-end\", p: 2 }}>\r\n                <Box sx={{ display: 'flex', flexDirection: \"column\", flex: \"1 0 auto\" }}>\r\n                </Box>\r\n                <Box sx={{ display: \"flex\", alignItems: 'center', pl: 1 }}>\r\n                    <TextWithIcon\r\n                        icon={<CalendarMonthIcon />}\r\n                        text={FormatDate(new Date(props.date))} />\r\n                    <TextWithIcon\r\n                        icon={<AccessTimeIcon />}\r\n                        text={`${props.duration} мин.`} />\r\n                </Box>\r\n            </CardActions>\r\n        </CardActionArea>\r\n    </Card>\r\n}\r\n\r\nexport default TraningCard;","import { Box, Divider, Grid, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GetTraningPrograms } from \"../../api/TraningProgramAPI\";\r\nimport MainButton from \"../base/MainButton\";\r\nimport Modal from \"../base/Modal\";\r\nimport TraningProgramCard from \"../program/TraningProgramCard\";\r\nimport { CreateWorkout, GetTodayWorkouts, GetWorkoutHistory } from \"../service/WorkoutService\";\r\nimport { GetTraningProgramById } from \"../service/TraningProgramService\";\r\nimport TraningCard from \"../traning/TraningCard\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst EmptyResult = () => <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\r\n    <Typography variant=\"caption\">Пока тренировок нет</Typography>\r\n</Box>\r\n\r\nexport const TraningScene = props => {\r\n    const [todayTranings, setTodayTranings] = useState([])\r\n    const [traningHistory, setTraningHistory] = useState([])\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const todayTranings = GetTodayWorkouts();\r\n        setTodayTranings(todayTranings);\r\n        const traningHistory = GetWorkoutHistory();\r\n        setTraningHistory(traningHistory)\r\n    }, [])\r\n\r\n    const onStart = async (e, modaType, traningProgram) => {\r\n        const workout = await CreateWorkout(traningProgram);\r\n        navigateToWorkout(workout.id)\r\n    }\r\n\r\n    const handleChangeOpen = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const onChangeModal = () => {\r\n        if (isOpen) {\r\n            closeModal();\r\n        } else {\r\n            handleChangeOpen();\r\n        }\r\n    }\r\n\r\n    const navigateToWorkout = id => {\r\n        navigate(`/workout-process/${id}`)\r\n    }\r\n\r\n    return <div>\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\r\n            <Typography>Сегодня</Typography>\r\n        </Box>\r\n        {todayTranings.length > 0\r\n            ? <Grid container spacing={2}>\r\n                {todayTranings.map((traning, idx) =>\r\n                    <Grid item key={idx} xs={12}>\r\n                        <TraningCard\r\n                            status={traning.status}\r\n                            onClick={() => {navigateToWorkout(traning.id)}}\r\n                            title={GetTraningProgramById(traning.traningProgramId).title}\r\n                            date={traning.startAt}\r\n                            duration={traning.duration} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            : <EmptyResult />}\r\n\r\n\r\n\r\n        <Divider light sx={{ mt: 2, mb: 2 }}></Divider>\r\n\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\r\n            <Typography>История</Typography>\r\n        </Box>\r\n\r\n        {traningHistory.length > 0\r\n            ? <Grid container spacing={2}>\r\n                {traningHistory.map((traning, idx) =>\r\n                    <Grid item key={idx} xs={12}>\r\n                        <TraningCard\r\n                            title={GetTraningProgramById(traning.traningProgramId).title}\r\n                            onClick={() => {navigateToWorkout(traning.id)}}\r\n                            date={traning.startAt}\r\n                            duration={traning.duration} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            : <EmptyResult />}\r\n\r\n\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={() => onChangeModal(null)}\r\n            title=\"Выбери программу тренировок\">\r\n            <Grid container spacing={2}>\r\n                {GetTraningPrograms().map((item, idx) => <Grid item xs={12} key={idx}>\r\n                    <TraningProgramCard\r\n                        onClick={onStart}\r\n                        key={idx}\r\n                        item={item}\r\n                        showCount={false}\r\n                        sx={{ minHeight: \"80px\" }} />\r\n                </Grid>\r\n                )}\r\n            </Grid>\r\n\r\n\r\n        </Modal>\r\n\r\n        <MainButton text=\"Начать тренировку!\" onClick={onChangeModal} />\r\n    </div>\r\n}\r\n\r\nexport default TraningScene;","import { Box, FormControl, InputLabel, MenuItem, Select, TextField } from '@mui/material';\r\nimport React from 'react';\r\nimport { MuscleGroupsEnum } from '../Constants';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst ExerciseFrom = (props) => {\r\n    return <Box>\r\n        <TextField\r\n            onChange={(e) => { props.onChange(e, \"title\") }}\r\n            fullWidth\r\n            id=\"exercise-title\"\r\n            label=\"Название\"\r\n            variant=\"standard\"\r\n            value={props.exercise.title}\r\n            sx={{ pt: 1, pb: 1 }} />\r\n\r\n        <FormControl\r\n            variant='standard'\r\n            sx={{ m: 1, ml: 0, mr: 0, pt: 1, pb: 1 }}\r\n            fullWidth>\r\n            <InputLabel id=\"demo-multiple-name-label\">Мышечные группы</InputLabel>\r\n            <Select\r\n                onChange={(e) => { props.onChange(e, \"muscle\") }}\r\n                labelId=\"demo-multiple-name-label\"\r\n                id=\"demo-multiple-name\"\r\n                value={props.exercise.muscle}\r\n                MenuProps={MenuProps}>\r\n                {MuscleGroupsEnum.map((name) => (\r\n                    <MenuItem\r\n                        key={name}\r\n                        value={name}>\r\n                        {name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    </Box>\r\n}\r\n\r\nexport default ExerciseFrom;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport ExerciseFrom from './ExerciseForm';\r\n\r\nconst CreateExercise = (props) => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\" }}>\r\n            <ExerciseFrom\r\n                exercise={props.exercise}\r\n                onChange={props.onChange} />\r\n\r\n            <MainButton text=\"Создать\" onClick={props.onSave} isBottom={true} />\r\n        </Box>\r\n    </div>\r\n};\r\n\r\nexport default CreateExercise;","import { Button } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst RemoveEntityButton = props => {\r\n    return <Button\r\n        onClick={props.onClick}\r\n        fullWidth\r\n        color=\"error\"\r\n        sx={{ mt: 1, pl: 0 }}\r\n        disableRipple>\r\n            {props.text}\r\n    </Button>\r\n}\r\n\r\nexport default RemoveEntityButton;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport RemoveEntityButton from '../base/RemoveEntityButton';\r\nimport ExerciseFrom from './ExerciseForm';\r\n\r\nconst ExerciseInfo = (props) => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\"}}>\r\n            <ExerciseFrom\r\n                exercise={props.exercise}\r\n                onChange={props.onChange} />\r\n\r\n            <RemoveEntityButton onClick={props.onRemove} text=\"Удалить упражнение\"/>\r\n\r\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\r\n        </Box>\r\n    </div>\r\n};\r\n\r\nexport default ExerciseInfo;","import { Accordion as MuiAccordion, AccordionDetails as MuiAccordionDetails, AccordionSummary as MuiAccordionSummary, Badge, Button } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\r\nimport { Box, styled } from \"@mui/system\";\r\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo } from \"../Constants\";\r\nimport { CountExercisesByMuscle, GetExercisesByMuscle } from \"../../api/ExercisesAPI\";\r\n\r\nconst Accordion = styled((props) => (\r\n    <MuiAccordion elevation={0} {...props} />\r\n))(({ theme }) => ({\r\n    '&:not(:last-child)': {\r\n        borderBottom: 0,\r\n    }\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n    <MuiAccordionSummary\r\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.light,\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    '& .MuiAccordionSummary-content': {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\r\n}));\r\n\r\nconst ExerciseList = (props) => {\r\n    const [expanded, setExpanded] = useState(null)\r\n\r\n    const handleChangeExpanded = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    const onClickToExercise = (e, exercise) => {\r\n        e.stopPropagation();\r\n        props.onClick(e, ModalTypeInfo, exercise);\r\n    }\r\n\r\n    const calcCount = (muscle) => {\r\n        return CountExercisesByMuscle(muscle);\r\n    }\r\n\r\n    return <div>\r\n        {MuscleGroupsEnum.map((muscle, idx) => <Accordion\r\n            key={idx}\r\n            expanded={expanded == muscle}\r\n            onChange={handleChangeExpanded(muscle)}>\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1bh-content\"\r\n                id=\"panel1bh-header\">\r\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", pr: 2 }}>\r\n                    {MuscleGroupsInfo[muscle].locale}\r\n                    <Badge showZero badgeContent={calcCount(muscle)} color=\"secondary\" sx={{zIndex: 0}}></Badge>\r\n                </Box>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        onClick={(e) => onClickToExercise(e, exercise)}\r\n                        fullWidth\r\n                        sx={{ justifyContent: \"flex-start\", textAlign: \"left\" }}\r\n                        disableRipple>\r\n                        {exercise.title}\r\n                    </Button>\r\n                </Box>)}\r\n            </AccordionDetails>\r\n        </Accordion>)\r\n        }\r\n    </div >\r\n}\r\n\r\nexport default ExerciseList;","import { Box } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { AddExercises, RemoveExercises, UpdateExercise } from \"../../api/ExercisesAPI\";\r\nimport MainButton from \"../base/MainButton\";\r\nimport Modal from \"../base/Modal\";\r\nimport { DefaultExercise, ModalTypeAdd, ModalTypeInfo } from \"../Constants\";\r\nimport CreateExercise from \"../exercise/CreateExercise\";\r\nimport ExerciseInfo from \"../exercise/ExerciseInfo\";\r\nimport ExerciseList from \"../exercise/ExerciseList\";\r\n\r\nconst defaultModalState = {\r\n    open: false,\r\n    type: null,\r\n    title: null\r\n};\r\n\r\nconst ExercisesScene = props => {\r\n    const [modalInfo, setModalInfo] = useState(defaultModalState);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    const handleChangeExercise = (e, field) => {\r\n        var item = selectedItem;\r\n        item[field] = e.target.value;\r\n        setSelectedItem({ ...item });\r\n    }\r\n\r\n    const removeExercise = () => {\r\n        RemoveExercises(selectedItem.id)\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalInfo(defaultModalState);\r\n        setSelectedItem(null)\r\n    }\r\n\r\n    const onChangeModal = (e, type, item) => {\r\n        if (modalInfo.open) {\r\n            closeModal();\r\n        } else {\r\n            setModalInfo({\r\n                open: true,\r\n                type: type,\r\n                title: type == ModalTypeAdd ? \"Создание упражнения\" : null\r\n            });\r\n            setSelectedItem({ ...item });\r\n        }\r\n    }\r\n\r\n    const saveExercise = (e) => {\r\n        UpdateExercise(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    const addExeecise = (e) => {\r\n        AddExercises(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    return <div>\r\n        <ExerciseList onClick={onChangeModal} />\r\n        <Modal\r\n            open={modalInfo.open}\r\n            onClose={(e) => onChangeModal(e, null, null)}\r\n            title={modalInfo.title}>\r\n            {modalInfo.type == ModalTypeInfo && <ExerciseInfo\r\n                onChange={handleChangeExercise}\r\n                exercise={selectedItem}\r\n                onRemove={removeExercise}\r\n                onSave={saveExercise} />}\r\n            {modalInfo.type == ModalTypeAdd && <CreateExercise\r\n                onChange={handleChangeExercise}\r\n                exercise={selectedItem}\r\n                onSave={addExeecise} />}\r\n        </Modal>\r\n\r\n        <MainButton text=\"Создать упражнение\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultExercise())} />\r\n    </div>\r\n}\r\n\r\nexport default ExercisesScene;","import { Accordion, AccordionDetails, AccordionSummary as MuiAccordionSummary, Box, Button, styled } from '@mui/material';\r\nimport React from 'react';\r\nimport { GetExercisesByMuscle } from '../../api/ExercisesAPI';\r\nimport MainButton from '../base/MainButton';\r\nimport { MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nconst AccordionSummary = styled((props) => (\r\n    <MuiAccordionSummary\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.light,\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    '& .MuiAccordionSummary-content': {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst ExercisesSelector = (props) => {\r\n    return <div>\r\n        <Box sx={{ pb: 14 }}>\r\n            {MuscleGroupsEnum.map((muscle, idx) => <Accordion\r\n                key={idx}\r\n                expanded={true}>\r\n                <AccordionSummary\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\">\r\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", p: 1 }}>\r\n                        {MuscleGroupsInfo[muscle].locale}\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\r\n                        <Button\r\n                            endIcon={props.isSelected(exercise.id) ? <CheckIcon /> : <div></div>}\r\n                            color=\"secondary\"\r\n                            onClick={(e) => props.handleCheckItem(exercise.id)}\r\n                            fullWidth\r\n                            sx={{ justifyContent: \"space-between\", textAlign: \"left\" }}\r\n                            disableRipple>\r\n                            {exercise.title}\r\n                        </Button>\r\n                    </Box>)}\r\n                </AccordionDetails>\r\n            </Accordion>)}\r\n        </Box>\r\n\r\n        <MainButton text={`Применить`} onClick={props.onSave} isBottom={true} />\r\n    </div>\r\n}\r\n\r\nexport default ExercisesSelector;","import React from 'react';\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst AddSetButton = (props) => {\r\n    return <Button\r\n        size='small'\r\n        variant='contained'\r\n        color=\"secondary\"\r\n        onClick={props.onClick}>\r\n        {props.text}\r\n    </Button>\r\n}\r\n\r\nexport default AddSetButton;","import { Checkbox, Divider, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from '@mui/material';\r\nimport { Box, useTheme } from '@mui/system';\r\nimport React from 'react';\r\nimport AddSetButton from '../base/AddSetButton';\r\nimport { MuscleGroupsInfo } from '../Constants';\r\n\r\nconst SetsTable = ({ item, sets, handleChangeInput, handleChangeCompleted, addSet, disableWeigth, disableCompleted, infoMode, inputMode }) => {\r\n    const theme = useTheme();\r\n    console.log(sets);\r\n\r\n    return <Paper sx={{ p: 1, mb: 2, mt: 1, backgroundColor: theme.palette.primary.light }}>\r\n        <Box sx={{ display: 'flex' }}>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', pl: 2, pr: 2 }}>\r\n                <Typography>{item.title}</Typography>\r\n                <Typography variant='caption'>{MuscleGroupsInfo[item.muscle].locale}</Typography>\r\n            </Box>\r\n        </Box>\r\n\r\n        <Divider />\r\n\r\n        <Box>\r\n            <TableContainer>\r\n                <Table sx={{ width: \"100%\", tableLayout: 'fixed' }} size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Подход</TableCell>\r\n                            <TableCell align='center'>Повторы</TableCell>\r\n                            {!disableWeigth && <TableCell align='center'>Вес</TableCell>}\r\n                            {!disableCompleted && <TableCell>Выполнен</TableCell>}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {sets.map((set, index) =>\r\n                            <TableRow key={index}>\r\n                                <TableCell>{index + 1}</TableCell>\r\n                                <TableCell align='center'>\r\n                                    {inputMode && <TextField\r\n                                        inputProps={{\r\n                                            sx: { textAlign: \"center\" }\r\n                                        }}\r\n                                        size='small'\r\n                                        name=\"repeats\"\r\n                                        type={\"number\"}\r\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\r\n                                        fullWidth\r\n                                        value={set.repeats} />}\r\n                                    {infoMode && set.repeats}\r\n                                </TableCell>\r\n                                {!disableWeigth && <TableCell align='center'>\r\n                                    {inputMode && <TextField\r\n                                        inputProps={{\r\n                                            sx: { textAlign: \"center\" }\r\n                                        }}\r\n                                        size='small'\r\n                                        name=\"weight\"\r\n                                        type={\"number\"}\r\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\r\n                                        fullWidth\r\n                                        value={set.weight} />}\r\n                                    {infoMode && set.weight}\r\n                                </TableCell>}\r\n                                {!disableCompleted && <TableCell align='right'>\r\n                                    <Checkbox\r\n                                        disabled={infoMode}\r\n                                        name=\"completed\"\r\n                                        color='secondary'\r\n                                        checked={set.completed}\r\n                                        onChange={(e) => handleChangeCompleted(e, item, index)} />\r\n                                </TableCell>}\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {inputMode && <Box sx={{ display: 'flex', justifyContent: 'flex-end', pt: 1 }}>\r\n                <AddSetButton text=\"Добавить подход\" onClick={e => addSet(item)} />\r\n            </Box>}\r\n        </Box>\r\n    </Paper>\r\n}\r\n\r\nexport default SetsTable;","import { Box, Button, Grid, TextField, Typography, useTheme } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { GetExerciseById } from '../../api/ExercisesAPI';\r\nimport Modal from '../base/Modal';\r\nimport { DefaultSet } from '../Constants';\r\nimport ExercisesSelector from '../exercise/ExercisesSelector';\r\nimport SetsTable from './SetsTable';\r\n\r\nconst GenerateExercise = id => {\r\n    return {\r\n        id: id,\r\n        sets: [\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            },\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            },\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            },\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nconst TraningProgramForm = props => {\r\n    const [selected, setSelected] = useState([]);\r\n    const [isOpen, setOpen] = useState(false)\r\n    const theme = useTheme();\r\n\r\n    useEffect(() => {\r\n        setSelected([...props.item.exercises])\r\n    }, [])\r\n\r\n    const isSelected = id => {\r\n        return selected.find(e => e.id == id) || false\r\n    }\r\n\r\n    const handleCheckItem = id => {\r\n        if (!isSelected(id)) {\r\n            setSelected([...selected, GenerateExercise(id)])\r\n        } else {\r\n            setSelected(selected.filter(e => e.id != id))\r\n        }\r\n    }\r\n\r\n    const onClose = () => {\r\n        setSelected(props.item.exercises)\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const handleChangeOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const onSaveExercises = () => {\r\n        props.setExercises(selected);\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const handleChangeRepeats = (e, exercise, index) => {\r\n        let target = selected.find(e => e.id == exercise.id);\r\n        target.sets[index].repeats = parseInt(e.target.value)\r\n        setSelected(selected.map(e => {\r\n            if (e.id == target.id)\r\n                return target;\r\n\r\n            return e;\r\n        }))\r\n    }\r\n\r\n    const addSet = (exercise) => {\r\n        let target = selected.find(e => e.id == exercise.id);\r\n        target.sets.push(DefaultSet());\r\n        setSelected(selected.map(e => {\r\n            if (e.id == target.id)\r\n                return target;\r\n\r\n            return e;\r\n        }))\r\n    }\r\n\r\n    return <Box>\r\n        <TextField\r\n            onChange={(e) => { props.onChange(e, \"title\") }}\r\n            fullWidth\r\n            id=\"exercise-title\"\r\n            label=\"Название\"\r\n            variant=\"standard\"\r\n            value={props.item.title}\r\n            sx={{ pt: 1, pb: 1 }} />\r\n\r\n        {props.item.exercises.length == 0 && <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 2 }}>\r\n            <Typography variant='caption'>Упражнения не добавлены</Typography>\r\n        </Box>}\r\n\r\n\r\n        {props.item.exercises.length > 0 && <Grid container spacing={2}>\r\n            {props.item.exercises.map((exercise, idx) => {\r\n                const item = GetExerciseById(exercise.id);\r\n                return <Grid item xs={12} key={idx}>\r\n                    <SetsTable\r\n                        item={item}\r\n                        sets={exercise.sets}\r\n                        handleChangeInput={handleChangeRepeats}\r\n                        disableWeigth disableCompleted infoMode\r\n                        addSet={addSet}\r\n                    />\r\n                </Grid>\r\n            })}\r\n        </Grid>\r\n        }\r\n\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={onClose}\r\n            title=\"Добавление упражнений\">\r\n            <ExercisesSelector\r\n                handleCheckItem={handleCheckItem}\r\n                selectedExercises={props.item.exercises}\r\n                isSelected={isSelected}\r\n                selected={selected}\r\n                onSave={onSaveExercises} />\r\n        </Modal>\r\n\r\n        <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={handleChangeOpen}>\r\n           Изменить упражнения\r\n        </Button>\r\n    </Box >\r\n}\r\n\r\nexport default TraningProgramForm;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport TraningProgramForm from './TraningProgramForm';\r\n\r\nconst CreateTraningProgram = props => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\r\n            <TraningProgramForm\r\n                item={props.item}\r\n                onChange={props.onChange}\r\n                setExercises={props.setExercises}\r\n                onSave={props.setExercises}/>\r\n\r\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\r\n        </Box>\r\n    </div>\r\n}\r\n \r\nexport default CreateTraningProgram;","import { Button } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport TraningProgramForm from './TraningProgramForm';\r\n\r\nconst TraningProgramInfo = props => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\r\n            <TraningProgramForm\r\n                item={props.item}\r\n                onChange={props.onChange}\r\n                setExercises={props.setExercises}\r\n                onSave={props.setExercises}/>\r\n\r\n            <Button\r\n                onClick={props.onRemove}\r\n                fullWidth\r\n                color=\"error\"\r\n                sx={{  mt: 1, pl: 0 }}\r\n                disableRipple>\r\n                Удалить программу\r\n            </Button>\r\n\r\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true}/>\r\n        </Box>\r\n    </div>\r\n}\r\n \r\nexport default TraningProgramInfo;","import { Grid } from '@mui/material';\r\nimport React from 'react';\r\nimport { GetTraningPrograms } from '../../api/TraningProgramAPI';\r\nimport TraningProgramCard from \"../program/TraningProgramCard\";\r\n\r\nconst TraningProgramList = (props) => {\r\n    return <Grid container spacing={2}>\r\n        {GetTraningPrograms().map((program, idx) => <Grid key={idx} item xs={6}>\r\n            <TraningProgramCard item={program} onClick={props.onClick} withCount={props.withCount}/>\r\n        </Grid>)}\r\n    </Grid>\r\n}\r\n \r\nexport default TraningProgramList;","import { Box } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { AddTraningProgram, RemoveTraningProgram, UpdateTraningProgram } from '../../api/TraningProgramAPI';\r\nimport MainButton from '../base/MainButton';\r\nimport Modal from '../base/Modal';\r\nimport { DefaultModalState, DefaultTraningProgram, ModalTypeAdd, ModalTypeInfo } from '../Constants';\r\nimport CreateTraningProgram from '../program/CreateTraningProgram';\r\nimport TraningProgramInfo from '../program/TraningProgramInfo';\r\nimport TraningProgramList from '../program/TraningProgramList';\r\n \r\nexport const TraningProgramScene = (props) => {\r\n    const [modalInfo, setModalInfo] = useState(DefaultModalState);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    const handleChangeItem = (e, field) => {\r\n        var item = selectedItem;\r\n        item[field] = e.target.value;\r\n        setSelectedItem({ ...item });\r\n    }\r\n\r\n    const removeItem = () => {\r\n        RemoveTraningProgram(selectedItem.id)\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalInfo(DefaultModalState);\r\n        setSelectedItem(null)\r\n    }\r\n\r\n    const onChangeModal = (e, type, item) => {\r\n        if (modalInfo.open) {\r\n            closeModal();\r\n        } else {\r\n            setModalInfo({\r\n                open: true,\r\n                type: type,\r\n                title: type == ModalTypeAdd ? \"Создание программы\" : null\r\n            });\r\n            setSelectedItem({ ...item });\r\n        }\r\n    }\r\n\r\n    const saveItem = (e) => {\r\n        UpdateTraningProgram(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    const addItem = (e) => {\r\n        AddTraningProgram(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    const setExercises = (exercises) => {\r\n        console.log(\"Exercises\", exercises);\r\n        setSelectedItem({...selectedItem, exercises: exercises})\r\n    }\r\n\r\n    return <div>\r\n        <TraningProgramList onClick={onChangeModal} withCount/>\r\n        <Modal\r\n            open={modalInfo.open}\r\n            onClose={(e) => onChangeModal(e, null, null)}\r\n            title={modalInfo.title}>\r\n            {modalInfo.type == ModalTypeInfo && <TraningProgramInfo\r\n                onChange={handleChangeItem}\r\n                item={selectedItem}\r\n                onRemove={removeItem}\r\n                onSave={saveItem}\r\n                setExercises={setExercises} />}\r\n            {modalInfo.type == ModalTypeAdd && <CreateTraningProgram\r\n                onChange={handleChangeItem}\r\n                item={selectedItem}\r\n                onSave={addItem}\r\n                setExercises={setExercises} />}\r\n        </Modal>\r\n\r\n        <MainButton text=\"Создать программу\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultTraningProgram())}/>\r\n    </div>\r\n}\r\n \r\nexport default TraningProgramScene;","import React from \"react\";\r\nimport { BottomNavigation, BottomNavigationAction, Paper } from \"@mui/material\";\r\n\r\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\r\nimport FitbitIcon from '@mui/icons-material/Fitbit';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport QueryStatsIcon from '@mui/icons-material/QueryStats';\r\n\r\nconst Navigation = props => {\r\n    return <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\r\n        <BottomNavigation value={props.activeScene} onChange={props.handleChange} showLabels>\r\n            <BottomNavigationAction value=\"traning-programs\" label=\"Программы\" icon={<ListAltIcon />} />\r\n            <BottomNavigationAction value=\"traning\" label=\"Тренировки\" icon={<FitnessCenterIcon />} />\r\n            <BottomNavigationAction value=\"progress\" label=\"Прогресс\" icon={<QueryStatsIcon />} />\r\n            <BottomNavigationAction value=\"exercises\" label=\"Упражнения\" icon={<FitbitIcon />} />\r\n        </BottomNavigation>\r\n    </Paper>\r\n}\r\n\r\nexport default Navigation;","import { Box, createTheme, CssBaseline, ThemeProvider } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\r\nimport Navigation from './Navigation'\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#EAE1DF\",\r\n            light: \"#f7f3f3\",\r\n            dark: \"#be9d9d\",\r\n            contrastText: \"#322E18\"\r\n        },\r\n        secondary: {\r\n            main: \"#545E56\",\r\n            light: \"#EAECEA\",\r\n            dark: \"#A9B1A9\"\r\n        },\r\n        background: {\r\n            default: \"#f7f3f3\"\r\n        }\r\n    },\r\n    shape: {\r\n        borderRadius: '8px'\r\n    },\r\n    typography: {\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n    }\r\n});\r\n\r\nconst Layout = ({ children }) => {\r\n    const [scene, setScene] = useState(\"traning\")\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        const path = location.pathname.substring(1);\r\n        if (path.length == 0 || path.includes('workout-process')) {\r\n            setScene(\"traning\")\r\n        } else {\r\n            setScene(path)\r\n        }\r\n    }, [location])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        navigate(`/${newValue}`)\r\n    };\r\n\r\n    return <Box sx={{ display: 'flex', height: '100%', justifyContent: 'center', pb: 7, pt: 0 }}>\r\n        <CssBaseline />\r\n        <ThemeProvider theme={darkTheme}>\r\n            <Box component={\"main\"} sx={{ p: 1, width: '100%', height: '100%', overflowY: \"scroll\", pb: 10 }}>\r\n                <Outlet />\r\n                <Navigation activeScene={scene} handleChange={handleChange} />\r\n            </Box>\r\n        </ThemeProvider>\r\n    </Box>\r\n}\r\n\r\nexport default Layout;","import { Box, Button, Grid, Paper, Typography } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { GetExerciseById } from '../../api/ExercisesAPI';\r\nimport MainButton from '../base/MainButton';\r\nimport Modal from '../base/Modal';\r\nimport { DefaultSet, GenerateProgramExercise } from '../Constants';\r\nimport ExercisesSelector from '../exercise/ExercisesSelector';\r\nimport SetsTable from '../program/SetsTable';\r\nimport { CompleteWorkout, GetWorkoutById, IsActive, IsCompleted, IsNew, SaveWorkout, StartWorkout } from '../service/WorkoutService';\r\n\r\nconst WorkoutProcessScene = (props) => {\r\n    const { workoutId } = useParams();\r\n\r\n    const [selected, setSelected] = useState([]);\r\n    const [isOpen, setOpen] = useState(false)\r\n    const [workout, updateWorkout] = useState({ exercises: [] });\r\n    useEffect(() => {\r\n        let result = GetWorkoutById(workoutId)\r\n        updateWorkout(result)\r\n        setSelected(result.exercises);\r\n    }, [workoutId])\r\n\r\n    useEffect(() => {\r\n        setSelected(workout.exercises)\r\n    }, [workout])\r\n\r\n\r\n    const handleChangeOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const onClose = () => {\r\n        setSelected(workout.exercises)\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const handleChangeInput = (e, exercise, index) => {\r\n        let target = getTargetExerciseById(exercise.id)\r\n        let newValue = e.target.value == \"\" ? \"\" : parseInt(e.target.value);\r\n        target.sets[index][e.target.name] = newValue\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const handleChangeCompleted = (e, exercise, index) => {\r\n        let target = getTargetExerciseById(exercise.id)\r\n        target.sets[index].completed = !target.sets[index].completed;\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const getTargetExerciseById = id => {\r\n        return workout.exercises.find(e => e.id == id);\r\n    }\r\n\r\n    const updateWorkoutFilling = (target) => {\r\n        updateWorkout({\r\n            ...workout,\r\n            exercises: workout.exercises.map(e => {\r\n                return e.id == target.id ? target : e;\r\n            })\r\n        })\r\n        SaveWorkout(workout)\r\n    }\r\n\r\n    const addSet = (exercise) => {\r\n        let target = getTargetExerciseById(exercise.id);\r\n        target.sets.push(DefaultSet());\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const startWorkout = () => {\r\n        updateWorkoutFilling(StartWorkout(workout))\r\n    }\r\n\r\n    const completeWorkout = () => {\r\n        updateWorkoutFilling(CompleteWorkout(workout));\r\n    }\r\n\r\n    const handleCheckItem = id => {\r\n        if (!isSelected(id)) {\r\n            setSelected([...selected, GenerateProgramExercise(id)])\r\n        } else {\r\n            setSelected(selected.filter(e => e.id != id))\r\n        }\r\n    }\r\n\r\n    const onSaveExercises = () => {\r\n        workout.exercises = selected;\r\n        updateWorkoutFilling(workout);\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const isSelected = id => {\r\n        return selected.find(e => e.id == id) || false\r\n    }\r\n\r\n    return <div>\r\n        <Grid container spacing={2}>\r\n            {IsCompleted(workout) && <Grid item xs={12}>\r\n                <Paper sx={{\r\n                    p: 2\r\n                }}>\r\n                    <Typography variant='h6'>{`Тоннаж: ${workout.volume} кг`}</Typography>\r\n                    <Typography variant='h6'>{`Выполнено на ${workout.progress}%`}</Typography>\r\n                </Paper>\r\n                </Grid>}\r\n            {workout.exercises.map((exercise, idx) => {\r\n                const item = GetExerciseById(exercise.id);\r\n                return <Grid item xs={12} key={idx}>\r\n                    <SetsTable\r\n                        infoMode={IsCompleted(workout) || IsNew(workout)}\r\n                        inputMode={IsActive(workout)}\r\n                        item={item}\r\n                        sets={exercise.sets}\r\n                        handleChangeCompleted={handleChangeCompleted}\r\n                        handleChangeInput={handleChangeInput}\r\n                        addSet={addSet} />\r\n                </Grid>\r\n            })}\r\n        </Grid>\r\n\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={onClose}\r\n            title=\"Изменить упражнения\">\r\n            <ExercisesSelector\r\n                handleCheckItem={handleCheckItem}\r\n                selectedExercises={workout.exercises}\r\n                isSelected={isSelected}\r\n                selected={selected}\r\n                onSave={onSaveExercises} />\r\n        </Modal>\r\n\r\n       {(IsNew(workout) || IsActive(workout)) && <Button onClick={handleChangeOpen}>Изменить упражнения</Button>}\r\n\r\n        {IsNew(workout) && <MainButton\r\n            text={\"Go!\"}\r\n            onClick={startWorkout}\r\n            sx={{\r\n                backgroundColor: \"#FBAB7E\",\r\n                backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\r\n                color: 'black'\r\n            }} />}\r\n        {IsActive(workout) && <MainButton\r\n            text={\"Завершить\"}\r\n            onClick={completeWorkout}\r\n            sx={{\r\n                backgroundColor: \"#FBAB7E\",\r\n                backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\r\n                color: 'black'\r\n            }} />}\r\n    </div>\r\n}\r\n\r\nexport default WorkoutProcessScene;","import { Box, Typography } from '@mui/material';\r\nimport { useTheme } from '@mui/system';\r\nimport React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nconst CustomTooltip = ({ payload }) => {\r\n\r\n    if (payload == null || payload == 'undefined')\r\n        return <div></div>\r\n\r\n    return <Box sx={{ p: 1, display: 'flex', flexDirection: 'column' }}>\r\n        {payload.length && <Typography variant='caption' color=\"secondary\">{payload[0].payload.date}</Typography>}\r\n        {payload.length && <Typography variant='caption' color=\"secondary\">{payload[0].value}</Typography>}\r\n    </Box>\r\n}\r\n\r\nconst Chart = ({ data, dataKey }) => {\r\n    const theme = useTheme();\r\n\r\n    return <ResponsiveContainer height={160} width=\"100%\">\r\n        <AreaChart\r\n            data={data}>\r\n            <Tooltip\r\n                position={{ y: 0 }}\r\n                content={<CustomTooltip />}\r\n                wrapperStyle={{ backgroundColor: theme.palette.secondary.light, outlineColor: theme.palette.secondary.dark, borderRadius: 1 }} />\r\n            <Area\r\n                type=\"monotone\"\r\n                dataKey={dataKey}\r\n                stroke={theme.palette.secondary.dark}\r\n                fill={theme.palette.secondary.light}\r\n                strokeWidth={2}\r\n            />\r\n        </AreaChart>\r\n    </ResponsiveContainer>\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport { Paper, Typography, useTheme } from \"@mui/material\";\r\nimport Chart from \"./Chart\";\r\nimport { Box } from '@mui/system';\r\n\r\nconst ChartCard = ({ title, maxValue, data, dataKey }) => {\r\n    const theme = useTheme();\r\n    return <Paper sx={{ p: 1, height: 220 }}>\r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Typography variant=\"h6\">{title}</Typography>\r\n            <Typography variant='h6' color={theme.palette.secondary.dark}>Макс. {maxValue}</Typography>\r\n        </Box>\r\n        <Chart data={data} dataKey={dataKey} />\r\n    </Paper>\r\n}\r\n\r\nexport default ChartCard;","import { Fade, Paper, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\n\r\nconst CountChart = ({ title, count, fade }) => {\r\n    return <Paper sx={{ p: 2, height: 180 }}>\r\n        <Box sx={{display: 'flex', flexDirection: \"column\", alignItems: 'stretch', height: \"100%\"}}>\r\n            <Box sx={{ display: 'flex', justifyContent: \"center\", flexGrow: 1 }}>\r\n                <Typography variant='h6'>{title}</Typography>\r\n            </Box>\r\n            <Box sx={{ display: 'flex', justifyContent: \"center\", alignItems: 'center', height: \"100%\", flexGrow: 2 }}>\r\n                <Fade in={fade} timeout={150}>\r\n                    <Typography variant='h2'>{count}</Typography>\r\n                </Fade>\r\n            </Box>\r\n        </Box>\r\n\r\n    </Paper>\r\n}\r\n\r\nexport default CountChart;","import { FormatDate, GetDateRangeByPeriod } from \"../../utils/DateUtils\";\r\nimport { GetWorkoutsByDateRange } from \"./WorkoutService\";\r\n\r\nexport const GetStatisticByPeriod = period => {\r\n    let dateRange = GetDateRangeByPeriod(period);\r\n    const workouts = GetWorkoutsByDateRange(dateRange) || [];\r\n    const maxVolume = workouts.length && Math.max(...workouts.map(workout => workout.volume))\r\n    const maxDuration = workouts.length && Math.max(...workouts.map(workout => workout.duration || 0))\r\n\r\n    return {\r\n        workoutCount: workouts.length,\r\n        fullCompleteCount: workouts.filter(workout => workout.progress == 100).length,\r\n        tonnageData: {\r\n            max: maxVolume,\r\n            data: workouts.map(workout => {\r\n                return {\r\n                    date: FormatDate(new Date(workout.endAt)),\r\n                    volume: workout.volume\r\n                }\r\n            })\r\n        },\r\n        durationData: {\r\n            max: maxDuration,\r\n            data: workouts.map(workout => {\r\n                return {\r\n                    date: FormatDate(new Date(workout.endAt)),\r\n                    duration: workout.duration \r\n                }\r\n            })\r\n        }\r\n    }\r\n}","import { Grid, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ChartCard from '../base/ChartCard';\r\nimport CountChart from '../base/CountChart';\r\nimport { GetStatisticByPeriod } from '../service/ProgressService';\r\n\r\nconst ProgressScene = () => {\r\n    const [period, updatePeriod] = useState(\"week\")\r\n    const [fade, updateFade] = useState(true)\r\n    const [statistic, updateStatistic] = useState({\r\n        workoutCount: 0,\r\n        fullCompleteCount: 0,\r\n        tonnageData: {\r\n            max: 0,\r\n            data: []\r\n        },\r\n        durationData: {\r\n            max: 0,\r\n            data: []\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        updateStatistic(GetStatisticByPeriod(period))\r\n    }, [period])\r\n\r\n    const handleChangePeriod = e => {\r\n        updateFade(false);\r\n        setTimeout(() => {\r\n            updatePeriod(e.target.value)\r\n            updateFade(true);\r\n        }, 150)\r\n    }\r\n\r\n    return <div>\r\n        <Typography variant='h6'>Тренировочный прогресс</Typography>\r\n        <Box sx={{ display: 'flex', justifyContent: \"center\", pt: 2, pb: 2 }}>\r\n            <ToggleButtonGroup\r\n                value={period}\r\n                size='small'\r\n                fullWidth\r\n                onChange={handleChangePeriod}\r\n                exclusive>\r\n                <ToggleButton value=\"year\" sx={{ p: \"8px\" }}>\r\n                    Год\r\n                </ToggleButton>\r\n                <ToggleButton value=\"week\">\r\n                    Неделя\r\n                </ToggleButton>\r\n                <ToggleButton value=\"month\">\r\n                    Месяц\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n        </Box>\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n                <CountChart\r\n                    title=\"Тренировок\"\r\n                    fade={fade}\r\n                    count={statistic.workoutCount} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <CountChart\r\n                    title=\"Завершено\"\r\n                    fade={fade}\r\n                    count={statistic.fullCompleteCount} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <ChartCard\r\n                    title={\"Тоннаж\"}\r\n                    maxValue={statistic.tonnageData.max}\r\n                    dataKey=\"volume\"\r\n                    data={statistic.tonnageData.data} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <ChartCard\r\n                    title={\"Длительность\"}\r\n                    maxValue={statistic.durationData.max}\r\n                    dataKey=\"duration\"\r\n                    data={statistic.durationData.data} />\r\n            </Grid>\r\n        </Grid>\r\n    </div>\r\n}\r\n\r\nexport default ProgressScene;","import { Button } from '@mui/material';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DebugScene = () => {\r\n    const navigate = useNavigate();\r\n    const reboot = () => {\r\n        navigate(\"/\");\r\n        window.location.reload(true);\r\n    }\r\n\r\n    return <div>\r\n        <Button fullWidth color=\"secondary\" onClick={reboot}>Перезагрузить</Button>\r\n        <Button fullWidth color=\"secondary\">Отчистить кеш</Button>\r\n        <Button fullWidth color=\"secondary\">Отчистить данные</Button>\r\n    </div>\r\n}\r\n \r\nexport default DebugScene;","import React from \"react\";\r\nimport './App.css';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\n\r\nimport { DefaultExercises, DefaultTraningPrograms } from \"./components/Constants\";\r\nimport { createHashRouter, createRoutesFromElements, Route, RouterProvider } from \"react-router-dom\";\r\n\r\nimport TraningScene from \"./components/scenes/TraningScene\";\r\nimport ExercisesScene from \"./components/scenes/ExercisesScene\";\r\nimport TraningProgramScene from \"./components/scenes/TraningProgramScene\";\r\nimport Layout from \"./components/base/Layout\";\r\nimport WorkoutProcessScene from \"./components/scenes/TraningProcessScene\";\r\nimport ProgressScene from \"./components/scenes/ProgressScene\";\r\nimport DebugScene from \"./components/scenes/DebugScene\";\r\n\r\nconst initExercises = () => {\r\n  if (localStorage.getItem(\"exercises\") == null)\r\n    localStorage.setItem(\"exercises\", JSON.stringify(DefaultExercises))\r\n  if (localStorage.getItem(\"traning_programs\") == null)\r\n    localStorage.setItem(\"traning_programs\", JSON.stringify(DefaultTraningPrograms))\r\n}\r\n\r\nconst router = createHashRouter(\r\n  createRoutesFromElements(\r\n    <Route path=\"/\" element={<Layout />}>\r\n      <Route index element={<TraningScene />} />\r\n      <Route path=\"exercises\" element={<ExercisesScene />} />\r\n      <Route path=\"traning-programs\" element={<TraningProgramScene />} />\r\n      <Route path=\"traning\" element={<TraningScene />} />\r\n      <Route path=\"workout-process/:workoutId\" element={<WorkoutProcessScene />} />\r\n      <Route path=\"progress\" element={<ProgressScene/>} />\r\n      <Route path=\"debug\" element={<DebugScene/>}></Route>\r\n    </Route>\r\n  )\r\n);\r\n\r\nconst App = () => {\r\n  initExercises();\r\n  return (<RouterProvider router={router} />);\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\n// function forceSWupdate () {\r\n//   if ('serviceWorker' in navigator) {\r\n//     navigator.serviceWorker.getRegistrations().then(function (registrations) {\r\n//       for (let registration of registrations) {\r\n//         registration.update()\r\n//       }\r\n//     })\r\n//   }\r\n// }\r\n\r\n// forceSWupdate()\r\n\r\nexport function register(config) {\r\n  if ('serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n// serviceWorkerRegistration.register();\r\n"],"sourceRoot":""}