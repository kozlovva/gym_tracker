{"version":3,"sources":["components/Constants.js","api/TraningProgramAPI.js","components/base/MainButton.js","components/base/Modal.js","api/ExercisesAPI.js","components/service/TraningProgramService.js","components/program/TraningProgramCard.js","api/WorkoutAPI.js","utils/DateUtils.js","components/service/WorkoutService.js","components/base/TextWithIcon.js","components/traning/TraningCard.js","components/base/DateSelector.js","components/scenes/TraningScene.js","components/exercise/ExerciseForm.js","components/exercise/CreateExercise.js","components/base/RemoveEntityButton.js","components/exercise/ExerciseInfo.js","components/exercise/ExerciseList.js","components/scenes/ExercisesScene.js","components/exercise/ExercisesSelector.js","components/base/AddSetButton.js","components/program/SetsTable.js","components/program/TraningProgramForm.js","components/program/CreateTraningProgram.js","components/program/TraningProgramInfo.js","components/program/TraningProgramList.js","components/scenes/TraningProgramScene.js","components/base/Navigation.js","components/base/Layout.js","components/scenes/TraningProcessScene.js","components/base/Chart.js","components/base/ChartCard.js","components/base/CountChart.js","components/base/MultilineChartCard.js","components/service/ProgressService.js","components/scenes/ProgressScene.js","components/scenes/DebugScene.js","components/scenes/AccountScene.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["MuscleGroupsInfo","BICEPS","locale","TRICEPS","QUADS","GLUTES","ABS","CHEST","SHOULDERS","HAMSTRINGS","FOREARMS","NECK","LATS","LOWER_BACK","MIDDLE_BACK","TRAPS","MuscleGroupsEnum","DefaultExercises","id","title","muscle","DefaultModalState","open","type","DefaultTraningPrograms","description","exercises","sets","repeats","weight","complited","GenerateProgramExercise","i","push","completed","GetTraningPrograms","items","localStorage","getItem","JSON","parse","SetTraningPrograms","traningPrograms","console","log","setItem","stringify","MainButton","_ref","_ref2","isBottom","onClick","text","sx","react_default","a","createElement","Box","position","width","bottom","left","right","pl","pr","Object","defineProperty","elevation","Button","variant","fullWidth","color","objectSpread","p","Transition","React","forwardRef","props","ref","Slide","assign","direction","Modal","Dialog","TransitionComponent","PaperProps","height","m","borderBottomRightRadius","borderBottomLeftRadius","DialogTitle","pb","IconButton","aria-label","onClose","top","theme","palette","grey","Close_default","DialogContent","children","GetExercises","SetExercises","GetExercisesByMuscle","filter","exercise","GetExerciseById","find","e","GetTraningProgramById","TraningProgramCard","useTheme","muscleGroups","program","res","_toConsumableArray","Set","map","item","GetUniqueMuscleGroups","join","Paper","_objectSpread","display","minHeight","flexDirection","flexGrow","withCount","Typography","length","alignItems","GetWorkouts","SetWorkouts","PadTo2Digits","num","toString","padStart","FormatDate","date","getFullYear","getUTCMonth","getUTCDate","DatesIsEquals","dateLeft","dateRight","CreateWorkout","selectedProgram","traning","uuidv4","notes","traningProgramId","duration","startAt","endAt","status","rejectCause","volume","progress","Date","set","GetWorkoutById","ById","SaveWorkout","workout","CompleteWorkout","from","to","concat","Math","floor","getTime","reduce","result","CalcExerciseVolume","CalcProgressInPercent","IsNew","IsActive","IsCompleted","workoutExercise","sum","countOfSets","GetWorkoutSetsCount","completedSets","CalcCompletedSets","parseInt","toFixed","TextWithIcon","justifyContent","icon","gutterBottom","mr","ml","mb","lineHeight","animation","keyframes","_templateObject","_taggedTemplateLiteral","StyledCard","styled","Card","backgroundSize","CustomCard","isActive","_useState","useState","_useState2","_slicedToArray","updateProgress","useEffect","backgroundImage","CardActionArea","CardHeader","CardActions","flex","CalendarMonthIcon","AccessTimeIcon","LinearProgress","value","TraningCard","DateSelector","startDaysCount","endDaysCount","selectedDate","onSelectDate","cellRefs","useRef","sliderRef","selectedDateRef","days","now","buffer","subDays","addDays","GetDaysByRange","triggerElementId","updateTriggerElementId","current","alignWeek","element","getDay","triggerElement","document","getElementById","offsetLeft","scrollTo","overflowX","whiteSpace","flexFlow","idx","key","index","el","onTouchEnd","onScroll","replace","borderRadius","backgroundColor","secondary","dark","getDate","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","EmptyResult","TraningScene","todayTranings","setTodayTranings","_useState3","_useState4","traningHistory","setTraningHistory","_useState5","_useState6","isOpen","setIsOpen","_useState7","_useState8","setSelectedDate","navigate","useNavigate","onStart","_asyncToGenerator","_callee","modaType","traningProgram","_context","navigateToWorkout","_x","_x2","_x3","apply","arguments","handleChangeOpen","onChangeModal","align","Grid","container","spacing","xs","Divider","light","mt","newDate","showCount","MenuProps","style","maxHeight","ITEM_HEIGHT","ExerciseFrom","TextField","onChange","label","pt","FormControl","InputLabel","Select","labelId","MenuItem","CreateExercise","Box_Box","flexWrap","ExerciseForm","base_MainButton","onSave","RemoveEntityButton","disableRipple","ExerciseInfo","base_RemoveEntityButton","onRemove","Accordion","MuiAccordion","&:not(:last-child)","borderBottom","AccordionSummary","MuiAccordionSummary","expandIcon","ArrowForwardIosSharpIcon","fontSize","padding","primary","& .MuiAccordionSummary-expandIconWrapper.Mui-expanded","transform","& .MuiAccordionSummary-content","marginLeft","AccordionDetails","MuiAccordionDetails","_ref3","borderTop","ExerciseList","expanded","setExpanded","calcCount","CountExercisesByMuscle","panel","event","newExpanded","ExpandMoreIcon","aria-controls","Badge","showZero","badgeContent","zIndex","stopPropagation","onClickToExercise","textAlign","defaultModalState","ExercisesScene","modalInfo","setModalInfo","selectedItem","setSelectedItem","handleChangeExercise","field","target","closeModal","RemoveExercises","UpdateExercise","AddExercises","ExercisesSelector","ExercisesSelector_AccordionSummary","endIcon","isSelected","Check_default","handleCheckItem","AddSetButton","size","SetsTable","handleChangeInput","handleChangeCompleted","addSet","disableWeigth","disableCompleted","infoMode","inputMode","TableContainer","Table","tableLayout","TableHead","TableRow","TableCell","TableBody","inputProps","Checkbox","disabled","checked","GenerateExercise","TraningProgramForm","selected","setSelected","setOpen","handleChangeRepeats","selectedExercises","setExercises","CreateTraningProgram","program_TraningProgramForm","TraningProgramInfo","TraningProgramList","TraningProgramScene","handleChangeItem","RemoveTraningProgram","UpdateTraningProgram","AddTraningProgram","Navigation","BottomNavigation","activeScene","handleChange","showLabels","BottomNavigationAction","ListAltIcon","FitbitIcon","FitnessCenterIcon","QueryStatsIcon","Person","darkTheme","createTheme","main","contrastText","background","default","typography","fontFamily","Layout","scene","setScene","location","useLocation","path","pathname","substring","includes","CssBaseline","ThemeProvider","component","overflowY","Outlet","newValue","WorkoutProcessScene","workoutId","useParams","updateWorkout","updateTraningProgram","getTargetExerciseById","updateWorkoutFilling","StartWorkout","CustomTooltip","payload","Chart","data","dataKey","ResponsiveContainer","AreaChart","Tooltip","y","content","wrapperStyle","outlineColor","Area","stroke","fill","strokeWidth","ChartCard","maxValue","gap","CountChart","count","fade","Fade","in","timeout","selectedMuscle","setsCount","MultilineChartCard","setSelectedMuscle","setsData","updateSetsData","newData","GetStatisticByPeriod","period","range","dateRange","setDate","GetDateRangeByPeriod","workouts","maxVolume","max","maxDuration","workoutCount","fullCompleteCount","tonnageData","durationData","GetSetsData","allExercisesByMuscleIds","targetSets","flatMap","ProgressScene","updatePeriod","updateFade","statistic","updateStatistic","ToggleButtonGroup","setTimeout","exclusive","ToggleButton","lineDataKeys","DebugScene","window","reload","AccountScene","navigation","router","createHashRouter","createRoutesFromElements","Route","App","RouterProvider","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","createRoot","render","StrictMode"],"mappings":"gRAEaA,EAAmB,CAC5BC,OAAU,CACNC,OAAU,wCAEdC,QAAW,CACPD,OAAU,8CAEdE,MAAS,CACLF,OAAU,sJAEdG,OAAU,CACNH,OAAU,8CAEdI,IAAO,CACHJ,OAAU,kCAEdK,MAAS,CACLL,OAAU,kCAEdM,UAAa,CACTN,OAAU,kCAEdO,WAAc,CACVP,OAAU,0IAEdQ,SAAY,CACRR,OAAU,gEAEdS,KAAQ,CACJT,OAAU,sBAEdU,KAAQ,CACJV,OAAU,gEAEdW,WAAc,CACVX,OAAU,sJAEdY,YAAe,CACXZ,OAAU,mFAEda,MAAS,CACLb,OAAU,qDAILc,EAAmB,CAC5B,SACA,UACA,QACA,SACA,MACA,QACA,YACA,aACA,WACA,OACA,OACA,aACA,cACA,SAGSC,EAAmB,CAC5B,CACIC,GAAM,IACNC,MAAS,8HACTC,OAAU,UAEd,CACIF,GAAM,KACNC,MAAS,iKACTC,OAAU,UAEd,CACIF,GAAM,KACNC,MAAS,yKACTC,OAAU,UAEd,CACIF,GAAM,KACNC,MAAS,2GACTC,OAAU,UAEd,CACIF,GAAM,IACNC,MAAS,gJACTC,OAAU,WAEd,CACIF,GAAM,KACNC,MAAS,6HACTC,OAAU,WAEd,CACIF,GAAM,KACNC,MAAS,kHACTC,OAAU,WAEd,CACIF,GAAM,KACNC,MAAS,wMACTC,OAAU,WAEd,CACIF,GAAM,IACNC,MAAS,uHACTC,OAAU,SAEd,CACIF,GAAM,KACNC,MAAS,0DACTC,OAAU,SAEd,CACIF,GAAM,KACNC,MAAS,+KACTC,OAAU,SAEd,CACIF,GAAM,KACNC,MAAS,+FACTC,OAAU,SAEd,CACIF,GAAM,IACNC,MAAS,wHACTC,OAAU,UAEd,CACIF,GAAM,KACNC,MAAS,kFACTC,OAAU,UAEd,CACIF,GAAM,KACNC,MAAS,wPACTC,OAAU,UAEd,CACIF,GAAM,KACNC,MAAS,4LACTC,OAAU,UAEd,CACIF,GAAM,IACNC,MAAS,sJACTC,OAAU,OAEd,CACIF,GAAM,KACNC,MAAS,qLACTC,OAAU,OAEd,CACIF,GAAM,IACNC,MAAS,sGACTC,OAAU,SAEd,CACIF,GAAM,KACNC,MAAS,+MACTC,OAAU,SAEd,CACIF,GAAM,KACNC,MAAS,6CACTC,OAAU,SAEd,CACIF,GAAM,IACNC,MAAS,2IACTC,OAAU,aAEd,CACIF,GAAM,KACNC,MAAS,4EACTC,OAAS,aAEb,CACIF,GAAM,KACNC,MAAS,+FACTC,OAAU,aAEd,CACIF,GAAM,IACNC,MAAS,kFACTC,OAAU,cAEd,CACIF,GAAM,IACNC,MAAS,kFACTC,OAAU,YAEd,CACIF,GAAM,KACNC,MAAS,oIACTC,OAAU,QAEd,CACIF,GAAM,KACNC,MAAS,2EACTC,OAAU,QAEd,CACIF,GAAM,KACNC,MAAS,yDACTC,OAAU,cAEd,CACIF,GAAM,KACNC,MAAS,qGACTC,OAAU,eAEd,CACIF,GAAM,KACNC,MAAS,+FACTC,OAAU,UAeLC,EAAoB,CAC7BC,MAAM,EACNC,KAAM,KACNJ,MAAO,MAYEK,EAAyB,CAClC,CACIN,GAAM,IACNC,MAAS,sEACTM,YAAe,GACfC,UAAa,CACT,CACIR,GAAM,IACNS,KAAQ,CACJ,CACIC,QAAS,GACTC,OAAQ,EACRC,WAAW,GAEf,CACIF,QAAS,GACTC,OAAQ,EACRC,WAAW,GAEf,CACIF,QAAS,GACTC,OAAQ,EACRC,WAAW,GAEf,CACIF,QAAS,GACTC,OAAQ,EACRC,WAAW,QAqCtBC,EAA0B,SAAAb,GAGnC,IAFA,IACIS,EAAO,GACFK,EAAI,EAAGA,EAFD,EAEaA,IACxBL,EAAKM,KAXF,CACHL,QAAS,GACTC,OAAQ,EACRK,WAAW,IAUf,MAAO,CACHhB,GAAIA,EACJS,KAAMA,uEChUDQ,EAAqB,WAC9B,IAAIC,EAAQC,aAAaC,QAAQ,oBACjC,OAAgB,MAATF,EAAgBG,KAAKC,MAAMJ,GAAS,IAGlCK,EAAqB,SAACC,GAC/BC,QAAQC,IAAI,8CACZP,aAAaQ,QAAQ,mBAAoBN,KAAKO,UAAUJ,6BCsB7CK,EA1BI,SAAHC,GAAsC,IAAAC,EAAjCC,EAAQF,EAARE,SAAUC,EAAOH,EAAPG,QAASC,EAAIJ,EAAJI,KAAMC,EAAEL,EAAFK,GAC1C,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAG,CAACJ,IAAEJ,EAAA,CACVS,SAAU,QACVC,MAAO,OACPC,OAAQV,EAAW,EAAI,GACvBW,KAAM,EACNC,MAAO,EACPC,GAAI,EACJC,GAAI,GAACC,OAAAC,EAAA,EAAAD,CAAAhB,EAAA,OACC,OAAKgB,OAAAC,EAAA,EAAAD,CAAAhB,EAAA,YACA,yBAAuBA,GACnCkB,UAAW,GACVb,EAAAC,EAAAC,cAACY,EAAA,EAAM,CACHC,QAAQ,YACRC,WAAS,EACTC,MAAM,YACNlB,GAAEY,OAAAO,EAAA,EAAAP,CAAA,CACEQ,EAAG,GACApB,GAEPF,QAASA,GACRC,oECnBPsB,EAAaC,IAAMC,WAAW,SAACC,EAAOC,GACxC,OAAOxB,EAAAC,EAAAC,cAACuB,EAAA,EAAKd,OAAAe,OAAA,CAACC,UAAU,KAAKH,IAAKA,GAASD,MAuChCK,EApCD,SAACL,GACX,OAAOvB,EAAAC,EAAAC,cAAC2B,EAAA,EAAM,CACV7D,KAAMuD,EAAMvD,KACZ8D,oBAAqBV,EACrBW,WAAY,CACRhC,GAAI,CACAiC,OAAQ,OACR3B,MAAO,OACP4B,EAAG,EACH7B,SAAU,QACVE,OAAQ,EACR4B,wBAAyB,EACzBC,uBAAwB,KAGhCnC,EAAAC,EAAAC,cAACkC,EAAA,EAAW,CAACrC,GAAI,CAACsC,GAAG,IAChBd,EAAM1D,MACPmC,EAAAC,EAAAC,cAACoC,EAAA,EAAU,CACPC,aAAW,QACX1C,QAAS0B,EAAMiB,QACfzC,GAAI,CACAK,SAAU,WACVI,MAAO,EACPiC,IAAK,EACLxB,MAAO,SAACyB,GAAK,OAAKA,EAAMC,QAAQC,KAAK,QAGzC5C,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAS,QAGlBD,EAAAC,EAAAC,cAAC4C,EAAA,EAAa,CAAC/C,GAAI,IACdwB,EAAMwB,8CCxCNC,EAAe,WACxB,IAAIlE,EAAQC,aAAaC,QAAQ,aACjC,OAAOC,KAAKC,MAAMJ,IAGTmE,EAAe,SAAA7E,GACxBiB,QAAQC,IAAI,wCACZP,aAAaQ,QAAQ,YAAaN,KAAKO,UAAUpB,KAGxC8E,EAAuB,SAAApF,GAEhC,OADckF,IACDG,OAAO,SAAAC,GAAQ,OAAIA,EAAStF,QAAUA,KA6B1CuF,EAAkB,SAAAzF,GAE3B,OADkBoF,IACDM,KAAK,SAAAC,GAAC,OAAIA,EAAE3F,IAAMA,KCxC1B4F,EAAwB,SAAA5F,GACjC,OAAOiB,IAAqByE,KAAK,SAAAC,GAAC,OAAIA,EAAE3F,IAAMA,KC4BnC6F,EA1BY,SAAClC,GACVmC,cAAd,IACMC,EDD2B,SAAAC,GACjC,IAAMC,EAAGC,YAAO,IAAIC,IAAIH,EAAQxF,UAAU4F,IAAI,SAAAC,GAE1C,OADiBZ,EAAgBY,EAAKrG,IACtBE,WAGpB,OADAuB,QAAQC,IAAIuE,GACLA,ECLcK,CAAsB3C,EAAM0C,MAC5CD,IAAI,SAAAC,GAAI,OAAIvH,EAAiBuH,GAAQvH,EAAiBuH,GAAMrH,OAAS,KACrEuH,OACL,OAAO9C,IAAAnB,cAACkE,IAAK,CACTrE,GAAEsE,YAAA,CACEC,QAAS,OACTC,UAAW,QACXC,cAAe,SACfrD,EAAG,GACAI,EAAMxB,IAEbF,QAAS,SAAC0D,GAAC,OAAKhC,EAAM1B,QAAQ0D,EN2MT,OM3M2BhC,EAAM0C,QACtD5C,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAE0E,SAAU,IAChBlD,EAAMmD,WAAarD,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,UAAUE,MAAM,aAAY,gEAAYM,EAAM0C,KAAK7F,UAAUwG,QAAU,IAEnHvD,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAE0E,SAAU,IACjBpD,IAAAnB,cAACyE,IAAU,KAAEpD,EAAM0C,KAAKpG,QAE5BwD,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAE0E,SAAU,EAAGH,QAAS,OAAQO,WAAY,QACjDxD,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,UAAUE,MAAM,aAAa0C,MCzBhDmB,EAAc,WACvB,IAAIhG,EAAQC,aAAaC,QAHR,WAIjB,OAAOF,EAAQG,KAAKC,MAAMJ,GAAS,IAI1BiG,EAAc,SAAAjG,GACvBC,aAAaQ,QATI,UASkBN,KAAKO,UAAUV,uBCPhDkG,EAAe,SAACC,GAClB,OAAOA,EAAIC,WAAWC,SAAS,EAAG,MAmBzBC,EAAa,SAACC,GACvB,MACI,CACIA,EAAKC,cACLN,EAAaK,EAAKE,cAAgB,GAClCP,EAAaK,EAAKG,eACpBrB,KAAK,MAsCFsB,GAAgB,SAACC,EAAUC,GACpC,OAAOP,EAAWM,IAAaN,EAAWO,IC/DjCC,GAAgB,SAACC,GAC1B,IAAMC,ETwRC,CACHlI,GAAMmI,cACNC,MAAS,GACTC,iBAAoB,GACpBC,SAAY,GACZC,QAAW,GACXC,MAAS,GACThI,UAAa,GACbiI,OAAU,SACVC,YAAe,GACfC,OAAU,EACVC,SAAY,GSlShBV,EAAQG,iBAAmBJ,EAAgBjI,GAC3CkI,EAAQK,QAAU,IAAIM,KAEtBX,EAAQ1H,UAAYyH,EAAgBzH,UAAU4F,IAAI,SAAAZ,GAE9C,MAAO,CACHxF,GAAIwF,EAASxF,GACbS,KAAM+E,EAAS/E,KAAK2F,IAAI,SAAA0C,GACpB,MAAO,CACHpI,QAASoI,EAAIpI,QACbC,OAAQ,EACRK,WAAW,QAM3B,IAAME,EAAQgG,IAGd,OAFAhG,EAAMH,KAAKmH,GACXf,EAAYjG,GACLgH,GAkBEa,GAAiB,SAAA/I,GAC1B,OFjC0B,SAAAA,GAC1B,OAAOkH,IAAcxB,KAAK,SAAAC,GAAC,OAAIA,EAAE3F,IAAMA,IEgChCgJ,CAAKhJ,IAGHiJ,GAAc,SAAAC,GACvB,IAAMhI,EAAQgG,IACdC,EAAYjG,EAAMkF,IAAI,SAAAC,GAClB,OAAOA,EAAKrG,IAAMkJ,EAAQlJ,GAAKkJ,EAAU7C,MAWpC8C,GAAkB,SAAAD,GD9BI,IAACE,EAAMC,ECsCtC,OAPAH,EAAQV,MAAQ,IAAIK,KACpBK,EAAQT,OAAS,YACjBS,EAAQZ,UDjCwBc,ECiCO,IAAIP,KAAKK,EAAQX,SDjClBc,ECiC4BH,EAAQV,MDhC1E/G,QAAQC,IAAG,QAAA4H,OAASF,EAAI,UAAAE,OAASD,IAC1BE,KAAKC,OAAOH,EAAGI,UAAYL,EAAKK,WAAa,IAAO,KCgC3DP,EAAQP,OAASO,EAAQ1I,UACpBkJ,OAAO,SAACC,EAAQnE,GAAQ,OAAKmE,EAASC,GAAmBpE,IAAW,GACzE0D,EAAQN,SAAWiB,GAAsBX,GACzCD,GAAYC,GACLA,GAWEY,GAAQ,SAAAZ,GACjB,MAAyB,OAAlBA,EAAQT,QAGNsB,GAAW,SAAAb,GACpB,MAAyB,UAAlBA,EAAQT,QAGNuB,GAAc,SAAAd,GACvB,MAAyB,aAAlBA,EAAQT,QAGNmB,GAAqB,SAAAK,GAI9B,OAHaA,EAAgBxJ,KACxB8E,OAAO,SAAAuD,GAAG,OAAIA,EAAI9H,YAClB0I,OAAO,SAACQ,EAAKpB,GAAG,OAAKoB,EAAMpB,EAAIpI,QAAUoI,EAAInI,QAAQ,IAIjDkJ,GAAwB,SAAAX,GACjC,IAAIiB,EAAcC,GAAoBlB,GAClCmB,EAAgBnB,EAAQ1I,UAAUkJ,OAAO,SAACC,EAAQnE,GAAQ,OAAKmE,EAASW,GAAkB9E,IAAW,GACzG,OAAO+E,UAAWF,EAAgBF,EAAe,KAAKK,QAAQ,KAGrDF,GAAoB,SAAAL,GAC7B,OAAOA,EAAgBxJ,KAAK8E,OAAO,SAAAuD,GAAG,OAAIA,EAAI9H,YAAWgG,QAGhDoD,GAAsB,SAAAlB,GAC/B,OAAOA,EAAQ1I,UAAUkJ,OAAO,SAACC,EAAQnE,GAAQ,OAAKmE,EAASnE,EAAS/E,KAAKuG,QAAQ,0HCrG1EyD,GAPM,SAAC9G,GAClB,OAAOF,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQO,WAAY,SAAUyD,eAAgB,WACpE/G,EAAMgH,KACPlH,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,UAAUyH,cAAY,EAACzI,GAAI,CAAE0I,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,WAAY,IAAMrH,EAAMzB,QCIhG+I,GAAYC,aAASC,MAAAC,aAAA,gJAgBrBC,GAAaC,aAAOC,KAAPD,CAAa,SAAAxJ,GAAQA,EAALgD,MAAK,MAAQ,CAC5CmG,UAAS,GAAA3B,OAAK2B,GAAS,qBACvBO,eAAgB,eAGdC,GAAa,SAAA9H,GACDmC,cAAd,IACM4F,EAA4B,WAAjB/H,EAAM8E,OAAoBkD,EACRC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAvC/C,EAAQiD,EAAA,GAAEE,EAAcF,EAAA,GAO/B,OANAG,oBAAU,WACFN,GACAK,EAAelC,GAAsBlG,KAC1C,CAACA,IAEJlC,QAAQC,IAAI,WAAYkH,GACjBnF,IAAAnB,cAAC+I,GAAU,CACdpJ,QAAS0B,EAAM1B,QACfE,GAAEsE,YAAA,CACEC,QAAS,OACTuF,gBAAiBP,EAAW,mDAAqD,QAC9E/H,EAAMxB,KAEbsB,IAAAnB,cAAC4J,KAAc,KACXzI,IAAAnB,cAAC6J,KAAU,CAAClM,MAAO0D,EAAM1D,QAEzBwD,IAAAnB,cAAC8J,KAAW,CAACjK,GAAI,CAAEuI,eAAgB,WAAYnH,EAAG,IAC9CE,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQE,cAAe,SAAUyF,KAAM,eAEzDX,GAAYjI,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQO,WAAY,SAAUpE,GAAI,IAChEY,IAAAnB,cAACmI,GAAY,CACTE,KAAMlH,IAAAnB,cAACgK,KAAiB,MACxBpK,KAAMsF,EAAW,IAAIqB,KAAKlF,EAAM4E,YACpC9E,IAAAnB,cAACmI,GAAY,CACTE,KAAMlH,IAAAnB,cAACiK,KAAc,MACrBrK,KAAI,GAAAoH,OAAK3F,EAAM2E,SAAQ,2BAE9BoD,GAAYjI,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEM,MAAO,OAAQD,SAAU,WAAYE,OAAQ,EAAGE,MAAO,IAC3Ea,IAAAnB,cAACkK,KAAc,CAACrJ,QAAQ,cAAcsJ,MAAO7D,EAAUzG,GAAI,CACvDiC,OAAQ,WASjBsI,GAnDK,SAAC/I,GACjB,OAAOF,IAAAnB,cAACmJ,GAAe9H,aCyGZgJ,GAxHM,SAAH7K,GAAqE,IAA/D8K,EAAc9K,EAAd8K,eAAgBC,EAAY/K,EAAZ+K,aAAcC,EAAYhL,EAAZgL,aAAcC,EAAYjL,EAAZiL,aAC1DC,EAAWC,iBAAO,IAClBC,EAAYD,iBAAO,MACnBE,EAAkBF,iBAAO,MACzBnI,EAAQgB,eACRsH,EJuCoB,SAACR,EAAgBC,GAM3C,IALA,IAAMQ,EAAM,IAAIxE,KACVyE,EAASC,YAAQF,EAAKT,GAEtBjD,EAAS,GAEP7I,EAAI,EAAGA,GAAI8L,EAAiBC,EAAc/L,IAC9C6I,EAAO5I,KAAKyM,YAAQF,EAAQxM,IAGhC,OAAO6I,EIjDM8D,CAAeb,EAAgBC,GAAclB,EAEPC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA1D+B,EAAgB7B,EAAA,GAAE8B,EAAsB9B,EAAA,GAE/CG,oBAAU,WACN2B,EAAuBR,EAAgBS,QAAQ5N,KAChD,CAAC8M,IAEJd,oBAAU,WACkB,MAApB0B,GACAG,KACL,CAACH,IAEJ,IAAMG,EAAY,WACd,IAAMC,EAAmC,GAAzBhB,EAAaiB,SAAgBf,EAASY,QAAQ,GAAKZ,EAASY,QAAQd,EAAaiB,SAAW,GACtGC,EAAiBC,SAASC,eAAeR,GAC/CjM,QAAQC,IAAIsL,GACZvL,QAAQC,IAAIsM,EAAeG,YAC3BjB,EAAUU,QAAQQ,SAASJ,EAAeG,WAAaL,EAAQK,WAAY,IAU/E,OAAO1K,IAAAnB,cAAA,WACHmB,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CACLoB,EAAG,EACHmD,QAAS,OACTjE,MAAO,OACP4L,UAAW,SACXC,WAAY,SACZ1H,cAAe,SACf2H,SAAU,aAEV9K,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CACLuE,QAAS,OACTgE,eAAgB,eAChBzD,WAAY,SACZxE,MAAO,SAEN,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,sBAAO2D,IAAI,SAACqB,EAAM+G,GAAG,OAAK/K,IAAAnB,cAACC,IAAG,CAACkM,IAAKD,EAAKrM,GAAI,CAC/EuE,QAAS,OACTnD,EAAG,EACHd,MAAO,iBACPiI,eAAgB,SAChBzD,WAAY,WAEZxD,IAAAnB,cAACyE,IAAU,CAAC1D,MAAM,aAAaoE,OAGvChE,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CACLuE,QAAS,OACTgE,eAAgB,eAChBzD,WAAY,SACZxE,MAAO,OACP2B,OAAQ,OACR5B,SAAU,aAET,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG4D,IAAI,SAACsI,EAAOF,GAAG,OAAK/K,IAAAnB,cAACC,IAAG,CAACqB,IAAK,SAAA+K,GAAE,OAAI3B,EAASY,QAAQY,GAAOG,GAAIF,IAAKD,EAAKrM,GAAI,CACjGuE,QAAS,OACTnD,EAAG,EACHd,MAAO,iBACP2B,OAAQ,OACRsG,eAAgB,SAChBzD,WAAY,cAGhBxD,IAAAnB,cAACC,IAAG,CAACqB,IAAKsJ,EACN0B,WAAYf,EACZgB,SApDC,WACO7B,EAASY,QAAQ,GACdK,SAASC,eAAeR,GACjCA,EAAiBoB,QAAQ,MAAO,KAkDlC3M,GAAI,CACAK,SAAU,WACVE,OAAQ,EACRD,MAAO,OACP2B,OAAQ,OACRiK,UAAW,WAEdjB,EAAKhH,IAAI,SAACqB,EAAMiH,GAAK,OAAKjL,IAAAnB,cAACC,IAAG,CAC3BvC,GAAE,GAAAsJ,OAzFR,mBAyFsB,KAAAA,OAAIoF,GACpB9K,IAAK,SAAC+K,GACE9G,GAAciF,EAAcrF,KAC5B0F,EAAgBS,QAAUe,IAElCF,IAAKC,EACLvM,GAAI,CACAuE,QAAS,eACTnD,EAAG,EACHd,MAAO,iBACP2B,OAAQ,OACRsG,eAAgB,SAChBzD,WAAY,UAEhBhF,QAAS,kBAAM8K,EAAatF,KAC5BhE,IAAAnB,cAACC,IAAG,CACAJ,GAAI,CACAuE,QAAS,OACTtC,OAAQ,OACRsG,eAAgB,SAChBzD,WAAY,SACZ8H,aAAc,MACdC,gBAAiBnH,GAAciF,EAAcrF,GAAQ3C,EAAMC,QAAQkK,UAAUC,KAAO,cAExFzL,IAAAnB,cAACyE,IAAU,CAAC1D,MAAM,YAAYF,QAAQ,WAAWsE,EAAK0H,kCCtHlFC,GAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAvM,OAAAwM,UAAAC,EAAAF,EAAAG,eAAAzM,EAAAD,OAAAC,gBAAA,SAAA0M,EAAAjB,EAAAkB,GAAAD,EAAAjB,GAAAkB,EAAAlD,OAAAmD,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAV,EAAAjB,EAAAhC,GAAA,OAAA1J,OAAAC,eAAA0M,EAAAjB,EAAA,CAAAhC,QAAA4D,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAAjB,GAAA,IAAA2B,EAAA,aAAAI,GAAAJ,EAAA,SAAAV,EAAAjB,EAAAhC,GAAA,OAAAiD,EAAAjB,GAAAhC,GAAA,SAAAgE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAApB,qBAAAwB,EAAAJ,EAAAI,EAAAC,EAAAjO,OAAAkO,OAAAH,EAAAvB,WAAA2B,EAAA,IAAAC,EAAAN,GAAA,WAAA7N,EAAAgO,EAAA,WAAAvE,MAAA2E,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA5B,EAAA6B,GAAA,WAAAlR,KAAA,SAAAkR,IAAAD,EAAAE,KAAA9B,EAAA6B,IAAA,MAAAf,GAAA,OAAAnQ,KAAA,QAAAkR,IAAAf,IAAAnB,EAAAoB,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,EAAA,kBAAA+B,OAAA,IAAAC,EAAA/O,OAAAgP,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1C,GAAAE,EAAAgC,KAAAQ,EAAAlC,KAAA8B,EAAAI,GAAA,IAAAE,EAAAP,EAAApC,UAAAwB,EAAAxB,UAAAxM,OAAAkO,OAAAW,GAAA,SAAAO,EAAA5C,GAAA,0BAAA6C,QAAA,SAAAC,GAAAjC,EAAAb,EAAA8C,EAAA,SAAAd,GAAA,OAAAM,KAAAS,QAAAD,EAAAd,OAAA,SAAAgB,EAAAvB,EAAAwB,GAAA,IAAAC,EAAAzP,EAAA6O,KAAA,WAAApF,MAAA,SAAA4F,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAL,EAAAqB,GAAArB,EAAAO,GAAA,aAAAuB,EAAAzS,KAAA,KAAAsJ,EAAAmJ,EAAAvB,IAAA9E,EAAA9C,EAAA8C,MAAA,OAAAA,GAAA,iBAAAA,GAAA+C,EAAAgC,KAAA/E,EAAA,WAAA+F,EAAAG,QAAAlG,EAAAsG,SAAAC,KAAA,SAAAvG,GAAAoG,EAAA,OAAApG,EAAAkG,EAAAC,IAAA,SAAApC,GAAAqC,EAAA,QAAArC,EAAAmC,EAAAC,KAAAJ,EAAAG,QAAAlG,GAAAuG,KAAA,SAAAC,GAAAtJ,EAAA8C,MAAAwG,EAAAN,EAAAhJ,IAAA,SAAAuJ,GAAA,OAAAL,EAAA,QAAAK,EAAAP,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAO,KAAAN,YAAA,SAAAtB,EAAAV,EAAAE,EAAAM,GAAA,IAAAiC,EAAA,iCAAAd,EAAAd,GAAA,iBAAA4B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAd,EAAA,MAAAd,EAAA,OAAA8B,IAAA,IAAAnC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,GAAA,YAAArC,EAAAmB,OAAAnB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAc,EAAA,MAAAA,EAAA,YAAAjC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA4B,EAAA,gBAAAL,EAAAzB,EAAAX,EAAAE,EAAAM,GAAA,cAAA4B,EAAAzS,KAAA,IAAA8S,EAAAjC,EAAA2C,KAAA,6BAAAf,EAAAvB,MAAAE,EAAA,gBAAAhF,MAAAqG,EAAAvB,IAAAsC,KAAA3C,EAAA2C,MAAA,UAAAf,EAAAzS,OAAA8S,EAAA,YAAAjC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAiC,EAAAF,EAAApC,GAAA,IAAA4C,EAAA5C,EAAAmB,SAAAiB,EAAAvD,SAAA+D,GAAA,QAAAC,IAAA1B,EAAA,OAAAnB,EAAAoC,SAAA,eAAAQ,GAAAR,EAAAvD,SAAAiE,SAAA9C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAwC,EAAAP,EAAAF,EAAApC,GAAA,UAAAA,EAAAmB,SAAA,WAAAyB,IAAA5C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA0C,UAAA,oCAAAH,EAAA,aAAArC,EAAA,IAAAqB,EAAAzB,EAAAgB,EAAAiB,EAAAvD,SAAAmB,EAAAK,KAAA,aAAAuB,EAAAzS,KAAA,OAAA6Q,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAyC,EAAApB,EAAAvB,IAAA,OAAA2C,IAAAL,MAAA3C,EAAAoC,EAAAa,YAAAD,EAAAzH,MAAAyE,EAAAkD,KAAAd,EAAAe,QAAA,WAAAnD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAwC,GAAA7C,EAAAoC,SAAA,KAAA7B,GAAAyC,GAAAhD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA0C,UAAA,oCAAA/C,EAAAoC,SAAA,KAAA7B,GAAA,SAAA6C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA1C,KAAAgD,WAAA9T,KAAAyT,GAAA,SAAAM,EAAAN,GAAA,IAAA1B,EAAA0B,EAAAO,YAAA,GAAAjC,EAAAzS,KAAA,gBAAAyS,EAAAvB,IAAAiD,EAAAO,WAAAjC,EAAA,SAAA3B,EAAAN,GAAAgB,KAAAgD,WAAA,EAAAJ,OAAA,SAAA5D,EAAAuB,QAAAkC,EAAAzC,WAAAmD,OAAA,YAAA/C,EAAAgD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAnF,GAAA,GAAAoF,EAAA,OAAAA,EAAA1D,KAAAyD,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAAjO,QAAA,KAAAlG,GAAA,EAAAsT,EAAA,SAAAA,IAAA,OAAAtT,EAAAmU,EAAAjO,QAAA,GAAAwI,EAAAgC,KAAAyD,EAAAnU,GAAA,OAAAsT,EAAA3H,MAAAwI,EAAAnU,GAAAsT,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3H,WAAAsH,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5G,WAAAsH,EAAAF,MAAA,UAAAnC,EAAAnC,UAAAoC,EAAA3O,EAAAkP,EAAA,eAAAzF,MAAAkF,EAAArB,cAAA,IAAAtN,EAAA2O,EAAA,eAAAlF,MAAAiF,EAAApB,cAAA,IAAAoB,EAAA0D,YAAAhF,EAAAuB,EAAAzB,EAAA,qBAAAb,EAAAgG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAE,QAAApG,EAAAqG,KAAA,SAAAJ,GAAA,OAAAvS,OAAA4S,eAAA5S,OAAA4S,eAAAL,EAAA3D,IAAA2D,EAAAM,UAAAjE,EAAAvB,EAAAkF,EAAApF,EAAA,sBAAAoF,EAAA/F,UAAAxM,OAAAkO,OAAAiB,GAAAoD,GAAAjG,EAAAwG,MAAA,SAAAtE,GAAA,OAAAwB,QAAAxB,IAAAY,EAAAI,EAAAhD,WAAAa,EAAAmC,EAAAhD,UAAAS,EAAA,kBAAA6B,OAAAxC,EAAAkD,gBAAAlD,EAAAyG,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAA2B,QAAA,IAAAA,MAAAuD,SAAA,IAAAC,EAAA,IAAAzD,EAAA9B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA2B,GAAA,OAAAnD,EAAAgG,oBAAA1E,GAAAqF,IAAA5B,OAAApB,KAAA,SAAArJ,GAAA,OAAAA,EAAAkK,KAAAlK,EAAA8C,MAAAuJ,EAAA5B,UAAAjC,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,EAAA,kBAAA+B,OAAAzB,EAAA8B,EAAA,mDAAA7C,EAAA4G,KAAA,SAAAC,GAAA,IAAAC,EAAApT,OAAAmT,GAAAD,EAAA,WAAAxH,KAAA0H,EAAAF,EAAAlV,KAAA0N,GAAA,OAAAwH,EAAAG,UAAA,SAAAhC,IAAA,KAAA6B,EAAAjP,QAAA,KAAAyH,EAAAwH,EAAAI,MAAA,GAAA5H,KAAA0H,EAAA,OAAA/B,EAAA3H,MAAAgC,EAAA2F,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAA/E,EAAA4C,SAAAd,EAAA5B,UAAA,CAAAiG,YAAArE,EAAA6D,MAAA,SAAAsB,GAAA,GAAAzE,KAAA0E,KAAA,EAAA1E,KAAAuC,KAAA,EAAAvC,KAAA4B,KAAA5B,KAAA6B,WAAAK,EAAAlC,KAAAgC,MAAA,EAAAhC,KAAAyB,SAAA,KAAAzB,KAAAQ,OAAA,OAAAR,KAAAN,SAAAwC,EAAAlC,KAAAgD,WAAAzC,QAAA0C,IAAAwB,EAAA,QAAAb,KAAA5D,KAAA,MAAA4D,EAAAe,OAAA,IAAAhH,EAAAgC,KAAAK,KAAA4D,KAAAN,OAAAM,EAAAgB,MAAA,MAAA5E,KAAA4D,QAAA1B,IAAA2C,KAAA,WAAA7E,KAAAgC,MAAA,MAAA8C,EAAA9E,KAAAgD,WAAA,GAAAE,WAAA,aAAA4B,EAAAtW,KAAA,MAAAsW,EAAApF,IAAA,OAAAM,KAAA+E,MAAAjD,kBAAA,SAAAkD,GAAA,GAAAhF,KAAAgC,KAAA,MAAAgD,EAAA,IAAA3F,EAAAW,KAAA,SAAAiF,EAAAC,EAAAC,GAAA,OAAAlE,EAAAzS,KAAA,QAAAyS,EAAAvB,IAAAsF,EAAA3F,EAAAkD,KAAA2C,EAAAC,IAAA9F,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAwC,KAAAiD,EAAA,QAAAlW,EAAA+Q,KAAAgD,WAAA7N,OAAA,EAAAlG,GAAA,IAAAA,EAAA,KAAA0T,EAAA3C,KAAAgD,WAAA/T,GAAAgS,EAAA0B,EAAAO,WAAA,YAAAP,EAAAC,OAAA,OAAAqC,EAAA,UAAAtC,EAAAC,QAAA5C,KAAA0E,KAAA,KAAAU,EAAAzH,EAAAgC,KAAAgD,EAAA,YAAA0C,EAAA1H,EAAAgC,KAAAgD,EAAA,iBAAAyC,GAAAC,EAAA,IAAArF,KAAA0E,KAAA/B,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,MAAA7C,KAAA0E,KAAA/B,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,iBAAA,GAAAsC,GAAA,GAAApF,KAAA0E,KAAA/B,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,YAAAwC,EAAA,UAAA9D,MAAA,6CAAAvB,KAAA0E,KAAA/B,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,gBAAAf,OAAA,SAAAvT,EAAAkR,GAAA,QAAAzQ,EAAA+Q,KAAAgD,WAAA7N,OAAA,EAAAlG,GAAA,IAAAA,EAAA,KAAA0T,EAAA3C,KAAAgD,WAAA/T,GAAA,GAAA0T,EAAAC,QAAA5C,KAAA0E,MAAA/G,EAAAgC,KAAAgD,EAAA,eAAA3C,KAAA0E,KAAA/B,EAAAG,WAAA,KAAAwC,EAAA3C,EAAA,OAAA2C,IAAA,UAAA9W,GAAA,aAAAA,IAAA8W,EAAA1C,QAAAlD,MAAA4F,EAAAxC,aAAAwC,EAAA,UAAArE,EAAAqE,IAAApC,WAAA,UAAAjC,EAAAzS,OAAAyS,EAAAvB,MAAA4F,GAAAtF,KAAAQ,OAAA,OAAAR,KAAAuC,KAAA+C,EAAAxC,WAAAlD,GAAAI,KAAAuF,SAAAtE,IAAAsE,SAAA,SAAAtE,EAAA8B,GAAA,aAAA9B,EAAAzS,KAAA,MAAAyS,EAAAvB,IAAA,gBAAAuB,EAAAzS,MAAA,aAAAyS,EAAAzS,KAAAwR,KAAAuC,KAAAtB,EAAAvB,IAAA,WAAAuB,EAAAzS,MAAAwR,KAAA+E,KAAA/E,KAAAN,IAAAuB,EAAAvB,IAAAM,KAAAQ,OAAA,SAAAR,KAAAuC,KAAA,kBAAAtB,EAAAzS,MAAAuU,IAAA/C,KAAAuC,KAAAQ,GAAAnD,GAAA4F,OAAA,SAAA1C,GAAA,QAAA7T,EAAA+Q,KAAAgD,WAAA7N,OAAA,EAAAlG,GAAA,IAAAA,EAAA,KAAA0T,EAAA3C,KAAAgD,WAAA/T,GAAA,GAAA0T,EAAAG,eAAA,OAAA9C,KAAAuF,SAAA5C,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAA/C,IAAA6F,MAAA,SAAA7C,GAAA,QAAA3T,EAAA+Q,KAAAgD,WAAA7N,OAAA,EAAAlG,GAAA,IAAAA,EAAA,KAAA0T,EAAA3C,KAAAgD,WAAA/T,GAAA,GAAA0T,EAAAC,WAAA,KAAA3B,EAAA0B,EAAAO,WAAA,aAAAjC,EAAAzS,KAAA,KAAAkX,EAAAzE,EAAAvB,IAAAuD,EAAAN,GAAA,OAAA+C,GAAA,UAAAnE,MAAA,0BAAAoE,cAAA,SAAAvC,EAAAd,EAAAE,GAAA,OAAAxC,KAAAyB,SAAA,CAAAvD,SAAAkC,EAAAgD,GAAAd,aAAAE,WAAA,SAAAxC,KAAAQ,SAAAR,KAAAN,SAAAwC,GAAAtC,IAAApC,EAWA,IAAMoI,GAAc,WAAH,OAAShU,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQgE,eAAgB,SAAUzD,WAAY,SAAU1D,EAAG,IACrGE,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,WAAU,8GAmHnBuU,GAhHa,SAAA/T,GAAS,IAAAgI,EACSC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/CgM,EAAa9L,EAAA,GAAE+L,EAAgB/L,EAAA,GAAAgM,EACMjM,mBAAS,IAAGkM,EAAAhM,YAAA+L,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAAAG,EACZrM,oBAAS,GAAMsM,EAAApM,YAAAmM,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAAAG,EACgBzM,mBAAS,IAAI/C,MAAOyP,EAAAxM,YAAAuM,EAAA,GAArDvL,EAAYwL,EAAA,GAAEC,EAAeD,EAAA,GAC9BE,EAAWC,cAEjBzM,oBAAU,WACN,IAAM2L,EJMHzQ,IACF3B,OAAO,SAAAI,GAAC,OAAIoE,GAASpE,KINtBiS,EAAiBD,IAClB,IAEH3L,oBAAU,WACNvK,QAAQC,IAAIoL,GACZ,IJI0BrF,EIJpBsQ,GJIoBtQ,EIJeqF,EJKtC5F,IACF3B,OAAO,SAAAI,GACJ,QAAKoE,GAASpE,KAAMkC,GAAc,IAAIgB,KAAKlD,EAAE4C,SAAUd,OIN3DuQ,EAAkBD,IACnB,CAACjL,IAEJ,IAAM4L,EAAO,eAAA5W,EAAA6W,YAAAvJ,KAAAsG,KAAG,SAAAkD,EAAOjT,EAAGkT,EAAUC,GAAc,IAAA5P,EAAA,OAAAkG,KAAAqB,KAAA,SAAAsI,GAAA,cAAAA,EAAAxC,KAAAwC,EAAA3E,MAAA,cAAA2E,EAAA3E,KAAA,EACxBpM,GAAc8Q,GAAe,OAA7C5P,EAAO6P,EAAAtF,KACbuF,EAAkB9P,EAAQlJ,IAAG,wBAAA+Y,EAAArC,SAAAkC,MAChC,gBAHYK,EAAAC,EAAAC,GAAA,OAAArX,EAAAsX,MAAAvH,KAAAwH,YAAA,GAKPC,EAAmB,WACrBlB,GAAWD,IAOToB,EAAgB,WAHlBD,KAWEN,EAAoB,SAAAhZ,GACtBwY,EAAQ,oBAAAlP,OAAqBtJ,KAOjC,OAAOyD,IAAAnB,cAAA,WACHmB,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,KAAKqW,MAAM,UAAS,mFACxC/V,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQgE,eAAgB,SAAUzD,WAAY,SAAU1D,EAAG,IAC3EE,IAAAnB,cAACyE,IAAU,KAAC,qDAEf4Q,EAAc3Q,OAAS,EAClBvD,IAAAnB,cAACmX,IAAI,CAACC,WAAS,EAACC,QAAS,GACtBhC,EAAcvR,IAAI,SAAC8B,EAASsG,GAAG,OAC5B/K,IAAAnB,cAACmX,IAAI,CAACpT,MAAI,EAACoI,IAAKD,EAAKoL,GAAI,IACrBnW,IAAAnB,cAACoK,GAAW3J,OAAAe,OAAA,CACR7B,QAAS,WAAQ+W,EAAkB9Q,EAAQlI,KAC3CC,MAAO2F,EAAsBsC,EAAQG,kBAAkBpI,OACnDiI,EAAO,CACXI,SAAUJ,EAAQI,gBAIhC7E,IAAAnB,cAACmV,GAAW,MAElBhU,IAAAnB,cAACuX,IAAO,CAACC,OAAK,EAAC3X,GAAI,CAAE4X,GAAI,EAAGhP,GAAI,KAEhCtH,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQgE,eAAgB,SAAUzD,WAAY,SAAU1D,EAAG,IAC3EE,IAAAnB,cAACyE,IAAU,KAAC,+CAGhBtD,IAAAnB,cAACqK,GAAY,CAACC,eAAgB,GAAIC,aAAc,GAAIC,aAAcA,EAAcC,aA7B/D,SAAAiN,GACjBzB,EAAgByB,MA8BfjC,EAAe/Q,OAAS,EACnBvD,IAAAnB,cAACmX,IAAI,CAACC,WAAS,EAACC,QAAS,GACtB5B,EAAe3R,IAAI,SAAC8B,EAASsG,GAAG,OAC7B/K,IAAAnB,cAACmX,IAAI,CAACpT,MAAI,EAACoI,IAAKD,EAAKoL,GAAI,IACrBnW,IAAAnB,cAACoK,GAAW3J,OAAAe,OAAA,CACR7D,MAAO2F,EAAsBsC,EAAQG,kBAAkBpI,MACvDgC,QAAS,WAAQ+W,EAAkB9Q,EAAQlI,MACvCkI,QAKlBzE,IAAAnB,cAACmV,GAAW,MAGlBhU,IAAAnB,cAAC0B,EAAK,CACF5D,KAAM+X,EACNvT,QAAS,kBAAM2U,KACftZ,MAAM,4JACNwD,IAAAnB,cAACmX,IAAI,CAACC,WAAS,EAACC,QAAS,GACpB1Y,IAAqBmF,IAAI,SAACC,EAAMmI,GAAG,OAAK/K,IAAAnB,cAACmX,IAAI,CAACpT,MAAI,EAACuT,GAAI,GAAInL,IAAKD,GAC7D/K,IAAAnB,cAACuD,EAAkB,CACf5D,QAASyW,EACTjK,IAAKD,EACLnI,KAAMA,EACN4T,WAAW,EACX9X,GAAI,CAAEwE,UAAW,eAQjClD,IAAAnB,cAACT,EAAU,CAACK,KAAK,qGAAqBD,QAASsX,wDCtHjDW,GAAY,CACd/V,WAAY,CACRgW,MAAO,CACHC,UAAWC,IACX5X,MAAO,OAuCJ6X,GAlCM,SAAC3W,GAClB,OAAOvB,EAAAC,EAAAC,cAACC,EAAA,EAAG,KACPH,EAAAC,EAAAC,cAACiY,GAAA,EAAS,CACNC,SAAU,SAAC7U,GAAQhC,EAAM6W,SAAS7U,EAAG,UACrCvC,WAAS,EACTpD,GAAG,iBACHya,MAAM,mDACNtX,QAAQ,WACRsJ,MAAO9I,EAAM6B,SAASvF,MACtBkC,GAAI,CAAEuY,GAAI,EAAGjW,GAAI,KAErBrC,EAAAC,EAAAC,cAACqY,GAAA,EAAW,CACRxX,QAAQ,WACRhB,GAAI,CAAEkC,EAAG,EAAGyG,GAAI,EAAGD,GAAI,EAAG6P,GAAI,EAAGjW,GAAI,GACrCrB,WAAS,GACThB,EAAAC,EAAAC,cAACsY,GAAA,EAAU,CAAC5a,GAAG,4BAA2B,yFAC1CoC,EAAAC,EAAAC,cAACuY,GAAA,EAAM,CACHL,SAAU,SAAC7U,GAAQhC,EAAM6W,SAAS7U,EAAG,WACrCmV,QAAQ,2BACR9a,GAAG,qBACHyM,MAAO9I,EAAM6B,SAAStF,OACtBga,UAAWA,IACVpa,EAAiBsG,IAAI,SAACqP,GAAI,OACvBrT,EAAAC,EAAAC,cAACyY,GAAA,EAAQ,CACLtM,IAAKgH,EACLhJ,MAAOgJ,GACNA,SCxBVuF,GAZQ,SAACrX,GACpB,OAAOvB,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAC2Y,EAAA,EAAG,CAAC9Y,GAAI,CAAEuE,QAAS,OAAQwU,SAAU,OAAQtU,cAAe,WACzDxE,EAAAC,EAAAC,cAAC6Y,GAAY,CACT3V,SAAU7B,EAAM6B,SAChBgV,SAAU7W,EAAM6W,WAEpBpY,EAAAC,EAAAC,cAAC8Y,EAAU,CAAClZ,KAAK,6CAAUD,QAAS0B,EAAM0X,OAAQrZ,UAAU,OCEzDsZ,GAXY,SAAA3X,GACvB,OAAOvB,EAAAC,EAAAC,cAACY,EAAA,EAAM,CACVjB,QAAS0B,EAAM1B,QACfmB,WAAS,EACTC,MAAM,QACNlB,GAAI,CAAE4X,GAAI,EAAGlX,GAAI,GACjB0Y,eAAa,GACR5X,EAAMzB,OCUJsZ,GAdM,SAAC7X,GAClB,OAAOvB,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAC2Y,EAAA,EAAG,CAAC9Y,GAAI,CAAEuE,QAAS,OAAQwU,SAAU,OAAQtU,cAAe,WACzDxE,EAAAC,EAAAC,cAAC6Y,GAAY,CACT3V,SAAU7B,EAAM6B,SAChBgV,SAAU7W,EAAM6W,WAEpBpY,EAAAC,EAAAC,cAACmZ,GAAkB,CAACxZ,QAAS0B,EAAM+X,SAAUxZ,KAAK,4GAElDE,EAAAC,EAAAC,cAAC8Y,EAAU,CAAClZ,KAAK,yDAAYD,QAAS0B,EAAM0X,OAAQrZ,UAAU,mGCNpE2Z,GAAYrQ,aAAO,SAAC3H,GAAK,OAC3BF,IAAAnB,cAACsZ,KAAY7Y,OAAAe,OAAA,CAACb,UAAW,GAAOU,KADlB2H,CAEf,SAAAxJ,GAAQA,EAALgD,MAAK,MAAQ,CACf+W,qBAAsB,CAClBC,aAAc,MAIhBC,GAAmBzQ,aAAO,SAAC3H,GAAK,OAClCF,IAAAnB,cAAC0Z,KAAmBjZ,OAAAe,OAAA,CAChBmY,WAAYxY,IAAAnB,cAAC4Z,KAAwB,CAAC/Z,GAAI,CAAEga,SAAU,aAClDxY,KAHa2H,CAKtB,SAAAvJ,GAAA,IAAG+C,EAAK/C,EAAL+C,MAAK,MAAQ,CACfsX,QAAStX,EAAM6U,QAAQ,GACvB3K,gBAAiBlK,EAAMC,QAAQsX,QAAQvC,MACvClT,cAAe,cACf0V,wDAAyD,CACrDC,UAAW,iBAEfC,iCAAkC,CAC9BC,WAAY3X,EAAM6U,QAAQ,OAI5B+C,GAAmBpR,aAAOqR,KAAPrR,CAA4B,SAAAsR,GAAQ,MAAQ,CACjER,QADyDQ,EAAL9X,MACrC6U,QAAQ,GACvBkD,UAAW,mCAkDAC,GA/CM,SAACnZ,GAAU,IAAAgI,EACIC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAvCoR,EAAQlR,EAAA,GAAEmR,EAAWnR,EAAA,GAWtBoR,EAAY,SAAC/c,GACf,Odf8B,SAAAA,GAClC,OAAOoF,EAAqBpF,GAAQ8G,OcczBkW,CAAuBhd,IAGlC,OAAOuD,IAAAnB,cAAA,WACFxC,EAAiBsG,IAAI,SAAClG,EAAQsO,GAAG,OAAK/K,IAAAnB,cAACqZ,GAAS,CAC7ClN,IAAKD,EACLuO,SAAUA,GAAY7c,EACtBsa,UAjBsB2C,EAiBSjd,EAjBC,SAACkd,EAAOC,GAC5CL,IAAYK,GAAcF,MAiBtB1Z,IAAAnB,cAACyZ,GAAgB,CACbE,WAAYxY,IAAAnB,cAACgb,KAAc,MAC3BC,gBAAc,mBACdvd,GAAG,mBACHyD,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQgE,eAAgB,gBAAiBjI,MAAO,OAAQwE,WAAY,SAAUnE,GAAI,IACjGhE,EAAiBoB,GAAQlB,OAC1ByE,IAAAnB,cAACkb,KAAK,CAACC,UAAQ,EAACC,aAAcT,EAAU/c,GAASmD,MAAM,YAAYlB,GAAI,CAACwb,OAAQ,OAGxFla,IAAAnB,cAACoa,GAAgB,KACZpX,EAAqBpF,GAAQkG,IAAI,SAACZ,EAAUkJ,GAAK,OAAKjL,IAAAnB,cAACC,IAAG,CAACkM,IAAKC,GAC7DjL,IAAAnB,cAACY,IAAM,CACHG,MAAM,YACNpB,QAAS,SAAC0D,GAAC,OA3BL,SAACA,EAAGH,GAC1BG,EAAEiY,kBACFja,EAAM1B,QAAQ0D,ElB8KO,OkB9KWH,GAyBAqY,CAAkBlY,EAAGH,IACrCpC,WAAS,EACTjB,GAAI,CAAEuI,eAAgB,aAAcoT,UAAW,QAC/CvC,eAAa,GACZ/V,EAASvF,YAnCD,IAACkd,MChC5BY,GAAoB,CACtB3d,MAAM,EACNC,KAAM,KACNJ,MAAO,MAoEI+d,GAjEQ,SAAAra,GAAS,IAAAgI,EACMC,mBAASmS,IAAkBlS,EAAAC,YAAAH,EAAA,GAAtDsS,EAASpS,EAAA,GAAEqS,EAAYrS,EAAA,GAAAgM,EACUjM,mBAAS,MAAKkM,EAAAhM,YAAA+L,EAAA,GAA/CsG,EAAYrG,EAAA,GAAEsG,EAAetG,EAAA,GAE9BuG,EAAuB,SAAC1Y,EAAG2Y,GAC7B,IAAIjY,EAAO8X,EACX9X,EAAKiY,GAAS3Y,EAAE4Y,OAAO9R,MACvB2R,EAAe3X,YAAA,GAAMJ,KAQnBmY,EAAa,WACfN,EAAaH,IACbK,EAAgB,OAGd7E,EAAgB,SAAC5T,EAAGtF,EAAMgG,GACxB4X,EAAU7d,KACVoe,KAEAN,EAAa,CACT9d,MAAM,EACNC,KAAMA,EACNJ,MnBoLY,OmBpLLI,EAAuB,gHAAwB,OAE1D+d,EAAe3X,YAAA,GAAMJ,MAc7B,OAAO5C,IAAAnB,cAAA,WACHmB,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,KAAKqW,MAAM,UAAS,gEACxC/V,IAAAnB,cAACwa,GAAY,CAAC7a,QAASsX,IACvB9V,IAAAnB,cAAC0B,EAAK,CACF5D,KAAM6d,EAAU7d,KAChBwE,QAAS,SAACe,GAAC,OAAK4T,EAAc5T,EAAG,KAAM,OACvC1F,MAAOge,EAAUhe,OnB6JA,QmB5JhBge,EAAU5d,MAAyBoD,IAAAnB,cAACkZ,GAAY,CAC7ChB,SAAU6D,EACV7Y,SAAU2Y,EACVzC,SA3CW,YfLI,SAAA1b,GAC3B,IAAMkB,EAAQkE,IAAeG,OAAO,SAAAC,GAAQ,OAAIA,EAASxF,IAAMA,IAC/DqF,EAAanE,GeITud,CAAgBN,EAAane,IAC7Bwe,KA0CQnD,OArBS,SAAC1V,IfvBI,SAAAH,GAC1B,IAAMtE,EAAQkE,IAAegB,IAAI,SAAAT,GAC7B,OAAGA,EAAE3F,IAAMwF,EAASxF,GACTwF,EAGJG,IAEXN,EAAanE,GegBTwd,CAAeP,GACfK,OnB4KoB,OmBxJfP,EAAU5d,MAAwBoD,IAAAnB,cAAC0Y,GAAc,CAC9CR,SAAU6D,EACV7Y,SAAU2Y,EACV9C,OApBQ,SAAC1V,IfvCG,SAAAH,GACxB,IAAMtE,EAAQkE,IACdlE,EAAMH,KAAKyE,GACXH,EAAanE,GeqCTyd,CAAaR,GACbK,QAqBA/a,IAAAnB,cAACT,EAAU,CAACK,KAAK,0GAAqBD,QAAS,SAAC0D,GAAC,OAAK4T,EAAc5T,EnBkJhD,MAGjB,CACH3F,GAAMmI,cACNlI,MAAO,GACPC,OAAQ,qCoB9NV6b,GAAmBzQ,aAAO,SAAC3H,GAAK,OAClCvB,EAAAC,EAAAC,cAACyZ,GAAA,EACOpY,IAFa2H,CAItB,SAAAxJ,GAAA,IAAGgD,EAAKhD,EAALgD,MAAK,MAAQ,CACfsX,QAAStX,EAAM6U,QAAQ,GACvB3K,gBAAiBlK,EAAMC,QAAQsX,QAAQvC,MACvClT,cAAe,cACf0V,wDAAyD,CACrDC,UAAW,iBAEfC,iCAAkC,CAC9BC,WAAY3X,EAAM6U,QAAQ,OAqCnBiF,GAjCW,SAACjb,GACvB,OAAOvB,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAACC,EAAA,EAAG,CAACJ,GAAI,CAAEsC,GAAI,KACV3E,EAAiBsG,IAAI,SAAClG,EAAQsO,GAAG,OAAKpM,EAAAC,EAAAC,cAACqZ,GAAA,EAAS,CAC7ClN,IAAKD,EACLuO,UAAU,GACV3a,EAAAC,EAAAC,cAACuc,GAAgB,CACbtB,gBAAc,mBACdvd,GAAG,mBACHoC,EAAAC,EAAAC,cAACC,EAAA,EAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQgE,eAAgB,gBAAiBjI,MAAO,OAAQwE,WAAY,SAAU1D,EAAG,IAChGzE,EAAiBoB,GAAQlB,SAGlCoD,EAAAC,EAAAC,cAACoa,GAAA,EAAgB,KACZpX,EAAqBpF,GAAQkG,IAAI,SAACZ,EAAUkJ,GAAK,OAAKtM,EAAAC,EAAAC,cAACC,EAAA,EAAG,CAACkM,IAAKC,GAC7DtM,EAAAC,EAAAC,cAACY,EAAA,EAAM,CACH4b,QAASnb,EAAMob,WAAWvZ,EAASxF,IAAMoC,EAAAC,EAAAC,cAAC0c,GAAA3c,EAAS,MAAMD,EAAAC,EAAAC,cAAA,YACzDe,MAAM,YACNpB,QAAS,SAAC0D,GAAC,OAAKhC,EAAMsb,gBAAgBzZ,EAASxF,KAC/CoD,WAAS,EACTjB,GAAI,CAAEuI,eAAgB,gBAAiBoT,UAAW,QAClDvC,eAAa,GACZ/V,EAASvF,eAO9BmC,EAAAC,EAAAC,cAAC8Y,EAAU,CAAClZ,KAAI,yDAAeD,QAAS0B,EAAM0X,OAAQrZ,UAAU,sFCvCzDkd,GAVM,SAACvb,GAClB,OAAOvB,EAAAC,EAAAC,cAACY,EAAA,EAAM,CACVic,KAAK,QACLhc,QAAQ,YACRE,MAAM,YACNpB,QAAS0B,EAAM1B,SACd0B,EAAMzB,OCwEAkd,GA3EG,SAAHtd,GAA+H,IAAzHuE,EAAIvE,EAAJuE,KAAM5F,EAAIqB,EAAJrB,KAAM4e,EAAiBvd,EAAjBud,kBAAmBC,EAAqBxd,EAArBwd,sBAAuBC,EAAMzd,EAANyd,OAAQC,EAAa1d,EAAb0d,cAAeC,EAAgB3d,EAAhB2d,iBAAkBC,EAAQ5d,EAAR4d,SAAUC,EAAS7d,EAAT6d,UAC5G7Z,eAGd,OAFArE,QAAQC,IAAIjB,GAELgD,IAAAnB,cAACkE,IAAK,CAACrE,GAAI,CAAEoB,EAAG,EAAGwH,GAAI,EAAGgP,GAAI,IACjCtW,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,SAChBjD,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQE,cAAe,SAAU/D,GAAI,EAAGC,GAAI,IAC5DW,IAAAnB,cAACyE,IAAU,KAAEV,EAAKpG,OAClBwD,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,WAAWrE,EAAiBuH,EAAKnG,QAAQlB,UAIrEyE,IAAAnB,cAACuX,IAAO,MAERpW,IAAAnB,cAACC,IAAG,KACAkB,IAAAnB,cAACsd,KAAc,KACXnc,IAAAnB,cAACud,KAAK,CAAC1d,GAAI,CAAEM,MAAO,OAAQqd,YAAa,SAAWX,KAAK,SACrD1b,IAAAnB,cAACyd,KAAS,KACNtc,IAAAnB,cAAC0d,KAAQ,KACLvc,IAAAnB,cAAC2d,KAAS,KAAC,wCACXxc,IAAAnB,cAAC2d,KAAS,CAACzG,MAAM,UAAS,+CACxBgG,GAAiB/b,IAAAnB,cAAC2d,KAAS,CAACzG,MAAM,UAAS,uBAC3CiG,GAAoBhc,IAAAnB,cAAC2d,KAAS,KAAC,sDAGzCxc,IAAAnB,cAAC4d,KAAS,KACLzf,EAAK2F,IAAI,SAAC0C,EAAK4F,GAAK,OACjBjL,IAAAnB,cAAC0d,KAAQ,CAACvR,IAAKC,GACXjL,IAAAnB,cAAC2d,KAAS,KAAEvR,EAAQ,GACpBjL,IAAAnB,cAAC2d,KAAS,CAACzG,MAAM,UACZmG,GAAalc,IAAAnB,cAACiY,KAAS,CACpB4F,WAAY,CACRhe,GAAI,CAAE2b,UAAW,WAErBqB,KAAK,QACL1J,KAAK,UACLpV,KAAM,SACNma,SAAU,SAAC7U,GAAQ0Z,EAAkB1Z,EAAGU,EAAMqI,IAC9CtL,WAAS,EACTqJ,MAAO3D,EAAIpI,UACdgf,GAAY5W,EAAIpI,UAEnB8e,GAAiB/b,IAAAnB,cAAC2d,KAAS,CAACzG,MAAM,UAC/BmG,GAAalc,IAAAnB,cAACiY,KAAS,CACpB4F,WAAY,CACRhe,GAAI,CAAE2b,UAAW,WAErBqB,KAAK,QACL1J,KAAK,SACLpV,KAAM,SACNma,SAAU,SAAC7U,GAAQ0Z,EAAkB1Z,EAAGU,EAAMqI,IAC9CtL,WAAS,EACTqJ,MAAO3D,EAAInI,SACd+e,GAAY5W,EAAInI,SAEnB8e,GAAoBhc,IAAAnB,cAAC2d,KAAS,CAACzG,MAAM,SACnC/V,IAAAnB,cAAC8d,KAAQ,CACLC,SAAUX,EACVjK,KAAK,YACLpS,MAAM,YACNid,QAASxX,EAAI9H,UACbwZ,SAAU,SAAC7U,GAAC,OAAK2Z,EAAsB3Z,EAAGU,EAAMqI,aAO3EiR,GAAalc,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQgE,eAAgB,WAAYgQ,GAAI,IACtEjX,IAAAnB,cAAC4c,GAAY,CAAChd,KAAK,wFAAkBD,QAAS,SAAA0D,GAAC,OAAI4Z,EAAOlZ,UCnEpEka,GAAmB,SAAAvgB,GACrB,MAAO,CACHA,GAAIA,EACJS,KAAM,CACF,CACIC,QAAS,GACTM,WAAW,GAEf,CACIN,QAAS,GACTM,WAAW,GAEf,CACIN,QAAS,GACTM,WAAW,GAEf,CACIN,QAAS,GACTM,WAAW,MAgHZwf,GA1GY,SAAA7c,GAAS,IAAAgI,EACAC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC8U,EAAQ5U,EAAA,GAAE6U,EAAW7U,EAAA,GAAAgM,EACFjM,oBAAS,GAAMkM,EAAAhM,YAAA+L,EAAA,GAAlCM,EAAML,EAAA,GAAE6I,EAAO7I,EAAA,GACRhS,cAEdkG,oBAAU,WACN0U,EAAWxa,YAAKvC,EAAM0C,KAAK7F,aAC5B,IAEH,IAAMue,EAAa,SAAA/e,GACf,OAAOygB,EAAS/a,KAAK,SAAAC,GAAC,OAAIA,EAAE3F,IAAMA,MAAO,GAgBvCsZ,EAAmB,WACrBqH,GAASxI,IAQPyI,EAAsB,SAACjb,EAAGH,EAAUkJ,GACtC,IAAI6P,EAASkC,EAAS/a,KAAK,SAAAC,GAAC,OAAIA,EAAE3F,IAAMwF,EAASxF,KACjDue,EAAO9d,KAAKiO,GAAOhO,QAAU6J,SAAS5E,EAAE4Y,OAAO9R,OAC/CiU,EAAYD,EAASra,IAAI,SAAAT,GACrB,OAAIA,EAAE3F,IAAMue,EAAOve,GACRue,EAEJ5Y,MAIT4Z,EAAS,SAAC/Z,GACZ,IAAI+Y,EAASkC,EAAS/a,KAAK,SAAAC,GAAC,OAAIA,EAAE3F,IAAMwF,EAASxF,KACjDue,EAAO9d,KAAKM,KvBiOT,CACHL,QAAS,GACTC,OAAQ,EACRK,WAAW,IuBnOX0f,EAAYD,EAASra,IAAI,SAAAT,GACrB,OAAIA,EAAE3F,IAAMue,EAAOve,GACRue,EAEJ5Y,MAIf,OAAOlC,IAAAnB,cAACC,IAAG,KACPkB,IAAAnB,cAACiY,KAAS,CACNC,SAAU,SAAC7U,GAAQhC,EAAM6W,SAAS7U,EAAG,UACrCvC,WAAS,EACTpD,GAAG,iBACHya,MAAM,mDACNtX,QAAQ,WACRsJ,MAAO9I,EAAM0C,KAAKpG,MAClBkC,GAAI,CAAEuY,GAAI,EAAGjW,GAAI,KAEW,GAA/Bd,EAAM0C,KAAK7F,UAAUwG,QAAevD,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQgE,eAAgB,SAAUzD,WAAY,SAAU1D,EAAG,IAChHE,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,WAAU,qIAIjCQ,EAAM0C,KAAK7F,UAAUwG,OAAS,GAAKvD,IAAAnB,cAACmX,IAAI,CAACC,WAAS,EAACC,QAAS,GACxDhW,EAAM0C,KAAK7F,UAAU4F,IAAI,SAACZ,EAAUgJ,GACjC,IAAMnI,EAAOZ,EAAgBD,EAASxF,IACtC,OAAOyD,IAAAnB,cAACmX,IAAI,CAACpT,MAAI,EAACuT,GAAI,GAAInL,IAAKD,GAC3B/K,IAAAnB,cAAC8c,GAAS,CACN/Y,KAAMA,EACN5F,KAAM+E,EAAS/E,KACf4e,kBAAmBuB,EACnBpB,eAAa,EAACC,kBAAgB,EAACE,WAAS,EACxCJ,OAAQA,QAOxB9b,IAAAnB,cAAC0B,EAAK,CACF5D,KAAM+X,EACNvT,QArEQ,WACZ8b,EAAY/c,EAAM0C,KAAK7F,WACvB8Y,KAoEIrZ,MAAM,6HACNwD,IAAAnB,cAACsc,GAAiB,CACdK,gBAhFY,SAAAjf,GACf+e,EAAW/e,GAGZ0gB,EAAYD,EAASlb,OAAO,SAAAI,GAAC,OAAIA,EAAE3F,IAAMA,KAFzC0gB,EAAW,GAAApX,OAAApD,YAAKua,GAAQ,CAAEF,GAAiBvgB,OA+EvC6gB,kBAAmBld,EAAM0C,KAAK7F,UAC9Bue,WAAYA,EACZ0B,SAAUA,EACVpF,OAnEY,WACpB1X,EAAMmd,aAAaL,GACnBnH,QAoEA7V,IAAAnB,cAACY,IAAM,CAACE,WAAS,EAACD,QAAQ,YAAYE,MAAM,YAAYpB,QAASqX,GAAkB,mHCjH5EyH,GAdc,SAAApd,GACzB,OAAOvB,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAC2Y,EAAA,EAAG,CAAC9Y,GAAI,CAAEuE,QAAS,OAAQwU,SAAU,OAAQtU,cAAe,SAAUnC,GAAI,KACvErC,EAAAC,EAAAC,cAAC0e,GAAkB,CACf3a,KAAM1C,EAAM0C,KACZmU,SAAU7W,EAAM6W,SAChBsG,aAAcnd,EAAMmd,aACpBzF,OAAQ1X,EAAMmd,eAElB1e,EAAAC,EAAAC,cAAC8Y,EAAU,CAAClZ,KAAK,yDAAYD,QAAS0B,EAAM0X,OAAQrZ,UAAU,OCe3Dif,GAvBY,SAAAtd,GACvB,OAAOvB,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAC2Y,EAAA,EAAG,CAAC9Y,GAAI,CAAEuE,QAAS,OAAQwU,SAAU,OAAQtU,cAAe,SAAUnC,GAAI,KACvErC,EAAAC,EAAAC,cAAC0e,GAAkB,CACf3a,KAAM1C,EAAM0C,KACZmU,SAAU7W,EAAM6W,SAChBsG,aAAcnd,EAAMmd,aACpBzF,OAAQ1X,EAAMmd,eAElB1e,EAAAC,EAAAC,cAACY,EAAA,EAAM,CACHjB,QAAS0B,EAAM+X,SACftY,WAAS,EACTC,MAAM,QACNlB,GAAI,CAAG4X,GAAI,EAAGlX,GAAI,GAClB0Y,eAAa,GAAC,qGAIlBnZ,EAAAC,EAAAC,cAAC8Y,EAAU,CAAClZ,KAAK,yDAAYD,QAAS0B,EAAM0X,OAAQrZ,UAAU,OCX3Dkf,GARY,SAACvd,GACxB,OAAOF,IAAAnB,cAACmX,IAAI,CAACC,WAAS,EAACC,QAAS,GAC3B1Y,IAAqBmF,IAAI,SAACJ,EAASwI,GAAG,OAAK/K,IAAAnB,cAACmX,IAAI,CAAChL,IAAKD,EAAKnI,MAAI,EAACuT,GAAI,GACjEnW,IAAAnB,cAACuD,EAAkB,CAACQ,KAAML,EAAS/D,QAAS0B,EAAM1B,QAAS6E,UAAWnD,EAAMmD,iBC0EzEqa,GAxEoB,SAACxd,GAAU,IAAAgI,EACRC,mBAASzL,GAAkB0L,EAAAC,YAAAH,EAAA,GAAtDsS,EAASpS,EAAA,GAAEqS,EAAYrS,EAAA,GAAAgM,EACUjM,mBAAS,MAAKkM,EAAAhM,YAAA+L,EAAA,GAA/CsG,EAAYrG,EAAA,GAAEsG,EAAetG,EAAA,GAE9BsJ,EAAmB,SAACzb,EAAG2Y,GACzB,IAAIjY,EAAO8X,EACX9X,EAAKiY,GAAS3Y,EAAE4Y,OAAO9R,MACvB2R,EAAe3X,YAAA,GAAMJ,KAQnBmY,EAAa,WACfN,EAAa/d,GACbie,EAAgB,OAGd7E,EAAgB,SAAC5T,EAAGtF,EAAMgG,GACxB4X,EAAU7d,KACVoe,KAEAN,EAAa,CACT9d,MAAM,EACNC,KAAMA,EACNJ,M3B0LY,O2B1LLI,EAAuB,0GAAuB,OAEzD+d,EAAe3X,YAAA,GAAMJ,MAcvBya,EAAe,SAACtgB,GAClBiB,QAAQC,IAAI,YAAalB,GACzB4d,EAAe3X,YAAA,GAAK0X,EAAY,CAAE3d,UAAWA,MAGjD,OAAOiD,IAAAnB,cAAA,WACHmB,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,KAAKqW,MAAM,UAAS,yIACxC/V,IAAAnB,cAAC4e,GAAkB,CAACjf,QAASsX,EAAezS,WAAS,IACrDrD,IAAAnB,cAAC0B,EAAK,CACF5D,KAAM6d,EAAU7d,KAChBwE,QAAS,SAACe,GAAC,OAAK4T,EAAc5T,EAAG,KAAM,OACvC1F,MAAOge,EAAUhe,O3B8JA,Q2B7JhBge,EAAU5d,MAAyBoD,IAAAnB,cAAC2e,GAAkB,CACnDzG,SAAU4G,EACV/a,KAAM8X,EACNzC,SAhDO,Y1BJa,SAAA1b,GAChC,IAAMkB,EAAQD,IAAqBsE,OAAO,SAAAC,GAAQ,OAAIA,EAASxF,IAAMA,IACrEuB,EAAmBL,G0BGfmgB,CAAqBlD,EAAane,IAClCwe,KA+CQnD,OA1BK,SAAC1V,I1BtBc,SAAAH,GAChC,IAAMtE,EAAQD,IAAqBmF,IAAI,SAAAT,GACnC,OAAGA,EAAE3F,IAAMwF,EAASxF,GAETwF,EAGJG,IAEXpE,EAAmBL,G0BcfogB,CAAqBnD,GACrBK,KAyBQsC,aAAcA,I3ByJF,O2BxJf7C,EAAU5d,MAAwBoD,IAAAnB,cAACye,GAAoB,CACpDvG,SAAU4G,EACV/a,KAAM8X,EACN9C,OA1BI,SAAC1V,I1BtCY,SAAAH,GAC7B,IAAMtE,EAAQD,IACdC,EAAMH,KAAKyE,GACXjE,EAAmBL,G0BoCfqgB,CAAkBpD,GAClBK,KAyBQsC,aAAcA,KAGtBrd,IAAAnB,cAACT,EAAU,CAACK,KAAK,oGAAoBD,QAAS,SAAC0D,GAAC,OAAK4T,EAAc5T,E3BiJ/C,MAiBjB,CACH3F,GAAMmI,cACNlI,MAAS,GACTM,YAAe,GACfC,UAAa,0J4B/NNghB,GAZI,SAAA7d,GACf,OAAOF,IAAAnB,cAACkE,IAAK,CAACrE,GAAI,CAAEK,SAAU,QAASE,OAAQ,EAAGC,KAAM,EAAGC,MAAO,GAAKK,UAAW,GAC9EQ,IAAAnB,cAACmf,KAAgB,CAAChV,MAAO9I,EAAM+d,YAAalH,SAAU7W,EAAMge,aAAcC,YAAU,GAChFne,IAAAnB,cAACuf,KAAsB,CAACpV,MAAM,mBAAmB9B,KAAMlH,IAAAnB,cAACwf,KAAW,QACnEre,IAAAnB,cAACuf,KAAsB,CAACpV,MAAM,YAAY9B,KAAMlH,IAAAnB,cAACyf,KAAU,QAC3Dte,IAAAnB,cAACuf,KAAsB,CAACpV,MAAM,UAAU9B,KAAMlH,IAAAnB,cAAC0f,KAAiB,QAChEve,IAAAnB,cAACuf,KAAsB,CAACpV,MAAM,WAAW9B,KAAMlH,IAAAnB,cAAC2f,KAAc,QAC9Dxe,IAAAnB,cAACuf,KAAsB,CAACpV,MAAM,UAAU9B,KAAMlH,IAAAnB,cAAC4f,KAAM,WCX3DC,GAAYC,aAAY,CAC1Brd,QAAS,CACLsX,QAAS,CACLgG,KAAM,UACNvI,MAAO,UACP5K,KAAM,UACNoT,aAAc,WAElBrT,UAAW,CACPoT,KAAM,UACNvI,MAAO,UACP5K,KAAM,WAEVqT,WAAY,CACRC,QAAS,YAGjBC,WAAY,CACRC,WAAY,CACR,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACFnc,KAAK,QAgCAoc,GA5BA,SAAH7gB,GAAcA,EAARqD,SAAe,IAAPwG,EACIC,mBAAS,WAAUC,EAAAC,YAAAH,EAAA,GAAtCiX,EAAK/W,EAAA,GAAEgX,EAAQhX,EAAA,GAChBiX,EAAWC,cACXvK,EAAWC,cACjBzM,oBAAU,WACN,IAAMgX,EAAOF,EAASG,SAASC,UAAU,GACtB,GAAfF,EAAKhc,QAAegc,EAAKG,SAAS,mBAClCN,EAAS,WAETA,EAASG,IAEd,CAACF,IAMJ,OAAOrf,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQtC,OAAQ,OAAQsG,eAAgB,SAAUjG,GAAI,EAAGiW,GAAI,IACpFjX,IAAAnB,cAAC8gB,KAAW,MACZ3f,IAAAnB,cAAC+gB,KAAa,CAACve,MAAOqd,IAClB1e,IAAAnB,cAACC,IAAG,CAAC+gB,UAAW,OAAQnhB,GAAI,CAAEoB,EAAG,EAAGd,MAAO,OAAQ2B,OAAQ,OAAQmf,UAAW,SAAU9e,GAAI,KACxFhB,IAAAnB,cAACkhB,IAAM,MACP/f,IAAAnB,cAACkf,GAAU,CAACE,YAAakB,EAAOjB,aATvB,SAACvE,EAAOqG,GACzBjL,EAAQ,IAAAlP,OAAKma,WC2GNC,GAnJa,SAAC/f,GAAU,IAC3BggB,EAAcC,cAAdD,UAAShY,EAEeC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC8U,EAAQ5U,EAAA,GAAE6U,EAAW7U,EAAA,GAAAgM,EACFjM,oBAAS,GAAMkM,EAAAhM,YAAA+L,EAAA,GAAlCM,EAAML,EAAA,GAAE6I,EAAO7I,EAAA,GAAAG,EACWrM,mBAAS,CAAEpL,UAAW,KAAK0X,EAAApM,YAAAmM,EAAA,GAArD/O,EAAOgP,EAAA,GAAE2L,EAAa3L,EAAA,GAAAG,EACkBzM,mBAAS,CAAC3L,MAAO,KAAIqY,EAAAxM,YAAAuM,EAAA,GAA7DS,EAAcR,EAAA,GAAEwL,EAAoBxL,EAAA,GAC3CtM,oBAAU,WACN,IAAIrC,EAASZ,GAAe4a,GAC5BE,EAAcla,GACd+W,EAAY/W,EAAOnJ,WACnB,IAAIsY,EAAiBlT,EAAsB+D,EAAOtB,kBAClDyb,EAAqBhL,IACtB,CAAC6K,IAEJ3X,oBAAU,WACN0U,EAAYxX,EAAQ1I,YACrB,CAAC0I,IAGJ,IAAMoQ,EAAmB,WACrBqH,GAASxI,IAQPkH,EAAoB,SAAC1Z,EAAGH,EAAUkJ,GACpC,IAAI6P,EAASwF,EAAsBve,EAASxF,IACxCyjB,EAA6B,IAAlB9d,EAAE4Y,OAAO9R,MAAc,GAAKlC,SAAS5E,EAAE4Y,OAAO9R,OAC7D8R,EAAO9d,KAAKiO,GAAO/I,EAAE4Y,OAAO9I,MAAQgO,EACpCO,EAAqBzF,IAGnBe,EAAwB,SAAC3Z,EAAGH,EAAUkJ,GACxC,IAAI6P,EAASwF,EAAsBve,EAASxF,IAC5Cue,EAAO9d,KAAKiO,GAAO1N,WAAaud,EAAO9d,KAAKiO,GAAO1N,UACnDgjB,EAAqBzF,IAGnBwF,EAAwB,SAAA/jB,GAC1B,OAAOkJ,EAAQ1I,UAAUkF,KAAK,SAAAC,GAAC,OAAIA,EAAE3F,IAAMA,KAGzCgkB,EAAuB,SAACzF,GAC1BsF,EAAapd,YAAA,GACNyC,EAAO,CACV1I,UAAW0I,EAAQ1I,UAAU4F,IAAI,SAAAT,GAC7B,OAAOA,EAAE3F,IAAMue,EAAOve,GAAKue,EAAS5Y,OAG5CsD,GAAYC,IAGVqW,EAAS,SAAC/Z,GACZ,IAAI+Y,EAASwF,EAAsBve,EAASxF,IAC5Cue,EAAO9d,KAAKM,K9B2OT,CACHL,QAAS,GACTC,OAAQ,EACRK,WAAW,I8B7OXgjB,EAAqBzF,IAyBnBQ,EAAa,SAAA/e,GACf,OAAOygB,EAAS/a,KAAK,SAAAC,GAAC,OAAIA,EAAE3F,IAAMA,MAAO,GAG7C,OAAOyD,IAAAnB,cAAA,WACHmB,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,MAAK,gEAAY2V,EAAe7Y,OACpDwD,IAAAnB,cAACmX,IAAI,CAACC,WAAS,EAACC,QAAS,GACpB3P,GAAYd,IAAYzF,IAAAnB,cAACmX,IAAI,CAACpT,MAAI,EAACuT,GAAI,IACpCnW,IAAAnB,cAACkE,IAAK,CAACrE,GAAI,CACPoB,EAAG,IAEHE,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,MAAI,yCAAAmG,OAAaJ,EAAQP,OAAM,kBACnDlF,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,MAAI,uEAAAmG,OAAkBJ,EAAQN,SAAQ,QAGjEM,EAAQ1I,UAAU4F,IAAI,SAACZ,EAAUgJ,GAC9B,IAAMnI,EAAOZ,EAAgBD,EAASxF,IACtC,OAAOyD,IAAAnB,cAACmX,IAAI,CAACpT,MAAI,EAACuT,GAAI,GAAInL,IAAKD,GAC3B/K,IAAAnB,cAAC8c,GAAS,CACNM,SAAU1V,GAAYd,GACtByW,UAAW5V,GAASb,GACpB7C,KAAMA,EACN5F,KAAM+E,EAAS/E,KACf6e,sBAAuBA,EACvBD,kBAAmBA,EACnBE,OAAQA,QAKxB9b,IAAAnB,cAAC0B,EAAK,CACF5D,KAAM+X,EACNvT,QA5FQ,WACZ8b,EAAYxX,EAAQ1I,WACpB8Y,KA2FIrZ,MAAM,iHACNwD,IAAAnB,cAACsc,GAAiB,CACdK,gBAjDY,SAAAjf,GACf+e,EAAW/e,GAGZ0gB,EAAYD,EAASlb,OAAO,SAAAI,GAAC,OAAIA,EAAE3F,IAAMA,KAFzC0gB,EAAW,GAAApX,OAAApD,YAAKua,GAAQ,CAAE5f,EAAwBb,OAgD9C6gB,kBAAmB3X,EAAQ1I,UAC3Bue,WAAYA,EACZ0B,SAAUA,EACVpF,OA7CY,WACpBnS,EAAQ1I,UAAYigB,EACpBuD,EAAqB9a,GACrBoQ,SA6CCxP,GAAMZ,IAAYa,GAASb,KAAazF,IAAAnB,cAACY,IAAM,CAACjB,QAASqX,GAAkB,iHAE3ExP,GAAMZ,IAAYzF,IAAAnB,cAACT,EAAU,CAC1BK,KAAM,MACND,QApEa,WACjB+hB,ErBpBoB,SAAA9a,GAIxB,OAHAA,EAAQX,QAAU,IAAIM,KACtBK,EAAQT,OAAS,SACjBQ,GAAYC,GACLA,EqBgBkB+a,CAAa/a,KAoE9B/G,GAAI,CACA6M,gBAAiB,UACjB/C,gBAAiB,mDACjB5I,MAAO,WAEd0G,GAASb,IAAYzF,IAAAnB,cAACT,EAAU,CAC7BK,KAAM,yDACND,QAxEgB,WACpB+hB,EAAqB7a,GAAgBD,KAwEjC/G,GAAI,CACA6M,gBAAiB,UACjB/C,gBAAiB,mDACjB5I,MAAO,yECrJjB6gB,GAAgB,SAAHpiB,GAAoB,IAAdqiB,EAAOriB,EAAPqiB,QAErB,OAAe,MAAXA,GAA8B,aAAXA,EACZ1gB,IAAAnB,cAAA,YAEJmB,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEoB,EAAG,EAAGmD,QAAS,OAAQE,cAAe,WACnDud,EAAQnd,QAAUvD,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,UAAUE,MAAM,aAAa8gB,EAAQ,GAAGA,QAAQ1c,MACtF0c,EAAQnd,QAAUvD,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,UAAUE,MAAM,aAAa8gB,EAAQ,GAAG1X,SAyBxE2X,GArBD,SAAHriB,GAA0B,IAApBsiB,EAAItiB,EAAJsiB,KAAMC,EAAOviB,EAAPuiB,QACbxf,EAAQgB,eAEd,OAAOrC,IAAAnB,cAACiiB,KAAmB,CAACngB,OAAQ,IAAK3B,MAAM,QAC3CgB,IAAAnB,cAACkiB,KAAS,CACNH,KAAMA,GACN5gB,IAAAnB,cAACmiB,KAAO,CACJjiB,SAAU,CAAEkiB,EAAG,GACfC,QAASlhB,IAAAnB,cAAC4hB,GAAa,MACvBU,aAAc,CAAE5V,gBAAiBlK,EAAMC,QAAQkK,UAAU6K,MAAO+K,aAAc/f,EAAMC,QAAQkK,UAAUC,KAAMH,aAAc,KAC9HtL,IAAAnB,cAACwiB,KAAI,CACDzkB,KAAK,WACLikB,QAASA,EACTS,OAAQjgB,EAAMC,QAAQkK,UAAUC,KAChC8V,KAAMlgB,EAAMC,QAAQkK,UAAU6K,MAC9BmL,YAAa,OCfdC,GAXG,SAAHpjB,GAA2C,IAArC7B,EAAK6B,EAAL7B,MAAOklB,EAAQrjB,EAARqjB,SAAUd,EAAIviB,EAAJuiB,KAAMC,EAAOxiB,EAAPwiB,QAClCxf,EAAQgB,cACd,OAAOrC,IAAAnB,cAACkE,IAAK,CAACrE,GAAI,CAAEoB,EAAG,EAAGa,OAAQ,MAC9BX,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQ0e,IAAK,IAC7B3hB,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,MAAMlD,GAC1BwD,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,KAAKE,MAAOyB,EAAMC,QAAQkK,UAAUC,MAAM,6BAAOiW,IAEzE1hB,IAAAnB,cAAC8hB,GAAK,CAACC,KAAMA,EAAMC,QAASA,gBCQrBe,GAhBI,SAAHvjB,GAA+B,IAAzB7B,EAAK6B,EAAL7B,MAAOqlB,EAAKxjB,EAALwjB,MAAOC,EAAIzjB,EAAJyjB,KAChC,OAAO9hB,IAAAnB,cAACkE,IAAK,CAACrE,GAAI,CAAEoB,EAAG,EAAGa,OAAQ,MAC9BX,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAACuE,QAAS,OAAQE,cAAe,SAAUK,WAAY,UAAW7C,OAAQ,SAC/EX,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQgE,eAAgB,SAAU7D,SAAU,IAC5DpD,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,MAAMlD,IAE9BwD,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQgE,eAAgB,SAAUzD,WAAY,SAAU7C,OAAQ,OAAQyC,SAAU,IAClGpD,IAAAnB,cAACkjB,KAAI,CAACC,GAAIF,EAAMG,QAAS,KACrBjiB,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,MAAMmiB,QCJxCpL,GAAY,CACd/V,WAAY,CACRgW,MAAO,CACHC,UAAWC,IACX5X,MAAO,OAKbyhB,GAAgB,SAAHpiB,GAAoC,IAA9BqiB,EAAOriB,EAAPqiB,QAASwB,EAAc7jB,EAAd6jB,eAE9B,OAAe,MAAXxB,GAA8B,aAAXA,EACZ1gB,IAAAnB,cAAA,YAEJmB,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEoB,EAAG,EAAGmD,QAAS,OAAQE,cAAe,WACnDud,EAAQnd,QAAUvD,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,UAAUE,MAAM,aAAa8gB,EAAQ,GAAGA,QAAQ1c,MACtF0c,EAAQnd,QAAUvD,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,UAAUE,MAAM,aAAasiB,EAAe,MAAIxB,EAAQ,GAAGA,QAAQyB,aA2DnGC,GAvDY,SAAH9jB,GAAwB,IAAlBsiB,EAAItiB,EAAJsiB,KAAMpkB,EAAK8B,EAAL9B,MAAK0L,EACOC,mBAAS,UAASC,EAAAC,YAAAH,EAAA,GAAvDga,EAAc9Z,EAAA,GAAEia,EAAiBja,EAAA,GAAAgM,EACLjM,mBAAS,IAAGkM,EAAAhM,YAAA+L,EAAA,GAAxCkO,EAAQjO,EAAA,GAAEkO,EAAclO,EAAA,GAC/BrW,QAAQC,IAAI,OAAQ2iB,GACpBrY,oBAAU,WACN,QAAY+H,GAARsQ,QAAkCtQ,GAAbsQ,EAAKA,KAAmB,CAC7C,IAAM4B,EAAU5B,EAAKA,KAAK3e,KAAK,SAAAW,GAAI,OAAIA,EAAKnG,QAAUylB,IACtDK,EAAeC,EAAQ5B,QAG5B,CAACsB,EAAgBtB,IACpB,IAAMvf,EAAQgB,cAEd,OAAOrC,IAAAnB,cAACkE,IAAK,CAACrE,GAAI,CAAEoB,EAAG,EAAGa,OAAQ,MAC9BX,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQ0e,IAAK,EAAGxe,cAAe,WAC/CnD,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,MAAMlD,GAC1BwD,IAAAnB,cAACqY,KAAW,CACRxX,QAAQ,WACRhB,GAAI,CAAEkC,EAAG,EAAGyG,GAAI,EAAGD,GAAI,EAAG6P,GAAI,EAAGjW,GAAI,GACrCrB,WAAS,GACTK,IAAAnB,cAACsY,KAAU,CAAC5a,GAAG,4BAA2B,yFAC1CyD,IAAAnB,cAACuY,KAAM,CACHL,SAAU,SAAC7U,GAAQmgB,EAAkBngB,EAAE4Y,OAAO9R,QAC9CqO,QAAQ,2BACR9a,GAAG,qBACHyM,MAAOkZ,EACPzL,UAAWA,IACVpa,EAAiBsG,IAAI,SAACqP,GAAI,OACvBhS,IAAAnB,cAACyY,KAAQ,CACLtM,IAAKgH,EACLhJ,MAAOgJ,GACNA,QAMrBhS,IAAAnB,cAACiiB,KAAmB,CAACngB,OAAQ,IAAK3B,MAAM,QACpCgB,IAAAnB,cAACkiB,KAAS,CACNH,KAAM0B,GACNtiB,IAAAnB,cAACmiB,KAAO,CACJjiB,SAAU,CAAEkiB,EAAG,GACfC,QAASlhB,IAAAnB,cAAC4hB,GAAa,CAACyB,eAAgBA,IACxCf,aAAc,CAAE5V,gBAAiBlK,EAAMC,QAAQkK,UAAU6K,MAAO+K,aAAc/f,EAAMC,QAAQkK,UAAUC,KAAMH,aAAc,KAC9HtL,IAAAnB,cAACwiB,KAAI,CACDzkB,KAAK,WACLikB,QAAQ,YACRW,YAAa,EACbF,OAAQjgB,EAAMC,QAAQkK,UAAUC,KAChC8V,KAAMlgB,EAAMC,QAAQkK,UAAU6K,YCxErCoM,GAAuB,SAAAC,GAChC,I1B4GkCC,E0B5G9BC,E3B+B4B,SAAAF,GAChC,IAAM1e,EAAO,IAAIoB,KAWjB,MAVc,QAAVsd,GACA1e,EAAK6e,QAAQ7e,EAAK0H,UAAY,GAEpB,QAAVgX,GACA1e,EAAK6e,QAAQ7e,EAAK0H,UAAY,KAEpB,SAAVgX,GACA1e,EAAK6e,QAAQ7e,EAAK0H,UAAY,IAG3B,CAAE9F,GAAI,IAAIR,KAAQO,KAAM3B,G2B3Cf8e,CAAqBJ,GAC/BK,G1B2G4BJ,E0B3GMC,E1B4GjCnf,IACF3B,OAAO,SAAA2D,GACJ,IAAMV,EAAQ,IAAIK,KAAKK,EAAQV,OAC/B,GAAIA,GAAS4d,EAAMhd,MAAQZ,GAAS4d,EAAM/c,GACtC,OAAOH,K0BhHmC,IAChDud,EAAYD,EAASxf,QAAUuC,KAAKmd,IAAGtN,MAAR7P,KAAIrD,YAAQsgB,EAASpgB,IAAI,SAAA8C,GAAO,OAAIA,EAAQP,WAC3Ege,EAAcH,EAASxf,QAAUuC,KAAKmd,IAAGtN,MAAR7P,KAAIrD,YAAQsgB,EAASpgB,IAAI,SAAA8C,GAAO,OAAIA,EAAQZ,UAAY,MAE/F,MAAO,CACHse,aAAcJ,EAASxf,OACvB6f,kBAAmBL,EAASjhB,OAAO,SAAA2D,GAAO,OAAwB,KAApBA,EAAQN,WAAiB5B,OACvE8f,YAAa,CACTJ,IAAKD,EACLpC,KAAMmC,EAASpgB,IAAI,SAAA8C,GACf,MAAO,CACHzB,KAAMD,EAAW,IAAIqB,KAAKK,EAAQV,QAClCG,OAAQO,EAAQP,WAI5Boe,aAAc,CACVL,IAAKC,EACLtC,KAAMmC,EAASpgB,IAAI,SAAA8C,GACf,MAAO,CACHzB,KAAMD,EAAW,IAAIqB,KAAKK,EAAQV,QAClCF,SAAUY,EAAQZ,aAI9Byd,SAAU,CACN1B,KAAM2C,GAAYR,MAKxBQ,GAAc,SAAAR,GAmBhB,OAlBe1mB,EAAiBsG,IAAI,SAAAlG,GAChC,IAAM+F,EAAMugB,EAASpgB,IAAI,SAAA8C,GACrB,IAAM+d,EAA0B3hB,EAAqBpF,GAChDkG,IAAI,SAAAC,GAAI,OAAIA,EAAKrG,KAEhBknB,EAAahe,EAAQ1I,UAAU+E,OAAO,SAAAc,GAAI,OAAI4gB,EAAwB9D,SAAS9c,EAAKrG,MACrFmnB,QAAQ,SAAA9gB,GAAI,OAAIA,EAAK5F,OACrB8E,OAAO,SAAAuD,GAAG,OAAIA,EAAI9H,YACvB,MAAO,CACHyG,KAAMD,EAAW,IAAIqB,KAAKK,EAAQV,QAClCod,UAAWsB,EAAWlgB,UAG9B,MAAO,CACH9G,OAAQA,EACRmkB,KAAMpe,EAAIV,OAAO,SAAAc,GAAI,OAAIA,EAAKuf,UAAY,QC0CvCwB,GAxFO,WAAM,IAAAzb,EACOC,mBAAS,QAAOC,EAAAC,YAAAH,EAAA,GAAxCwa,EAAMta,EAAA,GAAEwb,EAAYxb,EAAA,GAAAgM,EACAjM,oBAAS,GAAKkM,EAAAhM,YAAA+L,EAAA,GAAlC0N,EAAIzN,EAAA,GAAEwP,EAAUxP,EAAA,GAAAG,EACcrM,mBAAS,CAC1Cgb,aAAc,EACdC,kBAAmB,EACnBC,YAAa,CACTJ,IAAK,EACLrC,KAAM,IAEV0C,aAAc,CACVL,IAAK,EACLrC,KAAM,IAEV0B,SAAU,CAAC,CACP1B,KAAM,OAEZnM,EAAApM,YAAAmM,EAAA,GAdKsP,EAASrP,EAAA,GAAEsP,EAAetP,EAAA,GAgBjClM,oBAAU,WACNwb,EAAgBtB,GAAqBC,KACtC,CAACA,IAUJ,OAAO1iB,IAAAnB,cAAA,WACHmB,IAAAnB,cAACyE,IAAU,CAAC5D,QAAQ,KAAKqW,MAAM,UAAS,mIACxC/V,IAAAnB,cAACC,IAAG,CAACJ,GAAI,CAAEuE,QAAS,OAAQgE,eAAgB,SAAUgQ,GAAI,EAAGjW,GAAI,IAC7DhB,IAAAnB,cAACmlB,KAAiB,CACdhb,MAAO0Z,EACPhH,KAAK,QACL/b,WAAS,EACToX,SAfe,SAAA7U,GACvB2hB,GAAW,GACXI,WAAW,WACPL,EAAa1hB,EAAE4Y,OAAO9R,OACtB6a,GAAW,IACZ,MAWKK,WAAS,GACTlkB,IAAAnB,cAACslB,KAAY,CAACnb,MAAM,OAAOtK,GAAI,CAAEoB,EAAG,QAAS,sBAG7CE,IAAAnB,cAACslB,KAAY,CAACnb,MAAM,QAAO,wCAG3BhJ,IAAAnB,cAACslB,KAAY,CAACnb,MAAM,SAAQ,oCAKpChJ,IAAAnB,cAACmX,IAAI,CAACC,WAAS,EAACC,QAAS,GACrBlW,IAAAnB,cAACmX,IAAI,CAACpT,MAAI,EAACuT,GAAI,GACXnW,IAAAnB,cAAC+iB,GAAU,CACPplB,MAAM,+DACNslB,KAAMA,EACND,MAAOiC,EAAUX,gBAEzBnjB,IAAAnB,cAACmX,IAAI,CAACpT,MAAI,EAACuT,GAAI,GACXnW,IAAAnB,cAAC+iB,GAAU,CACPplB,MAAM,yDACNslB,KAAMA,EACND,MAAOiC,EAAUV,qBAEzBpjB,IAAAnB,cAACmX,IAAI,CAACpT,MAAI,EAACuT,GAAI,IACXnW,IAAAnB,cAAC4iB,GAAS,CACNjlB,MAAO,uCACPklB,SAAUoC,EAAUT,YAAYJ,IAChCpC,QAAQ,SACRD,KAAMkD,EAAUT,YAAYzC,QAEpC5gB,IAAAnB,cAACmX,IAAI,CAACpT,MAAI,EAACuT,GAAI,IACXnW,IAAAnB,cAAC4iB,GAAS,CACNjlB,MAAO,2EACPklB,SAAUoC,EAAUR,aAAaL,IACjCpC,QAAQ,WACRD,KAAMkD,EAAUR,aAAa1C,QAErC5gB,IAAAnB,cAACmX,IAAI,CAACpT,MAAI,EAACuT,GAAI,IACXnW,IAAAnB,cAACujB,GAAkB,CACnB5lB,MAAM,6CACNokB,KAAMkD,EAAUxB,SAChB8B,aAAc,CAAC,SAAU,UAAW,OAAQ,cCxE7CC,GAdI,WACf,IAAMtP,EAAWC,cAMjB,OAAOhV,IAAAnB,cAAA,WACHmB,IAAAnB,cAACY,IAAM,CAACE,WAAS,EAACC,MAAM,YAAYpB,QANzB,WACXuW,EAAS,KACTuP,OAAOjF,SAASkF,QAAO,KAI8B,kFACrDvkB,IAAAnB,cAACY,IAAM,CAACE,WAAS,EAACC,MAAM,aAAY,6EACpCI,IAAAnB,cAACY,IAAM,CAACE,WAAS,EAACC,MAAM,aAAY,iGCF7B4kB,GARM,WACjB,IAAMC,EAAazP,cACnB,OAAOhV,IAAAnB,cAAA,WACHmB,IAAAnB,cAACyE,IAAU,KAAC,8CACZtD,IAAAnB,cAACY,IAAM,CAACE,WAAS,EAACD,QAAQ,YAAYlB,QAAS,kBAAMimB,EAAW,YAAW,WCkB7EC,GAASC,YACbC,YACE5kB,IAAAnB,cAACgmB,IAAK,CAACtF,KAAK,IAAIlV,QAASrK,IAAAnB,cAACqgB,GAAM,OAC9Blf,IAAAnB,cAACgmB,IAAK,CAAC5Z,OAAK,EAACZ,QAASrK,IAAAnB,cAACoV,GAAY,QACnCjU,IAAAnB,cAACgmB,IAAK,CAACtF,KAAK,YAAYlV,QAASrK,IAAAnB,cAAC0b,GAAc,QAChDva,IAAAnB,cAACgmB,IAAK,CAACtF,KAAK,mBAAmBlV,QAASrK,IAAAnB,cAAC6e,GAAmB,QAC5D1d,IAAAnB,cAACgmB,IAAK,CAACtF,KAAK,UAAUlV,QAASrK,IAAAnB,cAACoV,GAAY,QAC5CjU,IAAAnB,cAACgmB,IAAK,CAACtF,KAAK,6BAA6BlV,QAASrK,IAAAnB,cAACohB,GAAmB,QACtEjgB,IAAAnB,cAACgmB,IAAK,CAACtF,KAAK,WAAWlV,QAASrK,IAAAnB,cAAC8kB,GAAa,QAC9C3jB,IAAAnB,cAACgmB,IAAK,CAACtF,KAAK,UAAUlV,QAASrK,IAAAnB,cAAC2lB,GAAY,QAC5CxkB,IAAAnB,cAACgmB,IAAK,CAACtF,KAAK,QAAQlV,QAASrK,IAAAnB,cAACwlB,GAAU,WAU/BS,GALH,WAEV,OAvByC,MAArCpnB,aAAaC,QAAQ,cACvBD,aAAaQ,QAAQ,YAAaN,KAAKO,UAAU7B,IACH,MAA5CoB,aAAaC,QAAQ,qBACvBD,aAAaQ,QAAQ,mBAAoBN,KAAKO,UAAUtB,IAoBlDmD,IAAAnB,cAACkmB,IAAc,CAACL,OAAQA,MC/BnBM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAjjB,EAAA,GAAAqN,KAAA4V,EAAAC,KAAA,WAAqB7V,KAAK,SAAAlR,GAAiD,IAA9CgnB,EAAMhnB,EAANgnB,OAAQC,EAAMjnB,EAANinB,OAAQC,EAAMlnB,EAANknB,OAAQC,EAAMnnB,EAANmnB,OAAQC,EAAOpnB,EAAPonB,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCKMS,QACW,cAA7BpB,OAAOjF,SAASsG,UAEe,UAA7BrB,OAAOjF,SAASsG,UAEhBrB,OAAOjF,SAASsG,SAASC,MAAM,2DCTtBC,IAASC,WAAWtb,SAASC,eAAe,SACpDsb,OACH/lB,IAAAnB,cAACmB,IAAMgmB,WAAU,KACbhmB,IAAAnB,cAACimB,GAAG,QAOVE","file":"static/js/main.99a0c459.chunk.js","sourcesContent":["import {v4 as uuidv4} from 'uuid';\n\nexport const MuscleGroupsInfo = {\n    \"BICEPS\": {\n        \"locale\": \"Бицепс\"\n    },\n    \"TRICEPS\": {\n        \"locale\": \"Трицепс\"\n    },\n    \"QUADS\": {\n        \"locale\": \"Передняя поверхность бедра\"\n    },\n    \"GLUTES\": {\n        \"locale\": \"Ягодицы\"\n    },\n    \"ABS\": {\n        \"locale\": \"Пресс\"\n    },\n    \"CHEST\": {\n        \"locale\": \"Грудь\"\n    },\n    \"SHOULDERS\": {\n        \"locale\": \"Плечи\"\n    },\n    \"HAMSTRINGS\": {\n        \"locale\": \"Задняя поверхность бедра\"\n    },\n    \"FOREARMS\": {\n        \"locale\": \"Предплечья\"\n    },\n    \"NECK\": {\n        \"locale\": \"Шея\"\n    },\n    \"LATS\": {\n        \"locale\": \"Широчайшие\"\n    },\n    \"LOWER_BACK\": {\n        \"locale\": \"Разгибатели спины/Поясница\"\n    },\n    \"MIDDLE_BACK\": {\n        \"locale\": \"Середина спины\"\n    },\n    \"TRAPS\": {\n        \"locale\": \"Трапеции\"\n    }\n};\n\nexport const MuscleGroupsEnum = [\n    \"BICEPS\", \n    \"TRICEPS\", \n    \"QUADS\", \n    \"GLUTES\", \n    \"ABS\", \n    \"CHEST\", \n    \"SHOULDERS\", \n    \"HAMSTRINGS\", \n    \"FOREARMS\", \n    \"NECK\", \n    \"LATS\", \n    \"LOWER_BACK\", \n    \"MIDDLE_BACK\", \n    \"TRAPS\"\n];\n\nexport const DefaultExercises = [\n    {\n        \"id\": \"1\",\n        \"title\": \"Подъем штанги на бицепс\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"18\",\n        \"title\": \"Подтягивания обратным хватом\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"19\",\n        \"title\": \"Подъем гантелей в скамье Скотта\",\n        \"muscle\": \"BICEPS\"\n    },\n    {\n        \"id\": \"15\",\n        \"title\": \"Молотки с гантелями\",\n        \"muscle\": \"BICEPS\"\n    }, \n    {\n        \"id\": \"2\",\n        \"title\": \"Французский жим со штангой\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"20\",\n        \"title\": \"Французский со штангой\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"21\",\n        \"title\": \"Жим лежа узким хватом\",\n        \"muscle\": \"TRICEPS\"\n    },\n    {\n        \"id\": \"22\",\n        \"title\": \"Разгибания на трицепс в верхнем блоке\",\n        \"muscle\": \"TRICEPS\"\n    }, \n    {\n        \"id\": \"3\",\n        \"title\": \"Приседания со штангой\",\n        \"muscle\": \"QUADS\"\n    }, \n    {\n        \"id\": \"23\",\n        \"title\": \"Жим ногами\",\n        \"muscle\": \"QUADS\"\n    }, \n    {\n        \"id\": \"24\",\n        \"title\": \"Разгибания в блоке на квадрицепс\",\n        \"muscle\": \"QUADS\"\n    },\n    {\n        \"id\": \"25\",\n        \"title\": \"Выпады с гантелей\",\n        \"muscle\": \"QUADS\"\n    },  \n    {\n        \"id\": \"4\",\n        \"title\": \"Отведения ноги в блоке\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"26\",\n        \"title\": \"Ягодичный мост\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"27\",\n        \"title\": \"Глубокие приседания с широкой постановкой ног\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"28\",\n        \"title\": \"Отведение ног в стороны в тренажере\",\n        \"muscle\": \"GLUTES\"\n    }, \n    {\n        \"id\": \"5\",\n        \"title\": \"Скручивания в римском стуле\",\n        \"muscle\": \"ABS\"\n    }, \n    {\n        \"id\": \"29\",\n        \"title\": \"Скручивания в висе на перекладине\",\n        \"muscle\": \"ABS\"\n    }, \n    {\n        \"id\": \"6\",\n        \"title\": \"Жим со штангой лежа\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"30\",\n        \"title\": \"Жим со штангой лежа на наклонной скамье\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"31\",\n        \"title\": \"Бабочка\",\n        \"muscle\": \"CHEST\"\n    }, \n    {\n        \"id\": \"7\",\n        \"title\": \"Махи с шагтелями в стороны\",\n        \"muscle\": \"SHOULDERS\"\n    },\n    {\n        \"id\": \"16\",\n        \"title\": \"Армейский жим\",\n        \"muscle\":\"SHOULDERS\"\n    },\n    {\n        \"id\": \"17\",\n        \"title\": \"Жим гантелей сидя\",\n        \"muscle\": \"SHOULDERS\"\n    }, \n    {\n        \"id\": \"8\",\n        \"title\": \"Румынская тяга\",\n        \"muscle\": \"HAMSTRINGS\"\n    }, \n    {\n        \"id\": \"9\",\n        \"title\": \"Обезьяний хват\",\n        \"muscle\": \"FOREARMS\"\n    }, \n    {\n        \"id\": \"10\",\n        \"title\": \"Скричивания шеи с блином\",\n        \"muscle\": \"NECK\"\n    }, \n    {\n        \"id\": \"11\",\n        \"title\": \"Подтягивания\",\n        \"muscle\": \"LATS\"\n    }, \n    {\n        \"id\": \"12\",\n        \"title\": \"Экстензия\",\n        \"muscle\": \"LOWER_BACK\"\n    }, \n    {\n        \"id\": \"13\",\n        \"title\": \"Тяга нижнего блока\",\n        \"muscle\": \"MIDDLE_BACK\"\n    }, \n    {\n        \"id\": \"14\",\n        \"title\": \"Шраги с гантелями\",\n        \"muscle\": \"TRAPS\"\n    }\n]\n\nexport const ModalTypeInfo = \"INFO\";\nexport const ModalTypeAdd = \"ADD\";\n\nexport const DefaultExercise = () => {\n    return {\n        \"id\": uuidv4(),\n        title: \"\",\n        muscle: \"BICEPS\"\n    }\n}\n\nexport const DefaultModalState = {\n    open: false,\n    type: null,\n    title: null\n};\n\nexport const DefaultTraningProgram = () => {\n    return {\n        \"id\": uuidv4(),\n        \"title\": \"\",\n        \"description\": \"\",\n        \"exercises\": []\n    }\n}\n\nexport const DefaultTraningPrograms = [\n    {\n        \"id\": \"1\",\n        \"title\": \"Грудь-бицепс\",\n        \"description\": \"\",\n        \"exercises\": [\n            {\n                \"id\": \"1\",\n                \"sets\": [\n                    {\n                        repeats: 10,\n                        weight: 0,\n                        complited: false\n                    },\n                    {\n                        repeats: 10,\n                        weight: 0,\n                        complited: false\n                    },\n                    {\n                        repeats: 10,\n                        weight: 0,\n                        complited: false\n                    },\n                    {\n                        repeats: 10,\n                        weight: 0,\n                        complited: false\n                    }\n                ]\n            }\n        ]\n    },\n    \n]\n\nexport const DefaultTraning = () =>  {\n    return {\n        \"id\": uuidv4(),\n        \"notes\": \"\",\n        \"traningProgramId\": \"\",\n        \"duration\": \"\",\n        \"startAt\": \"\",\n        \"endAt\": \"\",\n        \"exercises\": [],\n        \"status\": \"ACTIVE\",\n        \"rejectCause\": \"\",\n        \"volume\": 0,\n        \"progress\": 0\n    }\n}\n\nexport const Statuses = [\n    \"NEW\", \"ACTIVE\", \"COMPLETED\", \"REJECTED\"\n]\n\nexport const DefaultSet =() => {\n    return {\n        repeats: 10,\n        weight: 0,\n        completed: false\n    } \n}\n\nexport const GenerateProgramExercise = id => {\n    let setCount = 4;\n    let sets = [];\n    for (let i = 0; i<setCount; i++) {\n        sets.push(DefaultSet())\n    }\n    return {\n        id: id,\n        sets: sets\n    }\n}\n\nexport const Weekdays = [\n    {\n        id: 0,\n        locale: \"Пн\"\n    },\n    {\n        id: 1,\n        locale: \"Вт\"\n    },\n    {\n        id: 2,\n        locale: \"Ср\"\n    },\n    {\n        id: 3,\n        locale: \"Чт\"\n    },\n    {\n        id: 4,\n        locale: \"Пт\"\n    },\n    {\n        id: 5,\n        locale: \"Сб\"\n    },\n    {\n        id: 6,\n        locale: \"Вск\"\n    }\n]","export const GetTraningPrograms = () => {\n    var items = localStorage.getItem(\"traning_programs\");\n    return items != null ? JSON.parse(items) : [];\n}\n\nexport const SetTraningPrograms = (traningPrograms) => {\n    console.log(\"Update traning program in local storage...\")\n    localStorage.setItem(\"traning_programs\", JSON.stringify(traningPrograms))\n}\n\nexport const AddTraningProgram = exercise => {\n    const items = GetTraningPrograms();\n    items.push(exercise);\n    SetTraningPrograms(items);\n}\n\nexport const RemoveTraningProgram = id => {\n    const items = GetTraningPrograms().filter(exercise => exercise.id != id);\n    SetTraningPrograms(items);\n}\n\nexport const UpdateTraningProgram = exercise => {\n    const items = GetTraningPrograms().map(e => {\n        if(e.id == exercise.id) {\n            \n            return exercise;\n        }\n\n        return e;\n    })\n    SetTraningPrograms(items);\n}\n\n\nexport const GetTraningProgramById = id => {\n    const exercises = GetTraningPrograms();\n    return exercises.find(e => e.id == id); \n}","import React from \"react\";\nimport { Box, Button } from \"@mui/material\"\n\nconst MainButton = ({isBottom, onClick, text, sx}) => {\n    return <Box sx={{\n        position: 'fixed', \n        width: \"100%\", \n        bottom: isBottom ? 0 : 40, \n        left: 0, \n        right: 0, \n        pl: 1, \n        pr: 1,\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n    }} elevation={3}>\n        <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"secondary\"\n            sx={{\n                p: 2,\n                ...sx\n            }}\n            onClick={onClick}>\n            {text}\n        </Button>\n    </Box>\n}\n\nexport default MainButton;","import { Dialog, DialogContent, DialogTitle, IconButton, Slide, Typography } from '@mui/material';\nimport React from 'react';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Modal = (props) => {\n    return <Dialog\n        open={props.open}\n        TransitionComponent={Transition}\n        PaperProps={{\n            sx: {\n                height: \"100%\",\n                width: \"100%\",\n                m: 0,\n                position: \"fixed\",\n                bottom: 0,\n                borderBottomRightRadius: 0,\n                borderBottomLeftRadius: 0\n            }\n        }}>\n        <DialogTitle sx={{pb:4}}>\n            {props.title}\n            <IconButton\n                aria-label=\"close\"\n                onClick={props.onClose}\n                sx={{\n                    position: 'absolute',\n                    right: 8,\n                    top: 8,\n                    color: (theme) => theme.palette.grey[500],\n                }}\n            >\n                <CloseIcon />\n            </IconButton>\n        </DialogTitle>\n        <DialogContent sx={{}}>\n            {props.children}\n        </DialogContent>\n    </Dialog>\n}\n\nexport default Modal;","export const GetExercises = () => {\n    var items = localStorage.getItem(\"exercises\");\n    return JSON.parse(items);\n}\n\nexport const SetExercises = exercises => {\n    console.log(\"Update exercises in local storage...\")\n    localStorage.setItem(\"exercises\", JSON.stringify(exercises))\n}\n\nexport const GetExercisesByMuscle = muscle => {\n    const items = GetExercises();\n    return items.filter(exercise => exercise.muscle == muscle);\n}\n\nexport const AddExercises = exercise => {\n    const items = GetExercises();\n    items.push(exercise);\n    SetExercises(items);\n}\n\nexport const RemoveExercises = id => {\n    const items = GetExercises().filter(exercise => exercise.id != id);\n    SetExercises(items);\n}\n\nexport const UpdateExercise = exercise => {\n    const items = GetExercises().map(e => {\n        if(e.id == exercise.id) {\n            return exercise;\n        }\n\n        return e;\n    })\n    SetExercises(items);\n}\n\nexport const CountExercisesByMuscle = muscle => {\n    return GetExercisesByMuscle(muscle).length;\n}\n\nexport const GetExerciseById = id => {\n    const exercises = GetExercises();\n    return exercises.find(e => e.id == id); \n}","import { GetExerciseById } from \"../../api/ExercisesAPI\";\nimport { GetTraningPrograms } from \"../../api/TraningProgramAPI\"\n\nexport const GetTraningProgramById = id => {\n    return GetTraningPrograms().find(e => e.id == id);\n}\n\nexport const GetUniqueMuscleGroups = program => {\n    const res = [...new Set(program.exercises.map(item => {\n        const exercise = GetExerciseById(item.id);\n        return exercise.muscle;\n    }))]\n    console.log(res);\n    return res;\n}","import React from 'react';\nimport { Paper, Typography, useTheme } from \"@mui/material\"\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\nimport { Box } from '@mui/system';\nimport { GetUniqueMuscleGroups } from \"../service/TraningProgramService\"\n\nconst TraningProgramCard = (props) => {\n    const theme = useTheme();\n    const muscleGroups = GetUniqueMuscleGroups(props.item)\n        .map(item => MuscleGroupsInfo[item] ? MuscleGroupsInfo[item].locale : '')\n        .join();\n    return <Paper\n        sx={{\n            display: \"flex\",\n            minHeight: \"160px\",\n            flexDirection: 'column',\n            p: 1,\n            ...props.sx\n        }}\n        onClick={(e) => props.onClick(e, ModalTypeInfo, props.item)}>\n        <Box sx={{ flexGrow: 4 }}>\n            {props.withCount && <Typography variant='caption' color=\"secondary\">Упражнений {props.item.exercises.length || 0}</Typography>}\n        </Box>\n        <Box sx={{ flexGrow: 1 }}>\n            <Typography>{props.item.title}</Typography>\n        </Box>\n        <Box sx={{ flexGrow: 1, display: 'flex', alignItems: \"end\" }}>\n            <Typography variant='caption' color=\"secondary\">{muscleGroups}</Typography>\n        </Box>\n    </Paper>\n}\n\nexport default TraningProgramCard;","const DatabaseName = \"workout\";\n\nexport const GetWorkouts = () => {\n    var items = localStorage.getItem(DatabaseName);\n    return items ? JSON.parse(items) : [];\n}\n\n\nexport const SetWorkouts = items => {\n    localStorage.setItem(DatabaseName, JSON.stringify(items))\n}\n\nexport const GetWorkoutById = id => {\n    return GetWorkouts().find(e => e.id == id);\n}","import { addDays, subDays } from \"date-fns\";\n\nconst PadTo2Digits = (num) => {\n    return num.toString().padStart(2, '0');\n}\n\nexport const FormatDateTime = (date) => {\n    return (\n        [\n            date.getFullYear(),\n            PadTo2Digits(date.getUTCMonth() + 1),\n            PadTo2Digits(date.getUTCDate()),\n        ].join('-') +\n        ' ' +\n        [\n            PadTo2Digits(date.getUTCHours()),\n            PadTo2Digits(date.getUTCMinutes()),\n            PadTo2Digits(date.getUTCSeconds()),\n        ].join(':')\n    );\n}\n\nexport const FormatDate = (date) => {\n    return (\n        [\n            date.getFullYear(),\n            PadTo2Digits(date.getUTCMonth() + 1),\n            PadTo2Digits(date.getUTCDate()),\n        ].join('-')\n    );\n}\n\nexport const MinutesBetweenDates = (from, to) => {\n    console.log(`From ${from} - to ${to}`)\n    return Math.floor((to.getTime() - from.getTime()) / 1000 / 60);\n}\n\nexport const GetDateRangeByPeriod = period => {\n    const date = new Date();\n    if (period == \"week\") {\n        date.setDate(date.getDate() - 7)\n    }\n    if (period == \"year\") {\n        date.setDate(date.getDate() - 365)\n    }\n    if (period == \"month\") {\n        date.setDate(date.getDate() - 30)\n    }\n\n    return { to: new Date(), from: date }\n}\n\nexport const GetDaysByRange = (startDaysCount, endDaysCount) => {\n    const now = new Date(); // get current date\n    const buffer = subDays(now, startDaysCount)\n\n    const result = [];\n\n    for(let i = 0; i<= startDaysCount + endDaysCount; i++) {\n        result.push(addDays(buffer, i))\n    }\n\n    return result;\n    \n}\n\nexport const DatesIsEquals = (dateLeft, dateRight) => {\n    return FormatDate(dateLeft) == FormatDate(dateRight);\n}","import { GetWorkouts, SetWorkouts, GetWorkoutById as ById } from \"../../api/WorkoutAPI\";\nimport { DatesIsEquals, FormatDate, MinutesBetweenDates } from \"../../utils/DateUtils\";\nimport { DefaultTraning } from \"../Constants\"\n\nexport const CreateWorkout = (selectedProgram) => {\n    const traning = DefaultTraning();\n    traning.traningProgramId = selectedProgram.id;\n    traning.startAt = new Date();\n\n    traning.exercises = selectedProgram.exercises.map(exercise => {\n\n        return {\n            id: exercise.id,\n            sets: exercise.sets.map(set => {\n                return {\n                    repeats: set.repeats,\n                    weight: 0,\n                    completed: false\n                }\n            })\n        }\n    })\n\n    const items = GetWorkouts();\n    items.push(traning);\n    SetWorkouts(items);\n    return traning;\n}\n\nexport const GetTodayActiveWorkouts = () => {\n    return GetWorkouts()\n        .filter(e => IsActive(e))\n}\n\nexport const GetWorkoutHistory = (date) => {\n    return GetWorkouts()\n        .filter(e => {\n            if (!IsActive(e) && DatesIsEquals(new Date(e.startAt), date))\n                return true;\n\n            return false;\n        })\n}\n\nexport const GetWorkoutById = id => {\n    return ById(id);\n}\n\nexport const SaveWorkout = workout => {\n    const items = GetWorkouts();\n    SetWorkouts(items.map(item => {\n        return item.id == workout.id ? workout : item\n    }));\n}\n\nexport const StartWorkout = workout => {\n    workout.startAt = new Date();\n    workout.status = \"ACTIVE\";\n    SaveWorkout(workout)\n    return workout;\n}\n\nexport const CompleteWorkout = workout => {\n    workout.endAt = new Date();\n    workout.status = \"COMPLETED\";\n    workout.duration = MinutesBetweenDates(new Date(workout.startAt), workout.endAt);\n    workout.volume = workout.exercises\n        .reduce((result, exercise) => result + CalcExerciseVolume(exercise), 0);\n    workout.progress = CalcProgressInPercent(workout);\n    SaveWorkout(workout)\n    return workout;\n}\n\nexport const RejectWorkout = (workout, cause) => {\n    workout.endAt = new Date();\n    workout.status = \"REJECTED\";\n    workout.rejectCause = cause\n    SaveWorkout(workout)\n    return workout;\n}\n\nexport const IsNew = workout => {\n    return workout.status == \"NEW\";\n}\n\nexport const IsActive = workout => {\n    return workout.status == \"ACTIVE\";\n}\n\nexport const IsCompleted = workout => {\n    return workout.status == \"COMPLETED\";\n}\n\nexport const CalcExerciseVolume = workoutExercise => {\n    let result = workoutExercise.sets\n        .filter(set => set.completed)\n        .reduce((sum, set) => sum + set.repeats * set.weight, 0);\n    return result;\n}\n\nexport const CalcProgressInPercent = workout => {\n    let countOfSets = GetWorkoutSetsCount(workout);\n    let completedSets = workout.exercises.reduce((result, exercise) => result + CalcCompletedSets(exercise), 0)\n    return parseInt(((completedSets / countOfSets) * 100).toFixed(0))\n}\n\nexport const CalcCompletedSets = workoutExercise => {\n    return workoutExercise.sets.filter(set => set.completed).length\n}\n\nexport const GetWorkoutSetsCount = workout => {\n    return workout.exercises.reduce((result, exercise) => result + exercise.sets.length, 0)\n}\n\nexport const GetWorkoutsByDateRange = range => {\n    return GetWorkouts()\n        .filter(workout => {\n            const endAt = new Date(workout.endAt);\n            if (endAt >= range.from && endAt <= range.to) {\n                return workout;\n            }\n        })\n}","import { Box, Typography } from '@mui/material';\nimport React from 'react';\n\nconst TextWithIcon = (props) => {\n    return <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n        {props.icon}\n        <Typography variant=\"caption\" gutterBottom sx={{ mr: 1, ml: 1, mb: 0, lineHeight: 0 }}>{props.text}</Typography>\n    </Box>\n}\n\nexport default TextWithIcon;","import React, { useEffect, useState } from 'react';\nimport { Card, CardActionArea, CardActions, CardHeader, LinearProgress, styled, useTheme } from \"@mui/material\";\nimport { Box, keyframes } from '@mui/system';\n\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport TextWithIcon from '../base/TextWithIcon';\nimport { FormatDate } from '../../utils/DateUtils';\nimport { CalcProgressInPercent } from \"../service/WorkoutService\"\n\nconst animation = keyframes`\n0% {\n    background-position: 0% 50%;\n}\n50% {\n    background-position: 100% 50%;\n}\n100% {\n    background-position: 0% 50%;\n}\n`\n\nconst TraningCard = (props) => {\n    return <CustomCard {...props} />\n}\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n    animation: `${animation} 5s ease infinite`,\n    backgroundSize: \"200% 100%\"\n}))\n\nconst CustomCard = props => {\n    const theme = useTheme();\n    const isActive = props.status === \"ACTIVE\";\n    const [progress, updateProgress] = useState(0)\n    useEffect(() => {\n        if (isActive)\n            updateProgress(CalcProgressInPercent(props));\n    }, [props])\n\n    console.log(\"progress\", progress)\n    return <StyledCard\n        onClick={props.onClick}\n        sx={{\n            display: 'flex',\n            backgroundImage: isActive ? 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)' : 'none',\n            ...props.sx\n        }}>\n        <CardActionArea>\n            <CardHeader title={props.title}>\n            </CardHeader>\n            <CardActions sx={{ justifyContent: \"flex-end\", p: 2 }}>\n                <Box sx={{ display: 'flex', flexDirection: \"column\", flex: \"1 0 auto\" }}>\n                </Box>\n                {!isActive && <Box sx={{ display: \"flex\", alignItems: 'center', pl: 1 }}>\n                    <TextWithIcon\n                        icon={<CalendarMonthIcon />}\n                        text={FormatDate(new Date(props.startAt))} />\n                    <TextWithIcon\n                        icon={<AccessTimeIcon />}\n                        text={`${props.duration} мин.`} />\n                </Box>}\n                {isActive && <Box sx={{ width: \"100%\", position: \"absolute\", bottom: 0, right: 0 }}>\n                    <LinearProgress variant=\"determinate\" value={progress} sx={{\n                        height: 16\n                    }} />\n                </Box>}\n\n            </CardActions>\n        </CardActionArea>\n    </StyledCard>\n}\n\nexport default TraningCard;","import React, { useEffect, useRef, useState } from 'react';\nimport { Box } from \"@mui/system\";\nimport { useTheme } from '@emotion/react';\nimport { Typography } from '@mui/material';\nimport { DatesIsEquals, GetDaysByRange } from '../../utils/DateUtils';\n\nconst id_prefix = \"calendar-element\"\n\nconst DateSelector = ({ startDaysCount, endDaysCount, selectedDate, onSelectDate }) => {\n    const cellRefs = useRef([]);\n    const sliderRef = useRef(null)\n    const selectedDateRef = useRef(null)\n    const theme = useTheme();\n    const days = GetDaysByRange(startDaysCount, endDaysCount);\n\n    const [triggerElementId, updateTriggerElementId] = useState(null)\n\n    useEffect(() => {\n        updateTriggerElementId(selectedDateRef.current.id)\n    }, [selectedDate])\n\n    useEffect(() => {\n        if (triggerElementId != null)\n            alignWeek();\n    }, [triggerElementId])\n\n    const alignWeek = () => {\n        const element = selectedDate.getDay() == 0 ? cellRefs.current[6] : cellRefs.current[selectedDate.getDay() - 1]\n        const triggerElement = document.getElementById(triggerElementId);\n        console.log(cellRefs)\n        console.log(triggerElement.offsetLeft)\n        sliderRef.current.scrollTo(triggerElement.offsetLeft - element.offsetLeft, 0)\n    }\n\n    const onScroll = () => {\n        const prevTrigger = cellRefs.current[0];\n        const triggerElement = document.getElementById(triggerElementId);\n        const index = triggerElementId.replace(/\\D/g, \"\");\n\n    }\n\n    return <div>\n        <Box sx={{\n            p: 0,\n            display: 'flex',\n            width: \"100%\",\n            overflowX: 'hidden',\n            whiteSpace: 'nowrap',\n            flexDirection: 'column',\n            flexFlow: \"row wrap\"\n        }}>\n            <Box sx={{\n                display: 'flex',\n                justifyContent: 'space-around',\n                alignItems: 'center',\n                width: \"100%\"\n            }}>\n                {[\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\", \"Вск\"].map((date, idx) => <Box key={idx} sx={{\n                    display: 'flex',\n                    p: 1,\n                    width: \"calc(100% / 7)\",\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}>\n                    <Typography color=\"secondary\">{date}</Typography>\n                </Box>)}\n            </Box>\n            <Box sx={{\n                display: 'flex',\n                justifyContent: 'space-around',\n                alignItems: 'center',\n                width: \"100%\",\n                height: \"50px\",\n                position: \"relative\"\n            }}>\n                {[1, 2, 3, 4, 5, 6, 7].map((index, idx) => <Box ref={el => cellRefs.current[idx] = el} key={idx} sx={{\n                    display: 'flex',\n                    p: 1,\n                    width: \"calc(100% / 7)\",\n                    height: \"100%\",\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}>\n                </Box>)}\n                <Box ref={sliderRef}\n                    onTouchEnd={alignWeek}\n                    onScroll={onScroll}\n                    sx={{\n                        position: 'absolute',\n                        bottom: 0,\n                        width: \"100%\",\n                        height: \"100%\",\n                        overflowX: \"scroll\",\n                    }}>\n                    {days.map((date, index) => <Box\n                        id={`${id_prefix}-${index}`}\n                        ref={(el) => {\n                            if (DatesIsEquals(selectedDate, date))\n                                selectedDateRef.current = el\n                        }}\n                        key={index}\n                        sx={{\n                            display: 'inline-block',\n                            p: 1,\n                            width: \"calc(100% / 7)\",\n                            height: \"100%\",\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                        onClick={() => onSelectDate(date)}>\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                height: \"100%\",\n                                justifyContent: 'center',\n                                alignItems: \"center\",\n                                borderRadius: \"50%\",\n                                backgroundColor: DatesIsEquals(selectedDate, date) ? theme.palette.secondary.dark : \"transient\"\n                            }}>\n                            <Typography color=\"secondary\" variant='caption'>{date.getDate()}</Typography>\n                        </Box>\n                    </Box>)}\n                </Box>\n            </Box>\n        </Box>\n    </div>\n}\n\nexport default DateSelector;","import { Box, Divider, Grid, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { GetTraningPrograms } from \"../../api/TraningProgramAPI\";\nimport MainButton from \"../base/MainButton\";\nimport Modal from \"../base/Modal\";\nimport TraningProgramCard from \"../program/TraningProgramCard\";\nimport { CreateWorkout, GetTodayActiveWorkouts, GetWorkoutHistory } from \"../service/WorkoutService\";\nimport { GetTraningProgramById } from \"../service/TraningProgramService\";\nimport TraningCard from \"../traning/TraningCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport DateSelector from \"../base/DateSelector\";\n\nconst EmptyResult = () => <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\n    <Typography variant=\"caption\">Пока тренировок нет</Typography>\n</Box>\n\nexport const TraningScene = props => {\n    const [todayTranings, setTodayTranings] = useState([])\n    const [traningHistory, setTraningHistory] = useState([])\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedDate, setSelectedDate] = useState(new Date())\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const todayTranings = GetTodayActiveWorkouts();\n        setTodayTranings(todayTranings);\n    }, [])\n\n    useEffect(() => {\n        console.log(selectedDate)\n        const traningHistory = GetWorkoutHistory(selectedDate);\n        setTraningHistory(traningHistory)\n    }, [selectedDate])\n\n    const onStart = async (e, modaType, traningProgram) => {\n        const workout = await CreateWorkout(traningProgram);\n        navigateToWorkout(workout.id)\n    }\n\n    const handleChangeOpen = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const closeModal = () => {\n        handleChangeOpen();\n    }\n\n    const onChangeModal = () => {\n        if (isOpen) {\n            closeModal();\n        } else {\n            handleChangeOpen();\n        }\n    }\n\n    const navigateToWorkout = id => {\n        navigate(`/workout-process/${id}`)\n    }\n\n    const onSelectDate = newDate => {\n        setSelectedDate(newDate)\n    }\n\n    return <div>\n        <Typography variant='h6' align=\"center\">Мои тренировки</Typography>\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\n            <Typography>Активные</Typography>\n        </Box>\n        {todayTranings.length > 0\n            ? <Grid container spacing={2}>\n                {todayTranings.map((traning, idx) =>\n                    <Grid item key={idx} xs={12}>\n                        <TraningCard\n                            onClick={() => { navigateToWorkout(traning.id) }}\n                            title={GetTraningProgramById(traning.traningProgramId).title}\n                            {...traning}\n                            duration={traning.duration} />\n                    </Grid>\n                )}\n            </Grid>\n            : <EmptyResult />}\n\n        <Divider light sx={{ mt: 2, mb: 2 }}></Divider>\n\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\n            <Typography>История</Typography>\n        </Box>\n\n        <DateSelector startDaysCount={30} endDaysCount={30} selectedDate={selectedDate} onSelectDate={onSelectDate}/>\n\n        {traningHistory.length > 0\n            ? <Grid container spacing={2}>\n                {traningHistory.map((traning, idx) =>\n                    <Grid item key={idx} xs={12}>\n                        <TraningCard\n                            title={GetTraningProgramById(traning.traningProgramId).title}\n                            onClick={() => { navigateToWorkout(traning.id) }}\n                            {...traning}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n            : <EmptyResult />}\n\n\n        <Modal\n            open={isOpen}\n            onClose={() => onChangeModal(null)}\n            title=\"Выбери программу тренировок\">\n            <Grid container spacing={2}>\n                {GetTraningPrograms().map((item, idx) => <Grid item xs={12} key={idx}>\n                    <TraningProgramCard\n                        onClick={onStart}\n                        key={idx}\n                        item={item}\n                        showCount={false}\n                        sx={{ minHeight: \"80px\" }} />\n                </Grid>\n                )}\n            </Grid>\n\n\n        </Modal>\n\n        <MainButton text=\"Начать тренировку!\" onClick={onChangeModal} />\n    </div>\n}\n\nexport default TraningScene;","import { Box, FormControl, InputLabel, MenuItem, Select, TextField } from '@mui/material';\nimport React from 'react';\nimport { MuscleGroupsEnum } from '../Constants';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst ExerciseFrom = (props) => {\n    return <Box>\n        <TextField\n            onChange={(e) => { props.onChange(e, \"title\") }}\n            fullWidth\n            id=\"exercise-title\"\n            label=\"Название\"\n            variant=\"standard\"\n            value={props.exercise.title}\n            sx={{ pt: 1, pb: 1 }} />\n\n        <FormControl\n            variant='standard'\n            sx={{ m: 1, ml: 0, mr: 0, pt: 1, pb: 1 }}\n            fullWidth>\n            <InputLabel id=\"demo-multiple-name-label\">Мышечные группы</InputLabel>\n            <Select\n                onChange={(e) => { props.onChange(e, \"muscle\") }}\n                labelId=\"demo-multiple-name-label\"\n                id=\"demo-multiple-name\"\n                value={props.exercise.muscle}\n                MenuProps={MenuProps}>\n                {MuscleGroupsEnum.map((name) => (\n                    <MenuItem\n                        key={name}\n                        value={name}>\n                        {name}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    </Box>\n}\n\nexport default ExerciseFrom;","import { Box } from '@mui/system';\nimport React from 'react';\nimport MainButton from '../base/MainButton';\nimport ExerciseFrom from './ExerciseForm';\n\nconst CreateExercise = (props) => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\" }}>\n            <ExerciseFrom\n                exercise={props.exercise}\n                onChange={props.onChange} />\n\n            <MainButton text=\"Создать\" onClick={props.onSave} isBottom={true} />\n        </Box>\n    </div>\n};\n\nexport default CreateExercise;","import { Button } from '@mui/material';\nimport React from 'react';\n\nconst RemoveEntityButton = props => {\n    return <Button\n        onClick={props.onClick}\n        fullWidth\n        color=\"error\"\n        sx={{ mt: 1, pl: 0 }}\n        disableRipple>\n            {props.text}\n    </Button>\n}\n\nexport default RemoveEntityButton;","import { Box } from '@mui/system';\nimport React from 'react';\nimport MainButton from '../base/MainButton';\nimport RemoveEntityButton from '../base/RemoveEntityButton';\nimport ExerciseFrom from './ExerciseForm';\n\nconst ExerciseInfo = (props) => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\"}}>\n            <ExerciseFrom\n                exercise={props.exercise}\n                onChange={props.onChange} />\n\n            <RemoveEntityButton onClick={props.onRemove} text=\"Удалить упражнение\"/>\n\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\n        </Box>\n    </div>\n};\n\nexport default ExerciseInfo;","import { Accordion as MuiAccordion, AccordionDetails as MuiAccordionDetails, AccordionSummary as MuiAccordionSummary, Badge, Button } from \"@mui/material\";\nimport React, { useState } from \"react\";\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport { Box, styled } from \"@mui/system\";\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo } from \"../Constants\";\nimport { CountExercisesByMuscle, GetExercisesByMuscle } from \"../../api/ExercisesAPI\";\n\nconst Accordion = styled((props) => (\n    <MuiAccordion elevation={0} {...props} />\n))(({ theme }) => ({\n    '&:not(:last-child)': {\n        borderBottom: 0,\n    }\n}));\n\nconst AccordionSummary = styled((props) => (\n    <MuiAccordionSummary\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n        {...props}\n    />\n))(({ theme }) => ({\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.primary.light,\n    flexDirection: 'row-reverse',\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(90deg)',\n    },\n    '& .MuiAccordionSummary-content': {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n    padding: theme.spacing(2),\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\nconst ExerciseList = (props) => {\n    const [expanded, setExpanded] = useState(null)\n\n    const handleChangeExpanded = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const onClickToExercise = (e, exercise) => {\n        e.stopPropagation();\n        props.onClick(e, ModalTypeInfo, exercise);\n    }\n\n    const calcCount = (muscle) => {\n        return CountExercisesByMuscle(muscle);\n    }\n\n    return <div>\n        {MuscleGroupsEnum.map((muscle, idx) => <Accordion\n            key={idx}\n            expanded={expanded == muscle}\n            onChange={handleChangeExpanded(muscle)}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1bh-content\"\n                id=\"panel1bh-header\">\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", pr: 2 }}>\n                    {MuscleGroupsInfo[muscle].locale}\n                    <Badge showZero badgeContent={calcCount(muscle)} color=\"secondary\" sx={{zIndex: 0}}></Badge>\n                </Box>\n            </AccordionSummary>\n            <AccordionDetails>\n                {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\n                    <Button\n                        color=\"secondary\"\n                        onClick={(e) => onClickToExercise(e, exercise)}\n                        fullWidth\n                        sx={{ justifyContent: \"flex-start\", textAlign: \"left\" }}\n                        disableRipple>\n                        {exercise.title}\n                    </Button>\n                </Box>)}\n            </AccordionDetails>\n        </Accordion>)\n        }\n    </div >\n}\n\nexport default ExerciseList;","import { Box, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { AddExercises, RemoveExercises, UpdateExercise } from \"../../api/ExercisesAPI\";\nimport MainButton from \"../base/MainButton\";\nimport Modal from \"../base/Modal\";\nimport { DefaultExercise, ModalTypeAdd, ModalTypeInfo } from \"../Constants\";\nimport CreateExercise from \"../exercise/CreateExercise\";\nimport ExerciseInfo from \"../exercise/ExerciseInfo\";\nimport ExerciseList from \"../exercise/ExerciseList\";\n\nconst defaultModalState = {\n    open: false,\n    type: null,\n    title: null\n};\n\nconst ExercisesScene = props => {\n    const [modalInfo, setModalInfo] = useState(defaultModalState);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const handleChangeExercise = (e, field) => {\n        var item = selectedItem;\n        item[field] = e.target.value;\n        setSelectedItem({ ...item });\n    }\n\n    const removeExercise = () => {\n        RemoveExercises(selectedItem.id)\n        closeModal();\n    }\n\n    const closeModal = () => {\n        setModalInfo(defaultModalState);\n        setSelectedItem(null)\n    }\n\n    const onChangeModal = (e, type, item) => {\n        if (modalInfo.open) {\n            closeModal();\n        } else {\n            setModalInfo({\n                open: true,\n                type: type,\n                title: type == ModalTypeAdd ? \"Создание упражнения\" : null\n            });\n            setSelectedItem({ ...item });\n        }\n    }\n\n    const saveExercise = (e) => {\n        UpdateExercise(selectedItem);\n        closeModal();\n    }\n\n    const addExeecise = (e) => {\n        AddExercises(selectedItem);\n        closeModal();\n    }\n\n    return <div>\n        <Typography variant='h6' align=\"center\">Упражнения</Typography>\n        <ExerciseList onClick={onChangeModal} />\n        <Modal\n            open={modalInfo.open}\n            onClose={(e) => onChangeModal(e, null, null)}\n            title={modalInfo.title}>\n            {modalInfo.type == ModalTypeInfo && <ExerciseInfo\n                onChange={handleChangeExercise}\n                exercise={selectedItem}\n                onRemove={removeExercise}\n                onSave={saveExercise} />}\n            {modalInfo.type == ModalTypeAdd && <CreateExercise\n                onChange={handleChangeExercise}\n                exercise={selectedItem}\n                onSave={addExeecise} />}\n        </Modal>\n\n        <MainButton text=\"Создать упражнение\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultExercise())} />\n    </div>\n}\n\nexport default ExercisesScene;","import { Accordion, AccordionDetails, AccordionSummary as MuiAccordionSummary, Box, Button, styled } from '@mui/material';\nimport React from 'react';\nimport { GetExercisesByMuscle } from '../../api/ExercisesAPI';\nimport MainButton from '../base/MainButton';\nimport { MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\nimport CheckIcon from '@mui/icons-material/Check';\n\nconst AccordionSummary = styled((props) => (\n    <MuiAccordionSummary\n        {...props}\n    />\n))(({ theme }) => ({\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.primary.light,\n    flexDirection: 'row-reverse',\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(90deg)',\n    },\n    '& .MuiAccordionSummary-content': {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst ExercisesSelector = (props) => {\n    return <div>\n        <Box sx={{ pb: 14 }}>\n            {MuscleGroupsEnum.map((muscle, idx) => <Accordion\n                key={idx}\n                expanded={true}>\n                <AccordionSummary\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\">\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", p: 1 }}>\n                        {MuscleGroupsInfo[muscle].locale}\n                    </Box>\n                </AccordionSummary>\n                <AccordionDetails>\n                    {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\n                        <Button\n                            endIcon={props.isSelected(exercise.id) ? <CheckIcon /> : <div></div>}\n                            color=\"secondary\"\n                            onClick={(e) => props.handleCheckItem(exercise.id)}\n                            fullWidth\n                            sx={{ justifyContent: \"space-between\", textAlign: \"left\" }}\n                            disableRipple>\n                            {exercise.title}\n                        </Button>\n                    </Box>)}\n                </AccordionDetails>\n            </Accordion>)}\n        </Box>\n\n        <MainButton text={`Применить`} onClick={props.onSave} isBottom={true} />\n    </div>\n}\n\nexport default ExercisesSelector;","import React from 'react';\nimport { Button } from \"@mui/material\";\n\nconst AddSetButton = (props) => {\n    return <Button\n        size='small'\n        variant='contained'\n        color=\"secondary\"\n        onClick={props.onClick}>\n        {props.text}\n    </Button>\n}\n\nexport default AddSetButton;","import { Checkbox, Divider, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from '@mui/material';\nimport { Box, useTheme } from '@mui/system';\nimport React from 'react';\nimport AddSetButton from '../base/AddSetButton';\nimport { MuscleGroupsInfo } from '../Constants';\n\nconst SetsTable = ({ item, sets, handleChangeInput, handleChangeCompleted, addSet, disableWeigth, disableCompleted, infoMode, inputMode }) => {\n    const theme = useTheme();\n    console.log(sets);\n\n    return <Paper sx={{ p: 1, mb: 2, mt: 1 }}>\n        <Box sx={{ display: 'flex' }}>\n            <Box sx={{ display: 'flex', flexDirection: 'column', pl: 2, pr: 2 }}>\n                <Typography>{item.title}</Typography>\n                <Typography variant='caption'>{MuscleGroupsInfo[item.muscle].locale}</Typography>\n            </Box>\n        </Box>\n\n        <Divider />\n\n        <Box>\n            <TableContainer>\n                <Table sx={{ width: \"100%\", tableLayout: 'fixed' }} size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Подход</TableCell>\n                            <TableCell align='center'>Повторы</TableCell>\n                            {!disableWeigth && <TableCell align='center'>Вес</TableCell>}\n                            {!disableCompleted && <TableCell>Выполнен</TableCell>}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {sets.map((set, index) =>\n                            <TableRow key={index}>\n                                <TableCell>{index + 1}</TableCell>\n                                <TableCell align='center'>\n                                    {inputMode && <TextField\n                                        inputProps={{\n                                            sx: { textAlign: \"center\" }\n                                        }}\n                                        size='small'\n                                        name=\"repeats\"\n                                        type={\"number\"}\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\n                                        fullWidth\n                                        value={set.repeats} />}\n                                    {infoMode && set.repeats}\n                                </TableCell>\n                                {!disableWeigth && <TableCell align='center'>\n                                    {inputMode && <TextField\n                                        inputProps={{\n                                            sx: { textAlign: \"center\" }\n                                        }}\n                                        size='small'\n                                        name=\"weight\"\n                                        type={\"number\"}\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\n                                        fullWidth\n                                        value={set.weight} />}\n                                    {infoMode && set.weight}\n                                </TableCell>}\n                                {!disableCompleted && <TableCell align='right'>\n                                    <Checkbox\n                                        disabled={infoMode}\n                                        name=\"completed\"\n                                        color='secondary'\n                                        checked={set.completed}\n                                        onChange={(e) => handleChangeCompleted(e, item, index)} />\n                                </TableCell>}\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {inputMode && <Box sx={{ display: 'flex', justifyContent: 'flex-end', pt: 1 }}>\n                <AddSetButton text=\"Добавить подход\" onClick={e => addSet(item)} />\n            </Box>}\n        </Box>\n    </Paper>\n}\n\nexport default SetsTable;","import { Box, Button, Grid, TextField, Typography, useTheme } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { GetExerciseById } from '../../api/ExercisesAPI';\nimport Modal from '../base/Modal';\nimport { DefaultSet } from '../Constants';\nimport ExercisesSelector from '../exercise/ExercisesSelector';\nimport SetsTable from './SetsTable';\n\nconst GenerateExercise = id => {\n    return {\n        id: id,\n        sets: [\n            {\n                repeats: 10,\n                completed: false\n            },\n            {\n                repeats: 10,\n                completed: false\n            },\n            {\n                repeats: 10,\n                completed: false\n            },\n            {\n                repeats: 10,\n                completed: false\n            }\n        ]\n    }\n}\n\nconst TraningProgramForm = props => {\n    const [selected, setSelected] = useState([]);\n    const [isOpen, setOpen] = useState(false)\n    const theme = useTheme();\n\n    useEffect(() => {\n        setSelected([...props.item.exercises])\n    }, [])\n\n    const isSelected = id => {\n        return selected.find(e => e.id == id) || false\n    }\n\n    const handleCheckItem = id => {\n        if (!isSelected(id)) {\n            setSelected([...selected, GenerateExercise(id)])\n        } else {\n            setSelected(selected.filter(e => e.id != id))\n        }\n    }\n\n    const onClose = () => {\n        setSelected(props.item.exercises)\n        handleChangeOpen();\n    }\n\n    const handleChangeOpen = () => {\n        setOpen(!isOpen)\n    }\n\n    const onSaveExercises = () => {\n        props.setExercises(selected);\n        handleChangeOpen();\n    }\n\n    const handleChangeRepeats = (e, exercise, index) => {\n        let target = selected.find(e => e.id == exercise.id);\n        target.sets[index].repeats = parseInt(e.target.value)\n        setSelected(selected.map(e => {\n            if (e.id == target.id)\n                return target;\n\n            return e;\n        }))\n    }\n\n    const addSet = (exercise) => {\n        let target = selected.find(e => e.id == exercise.id);\n        target.sets.push(DefaultSet());\n        setSelected(selected.map(e => {\n            if (e.id == target.id)\n                return target;\n\n            return e;\n        }))\n    }\n\n    return <Box>\n        <TextField\n            onChange={(e) => { props.onChange(e, \"title\") }}\n            fullWidth\n            id=\"exercise-title\"\n            label=\"Название\"\n            variant=\"standard\"\n            value={props.item.title}\n            sx={{ pt: 1, pb: 1 }} />\n\n        {props.item.exercises.length == 0 && <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 2 }}>\n            <Typography variant='caption'>Упражнения не добавлены</Typography>\n        </Box>}\n\n\n        {props.item.exercises.length > 0 && <Grid container spacing={2}>\n            {props.item.exercises.map((exercise, idx) => {\n                const item = GetExerciseById(exercise.id);\n                return <Grid item xs={12} key={idx}>\n                    <SetsTable\n                        item={item}\n                        sets={exercise.sets}\n                        handleChangeInput={handleChangeRepeats}\n                        disableWeigth disableCompleted inputMode\n                        addSet={addSet}\n                    />\n                </Grid>\n            })}\n        </Grid>\n        }\n\n        <Modal\n            open={isOpen}\n            onClose={onClose}\n            title=\"Добавление упражнений\">\n            <ExercisesSelector\n                handleCheckItem={handleCheckItem}\n                selectedExercises={props.item.exercises}\n                isSelected={isSelected}\n                selected={selected}\n                onSave={onSaveExercises} />\n        </Modal>\n\n        <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={handleChangeOpen}>\n           Изменить упражнения\n        </Button>\n    </Box >\n}\n\nexport default TraningProgramForm;","import { Box } from '@mui/system';\nimport React from 'react';\nimport MainButton from '../base/MainButton';\nimport TraningProgramForm from './TraningProgramForm';\n\nconst CreateTraningProgram = props => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\n            <TraningProgramForm\n                item={props.item}\n                onChange={props.onChange}\n                setExercises={props.setExercises}\n                onSave={props.setExercises}/>\n\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\n        </Box>\n    </div>\n}\n \nexport default CreateTraningProgram;","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport MainButton from '../base/MainButton';\nimport TraningProgramForm from './TraningProgramForm';\n\nconst TraningProgramInfo = props => {\n    return <div>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\n            <TraningProgramForm\n                item={props.item}\n                onChange={props.onChange}\n                setExercises={props.setExercises}\n                onSave={props.setExercises}/>\n\n            <Button\n                onClick={props.onRemove}\n                fullWidth\n                color=\"error\"\n                sx={{  mt: 1, pl: 0 }}\n                disableRipple>\n                Удалить программу\n            </Button>\n\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true}/>\n        </Box>\n    </div>\n}\n \nexport default TraningProgramInfo;","import { Grid } from '@mui/material';\nimport React from 'react';\nimport { GetTraningPrograms } from '../../api/TraningProgramAPI';\nimport TraningProgramCard from \"../program/TraningProgramCard\";\n\nconst TraningProgramList = (props) => {\n    return <Grid container spacing={2}>\n        {GetTraningPrograms().map((program, idx) => <Grid key={idx} item xs={6}>\n            <TraningProgramCard item={program} onClick={props.onClick} withCount={props.withCount}/>\n        </Grid>)}\n    </Grid>\n}\n \nexport default TraningProgramList;","import { Box, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport { AddTraningProgram, RemoveTraningProgram, UpdateTraningProgram } from '../../api/TraningProgramAPI';\nimport MainButton from '../base/MainButton';\nimport Modal from '../base/Modal';\nimport { DefaultModalState, DefaultTraningProgram, ModalTypeAdd, ModalTypeInfo } from '../Constants';\nimport CreateTraningProgram from '../program/CreateTraningProgram';\nimport TraningProgramInfo from '../program/TraningProgramInfo';\nimport TraningProgramList from '../program/TraningProgramList';\n \nexport const TraningProgramScene = (props) => {\n    const [modalInfo, setModalInfo] = useState(DefaultModalState);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const handleChangeItem = (e, field) => {\n        var item = selectedItem;\n        item[field] = e.target.value;\n        setSelectedItem({ ...item });\n    }\n\n    const removeItem = () => {\n        RemoveTraningProgram(selectedItem.id)\n        closeModal();\n    }\n\n    const closeModal = () => {\n        setModalInfo(DefaultModalState);\n        setSelectedItem(null)\n    }\n\n    const onChangeModal = (e, type, item) => {\n        if (modalInfo.open) {\n            closeModal();\n        } else {\n            setModalInfo({\n                open: true,\n                type: type,\n                title: type == ModalTypeAdd ? \"Создание программы\" : null\n            });\n            setSelectedItem({ ...item });\n        }\n    }\n\n    const saveItem = (e) => {\n        UpdateTraningProgram(selectedItem);\n        closeModal();\n    }\n\n    const addItem = (e) => {\n        AddTraningProgram(selectedItem);\n        closeModal();\n    }\n\n    const setExercises = (exercises) => {\n        console.log(\"Exercises\", exercises);\n        setSelectedItem({...selectedItem, exercises: exercises})\n    }\n\n    return <div>\n        <Typography variant='h6' align=\"center\">Тренировочные программы</Typography>\n        <TraningProgramList onClick={onChangeModal} withCount/>\n        <Modal\n            open={modalInfo.open}\n            onClose={(e) => onChangeModal(e, null, null)}\n            title={modalInfo.title}>\n            {modalInfo.type == ModalTypeInfo && <TraningProgramInfo\n                onChange={handleChangeItem}\n                item={selectedItem}\n                onRemove={removeItem}\n                onSave={saveItem}\n                setExercises={setExercises} />}\n            {modalInfo.type == ModalTypeAdd && <CreateTraningProgram\n                onChange={handleChangeItem}\n                item={selectedItem}\n                onSave={addItem}\n                setExercises={setExercises} />}\n        </Modal>\n\n        <MainButton text=\"Создать программу\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultTraningProgram())}/>\n    </div>\n}\n \nexport default TraningProgramScene;","import React from \"react\";\nimport { BottomNavigation, BottomNavigationAction, Paper } from \"@mui/material\";\n\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\nimport FitbitIcon from '@mui/icons-material/Fitbit';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\nimport QueryStatsIcon from '@mui/icons-material/QueryStats';\nimport { Person } from \"@mui/icons-material\";\n\nconst Navigation = props => {\n    return <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\n        <BottomNavigation value={props.activeScene} onChange={props.handleChange} showLabels>\n            <BottomNavigationAction value=\"traning-programs\" icon={<ListAltIcon />} />\n            <BottomNavigationAction value=\"exercises\" icon={<FitbitIcon />} />\n            <BottomNavigationAction value=\"traning\" icon={<FitnessCenterIcon />} />\n            <BottomNavigationAction value=\"progress\" icon={<QueryStatsIcon />} />\n            <BottomNavigationAction value=\"account\" icon={<Person />} />\n        </BottomNavigation>\n    </Paper>\n}\n\nexport default Navigation;","import { Box, createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport Navigation from './Navigation'\n\nconst darkTheme = createTheme({\n    palette: {\n        primary: {\n            main: \"#EAE1DF\",\n            light: \"#f7f3f3\",\n            dark: \"#be9d9d\",\n            contrastText: \"#322E18\"\n        },\n        secondary: {\n            main: \"#545E56\",\n            light: \"#EAECEA\",\n            dark: \"#A9B1A9\"\n        },\n        background: {\n            default: \"#f7f3f3\"\n        }\n    },\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n    }\n});\n\nconst Layout = ({ children }) => {\n    const [scene, setScene] = useState(\"traning\")\n    const location = useLocation();\n    const navigate = useNavigate();\n    useEffect(() => {\n        const path = location.pathname.substring(1);\n        if (path.length == 0 || path.includes('workout-process')) {\n            setScene(\"traning\")\n        } else {\n            setScene(path)\n        }\n    }, [location])\n\n    const handleChange = (event, newValue) => {\n        navigate(`/${newValue}`)\n    };\n\n    return <Box sx={{ display: 'flex', height: '100%', justifyContent: 'center', pb: 7, pt: 0 }}>\n        <CssBaseline />\n        <ThemeProvider theme={darkTheme}>\n            <Box component={\"main\"} sx={{ p: 1, width: '100%', height: '100%', overflowY: \"scroll\", pb: 10 }}>\n                <Outlet />\n                <Navigation activeScene={scene} handleChange={handleChange} />\n            </Box>\n        </ThemeProvider>\n    </Box>\n}\n\nexport default Layout;","import { Button, Grid, Paper, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { GetExerciseById } from '../../api/ExercisesAPI';\nimport MainButton from '../base/MainButton';\nimport Modal from '../base/Modal';\nimport { DefaultSet, GenerateProgramExercise } from '../Constants';\nimport ExercisesSelector from '../exercise/ExercisesSelector';\nimport SetsTable from '../program/SetsTable';\nimport { GetTraningProgramById } from '../service/TraningProgramService';\nimport { CompleteWorkout, GetWorkoutById, IsActive, IsCompleted, IsNew, SaveWorkout, StartWorkout } from '../service/WorkoutService';\n\nconst WorkoutProcessScene = (props) => {\n    const { workoutId } = useParams();\n\n    const [selected, setSelected] = useState([]);\n    const [isOpen, setOpen] = useState(false)\n    const [workout, updateWorkout] = useState({ exercises: [] });\n    const [traningProgram, updateTraningProgram] = useState({title: \"\"}); \n    useEffect(() => {\n        let result = GetWorkoutById(workoutId)\n        updateWorkout(result)\n        setSelected(result.exercises);\n        let traningProgram = GetTraningProgramById(result.traningProgramId)\n        updateTraningProgram(traningProgram)\n    }, [workoutId])\n\n    useEffect(() => {\n        setSelected(workout.exercises)\n    }, [workout])\n\n\n    const handleChangeOpen = () => {\n        setOpen(!isOpen)\n    }\n\n    const onClose = () => {\n        setSelected(workout.exercises)\n        handleChangeOpen();\n    }\n\n    const handleChangeInput = (e, exercise, index) => {\n        let target = getTargetExerciseById(exercise.id)\n        let newValue = e.target.value == \"\" ? \"\" : parseInt(e.target.value);\n        target.sets[index][e.target.name] = newValue\n        updateWorkoutFilling(target)\n    }\n\n    const handleChangeCompleted = (e, exercise, index) => {\n        let target = getTargetExerciseById(exercise.id)\n        target.sets[index].completed = !target.sets[index].completed;\n        updateWorkoutFilling(target)\n    }\n\n    const getTargetExerciseById = id => {\n        return workout.exercises.find(e => e.id == id);\n    }\n\n    const updateWorkoutFilling = (target) => {\n        updateWorkout({\n            ...workout,\n            exercises: workout.exercises.map(e => {\n                return e.id == target.id ? target : e;\n            })\n        })\n        SaveWorkout(workout)\n    }\n\n    const addSet = (exercise) => {\n        let target = getTargetExerciseById(exercise.id);\n        target.sets.push(DefaultSet());\n        updateWorkoutFilling(target)\n    }\n\n    const startWorkout = () => {\n        updateWorkoutFilling(StartWorkout(workout))\n    }\n\n    const completeWorkout = () => {\n        updateWorkoutFilling(CompleteWorkout(workout));\n    }\n\n    const handleCheckItem = id => {\n        if (!isSelected(id)) {\n            setSelected([...selected, GenerateProgramExercise(id)])\n        } else {\n            setSelected(selected.filter(e => e.id != id))\n        }\n    }\n\n    const onSaveExercises = () => {\n        workout.exercises = selected;\n        updateWorkoutFilling(workout);\n        handleChangeOpen();\n    }\n\n    const isSelected = id => {\n        return selected.find(e => e.id == id) || false\n    }\n\n    return <div>\n        <Typography variant='h6'>Тренировка {traningProgram.title}</Typography>\n        <Grid container spacing={2}>\n            {IsCompleted(workout) && <Grid item xs={12}>\n                <Paper sx={{\n                    p: 2\n                }}>\n                    <Typography variant='h6'>{`Тоннаж: ${workout.volume} кг`}</Typography>\n                    <Typography variant='h6'>{`Выполнено на ${workout.progress}%`}</Typography>\n                </Paper>\n                </Grid>}\n            {workout.exercises.map((exercise, idx) => {\n                const item = GetExerciseById(exercise.id);\n                return <Grid item xs={12} key={idx}>\n                    <SetsTable\n                        infoMode={IsCompleted(workout)}\n                        inputMode={IsActive(workout)}\n                        item={item}\n                        sets={exercise.sets}\n                        handleChangeCompleted={handleChangeCompleted}\n                        handleChangeInput={handleChangeInput}\n                        addSet={addSet} />\n                </Grid>\n            })}\n        </Grid>\n\n        <Modal\n            open={isOpen}\n            onClose={onClose}\n            title=\"Изменить упражнения\">\n            <ExercisesSelector\n                handleCheckItem={handleCheckItem}\n                selectedExercises={workout.exercises}\n                isSelected={isSelected}\n                selected={selected}\n                onSave={onSaveExercises} />\n        </Modal>\n\n       {(IsNew(workout) || IsActive(workout)) && <Button onClick={handleChangeOpen}>Изменить упражнения</Button>}\n\n        {IsNew(workout) && <MainButton\n            text={\"Go!\"}\n            onClick={startWorkout}\n            sx={{\n                backgroundColor: \"#FBAB7E\",\n                backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\n                color: 'black'\n            }} />}\n        {IsActive(workout) && <MainButton\n            text={\"Завершить\"}\n            onClick={completeWorkout}\n            sx={{\n                backgroundColor: \"#FBAB7E\",\n                backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\n                color: 'black'\n            }} />}\n    </div>\n}\n\nexport default WorkoutProcessScene;","import { Box, Typography } from '@mui/material';\nimport { useTheme } from '@mui/system';\nimport React from 'react';\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\n\nconst CustomTooltip = ({ payload }) => {\n\n    if (payload == null || payload == 'undefined')\n        return <div></div>\n\n    return <Box sx={{ p: 1, display: 'flex', flexDirection: 'column' }}>\n        {payload.length && <Typography variant='caption' color=\"secondary\">{payload[0].payload.date}</Typography>}\n        {payload.length && <Typography variant='caption' color=\"secondary\">{payload[0].value}</Typography>}\n    </Box>\n}\n\nconst Chart = ({ data, dataKey }) => {\n    const theme = useTheme();\n\n    return <ResponsiveContainer height={160} width=\"100%\">\n        <AreaChart\n            data={data}>\n            <Tooltip\n                position={{ y: 0 }}\n                content={<CustomTooltip />}\n                wrapperStyle={{ backgroundColor: theme.palette.secondary.light, outlineColor: theme.palette.secondary.dark, borderRadius: 1 }} />\n            <Area\n                type=\"monotone\"\n                dataKey={dataKey}\n                stroke={theme.palette.secondary.dark}\n                fill={theme.palette.secondary.light}\n                strokeWidth={2}\n            />\n        </AreaChart>\n    </ResponsiveContainer>\n}\n\nexport default Chart;","import React from 'react';\nimport { Paper, Typography, useTheme } from \"@mui/material\";\nimport Chart from \"./Chart\";\nimport { Box } from '@mui/system';\n\nconst ChartCard = ({ title, maxValue, data, dataKey }) => {\n    const theme = useTheme();\n    return <Paper sx={{ p: 1, height: 220 }}>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n            <Typography variant=\"h6\">{title}</Typography>\n            <Typography variant='h6' color={theme.palette.secondary.dark}>Макс. {maxValue}</Typography>\n        </Box>\n        <Chart data={data} dataKey={dataKey} />\n    </Paper>\n}\n\nexport default ChartCard;","import { Fade, Paper, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\n\nconst CountChart = ({ title, count, fade }) => {\n    return <Paper sx={{ p: 2, height: 180 }}>\n        <Box sx={{display: 'flex', flexDirection: \"column\", alignItems: 'stretch', height: \"100%\"}}>\n            <Box sx={{ display: 'flex', justifyContent: \"center\", flexGrow: 1 }}>\n                <Typography variant='h6'>{title}</Typography>\n            </Box>\n            <Box sx={{ display: 'flex', justifyContent: \"center\", alignItems: 'center', height: \"100%\", flexGrow: 2 }}>\n                <Fade in={fade} timeout={150}>\n                    <Typography variant='h2'>{count}</Typography>\n                </Fade>\n            </Box>\n        </Box>\n\n    </Paper>\n}\n\nexport default CountChart;","import { FormControl, InputLabel, MenuItem, Paper, Select, Typography, useTheme } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useEffect, useState } from 'react';\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\nimport { MuscleGroupsEnum } from '../Constants';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst CustomTooltip = ({ payload, selectedMuscle }) => {\n\n    if (payload == null || payload == 'undefined')\n        return <div></div>\n\n    return <Box sx={{ p: 1, display: 'flex', flexDirection: 'column' }}>\n        {payload.length && <Typography variant='caption' color=\"secondary\">{payload[0].payload.date}</Typography>}\n        {payload.length && <Typography variant='caption' color=\"secondary\">{selectedMuscle} - {payload[0].payload.setsCount}</Typography>}\n    </Box>\n}\n\nconst MultilineChartCard = ({ data, title }) => {\n    const [selectedMuscle, setSelectedMuscle] = useState(\"BICEPS\")\n    const [setsData, updateSetsData] = useState([]);\n    console.log(\"DATA\", data)\n    useEffect(() => {\n        if (data != undefined && data.data != undefined) {\n            const newData = data.data.find(item => item.muscle == selectedMuscle);\n            updateSetsData(newData.data)\n        }\n            \n    }, [selectedMuscle, data])\n    const theme = useTheme();\n\n    return <Paper sx={{ p: 1, height: 300 }}>\n        <Box sx={{ display: 'flex', gap: 1, flexDirection: 'column' }}>\n            <Typography variant=\"h6\">{title}</Typography>\n            <FormControl\n                variant='standard'\n                sx={{ m: 1, ml: 0, mr: 0, pt: 1, pb: 1 }}\n                fullWidth>\n                <InputLabel id=\"demo-multiple-name-label\">Мышечные группы</InputLabel>\n                <Select\n                    onChange={(e) => { setSelectedMuscle(e.target.value) }}\n                    labelId=\"demo-multiple-name-label\"\n                    id=\"demo-multiple-name\"\n                    value={selectedMuscle}\n                    MenuProps={MenuProps}>\n                    {MuscleGroupsEnum.map((name) => (\n                        <MenuItem\n                            key={name}\n                            value={name}>\n                            {name}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        </Box>\n        <ResponsiveContainer height={160} width=\"100%\">\n            <AreaChart\n                data={setsData}>\n                <Tooltip\n                    position={{ y: 0 }}\n                    content={<CustomTooltip selectedMuscle={selectedMuscle} />}\n                    wrapperStyle={{ backgroundColor: theme.palette.secondary.light, outlineColor: theme.palette.secondary.dark, borderRadius: 1 }} />\n                <Area\n                    type=\"monotone\"\n                    dataKey=\"setsCount\"\n                    strokeWidth={2}\n                    stroke={theme.palette.secondary.dark}\n                    fill={theme.palette.secondary.light} />\n            </AreaChart>\n        </ResponsiveContainer>\n    </Paper>\n}\n\nexport default MultilineChartCard;","import { GetExercisesByMuscle } from \"../../api/ExercisesAPI\";\nimport { FormatDate, GetDateRangeByPeriod } from \"../../utils/DateUtils\";\nimport { MuscleGroupsEnum } from \"../Constants\";\nimport { GetWorkoutsByDateRange } from \"./WorkoutService\";\n\nexport const GetStatisticByPeriod = period => {\n    let dateRange = GetDateRangeByPeriod(period);\n    const workouts = GetWorkoutsByDateRange(dateRange) || [];\n    const maxVolume = workouts.length && Math.max(...workouts.map(workout => workout.volume))\n    const maxDuration = workouts.length && Math.max(...workouts.map(workout => workout.duration || 0))\n\n    return {\n        workoutCount: workouts.length,\n        fullCompleteCount: workouts.filter(workout => workout.progress == 100).length,\n        tonnageData: {\n            max: maxVolume,\n            data: workouts.map(workout => {\n                return {\n                    date: FormatDate(new Date(workout.endAt)),\n                    volume: workout.volume\n                }\n            })\n        },\n        durationData: {\n            max: maxDuration,\n            data: workouts.map(workout => {\n                return {\n                    date: FormatDate(new Date(workout.endAt)),\n                    duration: workout.duration\n                }\n            })\n        },\n        setsData: {\n            data: GetSetsData(workouts)\n        }\n    }\n}\n\nconst GetSetsData = workouts => {\n    const result = MuscleGroupsEnum.map(muscle => {\n        const res = workouts.map(workout => {\n            const allExercisesByMuscleIds = GetExercisesByMuscle(muscle)\n                .map(item => item.id);\n\n            const targetSets = workout.exercises.filter(item => allExercisesByMuscleIds.includes(item.id))\n                .flatMap(item => item.sets)\n                .filter(set => set.completed)\n            return {\n                date: FormatDate(new Date(workout.endAt)),\n                setsCount: targetSets.length\n            }\n        })\n        return {\n            muscle: muscle,\n            data: res.filter(item => item.setsCount > 0)\n        }\n    })\n    return result;\n\n}","import { Grid, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useEffect, useState } from 'react';\nimport ChartCard from '../base/ChartCard';\nimport CountChart from '../base/CountChart';\nimport MultilineChartCard from '../base/MultilineChartCard';\nimport { GetStatisticByPeriod } from '../service/ProgressService';\n\nconst ProgressScene = () => {\n    const [period, updatePeriod] = useState(\"week\")\n    const [fade, updateFade] = useState(true)\n    const [statistic, updateStatistic] = useState({\n        workoutCount: 0,\n        fullCompleteCount: 0,\n        tonnageData: {\n            max: 0,\n            data: []\n        },\n        durationData: {\n            max: 0,\n            data: []\n        },\n        setsData: [{\n            data: []\n        }]\n    })\n\n    useEffect(() => {\n        updateStatistic(GetStatisticByPeriod(period))\n    }, [period])\n\n    const handleChangePeriod = e => {\n        updateFade(false);\n        setTimeout(() => {\n            updatePeriod(e.target.value)\n            updateFade(true);\n        }, 150)\n    }\n\n    return <div>\n        <Typography variant='h6' align='center'>Тренировочный прогресс</Typography>\n        <Box sx={{ display: 'flex', justifyContent: \"center\", pt: 2, pb: 2 }}>\n            <ToggleButtonGroup\n                value={period}\n                size='small'\n                fullWidth\n                onChange={handleChangePeriod}\n                exclusive>\n                <ToggleButton value=\"year\" sx={{ p: \"8px\" }}>\n                    Год\n                </ToggleButton>\n                <ToggleButton value=\"week\">\n                    Неделя\n                </ToggleButton>\n                <ToggleButton value=\"month\">\n                    Месяц\n                </ToggleButton>\n            </ToggleButtonGroup>\n        </Box>\n        <Grid container spacing={2}>\n            <Grid item xs={6}>\n                <CountChart\n                    title=\"Тренировок\"\n                    fade={fade}\n                    count={statistic.workoutCount} />\n            </Grid>\n            <Grid item xs={6}>\n                <CountChart\n                    title=\"Завершено\"\n                    fade={fade}\n                    count={statistic.fullCompleteCount} />\n            </Grid>\n            <Grid item xs={12}>\n                <ChartCard\n                    title={\"Тоннаж\"}\n                    maxValue={statistic.tonnageData.max}\n                    dataKey=\"volume\"\n                    data={statistic.tonnageData.data} />\n            </Grid>\n            <Grid item xs={12}>\n                <ChartCard\n                    title={\"Длительность\"}\n                    maxValue={statistic.durationData.max}\n                    dataKey=\"duration\"\n                    data={statistic.durationData.data} />\n            </Grid>\n            <Grid item xs={12}>\n                <MultilineChartCard\n                title=\"Подходы\"\n                data={statistic.setsData}\n                lineDataKeys={[\"BICEPS\", \"TRICEPS\", \"LEGS\", \"BACK\"]}/>\n            </Grid>\n        </Grid>\n    </div>\n}\n\nexport default ProgressScene;","import { Button } from '@mui/material';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst DebugScene = () => {\n    const navigate = useNavigate();\n    const reboot = () => {\n        navigate(\"/\");\n        window.location.reload(true);\n    }\n\n    return <div>\n        <Button fullWidth color=\"secondary\" onClick={reboot}>Перезагрузить</Button>\n        <Button fullWidth color=\"secondary\">Отчистить кеш</Button>\n        <Button fullWidth color=\"secondary\">Отчистить данные</Button>\n    </div>\n}\n \nexport default DebugScene;","import { Button, List, ListItem, ListItemButton, ListItemText, Typography } from '@mui/material';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AccountScene = () => {\n    const navigation = useNavigate();\n    return <div>\n        <Typography>Аккаунт</Typography>\n        <Button fullWidth variant='contained' onClick={() => navigation(\"/debug\")}>Debug</Button>\n    </div>\n}\n \nexport default AccountScene;","import React from \"react\";\nimport './App.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nimport { DefaultExercises, DefaultTraningPrograms } from \"./components/Constants\";\nimport { createHashRouter, createRoutesFromElements, Route, RouterProvider } from \"react-router-dom\";\n\nimport TraningScene from \"./components/scenes/TraningScene\";\nimport ExercisesScene from \"./components/scenes/ExercisesScene\";\nimport TraningProgramScene from \"./components/scenes/TraningProgramScene\";\nimport Layout from \"./components/base/Layout\";\nimport WorkoutProcessScene from \"./components/scenes/TraningProcessScene\";\nimport ProgressScene from \"./components/scenes/ProgressScene\";\nimport DebugScene from \"./components/scenes/DebugScene\";\nimport AccountScene from \"./components/scenes/AccountScene\";\n\nconst initExercises = () => {\n  if (localStorage.getItem(\"exercises\") == null)\n    localStorage.setItem(\"exercises\", JSON.stringify(DefaultExercises))\n  if (localStorage.getItem(\"traning_programs\") == null)\n    localStorage.setItem(\"traning_programs\", JSON.stringify(DefaultTraningPrograms))\n}\n\nconst router = createHashRouter(\n  createRoutesFromElements(\n    <Route path=\"/\" element={<Layout />}>\n      <Route index element={<TraningScene />} />\n      <Route path=\"exercises\" element={<ExercisesScene />} />\n      <Route path=\"traning-programs\" element={<TraningProgramScene />} />\n      <Route path=\"traning\" element={<TraningScene />} />\n      <Route path=\"workout-process/:workoutId\" element={<WorkoutProcessScene />} />\n      <Route path=\"progress\" element={<ProgressScene/>} />\n      <Route path=\"account\" element={<AccountScene />} />\n      <Route path=\"debug\" element={<DebugScene/>}></Route>\n    </Route>\n  )\n);\n\nconst App = () => {\n  initExercises();\n  return (<RouterProvider router={router} />);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\n// function forceSWupdate () {\n//   if ('serviceWorker' in navigator) {\n//     navigator.serviceWorker.getRegistrations().then(function (registrations) {\n//       for (let registration of registrations) {\n//         registration.update()\n//       }\n//     })\n//   }\n// }\n\n// forceSWupdate()\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// serviceWorkerRegistration.register();\n"],"sourceRoot":""}