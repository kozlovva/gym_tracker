{"version":3,"sources":["components/Constants.js","api/TraningProgramAPI.js","components/base/MainButton.js","components/base/Modal.js","components/program/TraningProgramCard.js","api/WorkoutAPI.js","utils/DateUtils.js","components/service/WorkoutService.js","components/service/TraningProgramService.js","components/base/TextWithIcon.js","components/traning/TraningCard.js","components/scenes/TraningScene.js","api/ExercisesAPI.js","components/exercise/ExerciseForm.js","components/exercise/CreateExercise.js","components/base/RemoveEntityButton.js","components/exercise/ExerciseInfo.js","components/exercise/ExerciseList.js","components/scenes/ExercisesScene.js","components/exercise/ExercisesSelector.js","components/base/AddSetButton.js","components/program/SetsTable.js","components/program/TraningProgramForm.js","components/program/CreateTraningProgram.js","components/program/TraningProgramInfo.js","components/program/TraningProgramList.js","components/scenes/TraningProgramScene.js","components/base/Navigation.js","components/base/Layout.js","components/scenes/TraningProcessScene.js","components/scenes/ProgressScene.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["MuscleGroupsInfo","BICEPS","locale","TRICEPS","QUADS","GLUTES","ABS","CHEST","SHOULDERS","HAMSTRINGS","FOREARMS","NECK","LATS","LOWER_BACK","MIDDLE_BACK","TRAPS","MuscleGroupsEnum","DefaultExercises","id","title","muscle","DefaultModalState","open","type","DefaultTraningPrograms","description","exercises","sets","repeats","weight","complited","GenerateProgramExercise","i","push","completed","GetTraningPrograms","items","localStorage","getItem","JSON","parse","SetTraningPrograms","traningPrograms","console","log","setItem","stringify","MainButton","_ref","_ref2","isBottom","onClick","text","sx","react_default","a","createElement","Box","position","width","bottom","left","right","pl","pr","Object","defineProperty","elevation","Button","variant","fullWidth","color","objectSpread","p","Transition","React","forwardRef","props","ref","Slide","assign","direction","Modal","Dialog","TransitionComponent","PaperProps","height","m","borderBottomRightRadius","borderBottomLeftRadius","DialogTitle","pb","IconButton","aria-label","onClose","top","theme","palette","grey","Close_default","DialogContent","children","Card","styled","display","minHeight","backgroundColor","primary","light","TraningProgramCard","TraningProgramCard_Card","e","item","CardActionArea","CardHeader","showCount","CardContent","Typography","length","GetWorkouts","SetWorkouts","PadTo2Digits","num","toString","padStart","FormatDate","date","getFullYear","getUTCMonth","getUTCDate","join","CreateWorkout","selectedProgram","traning","uuidv4","notes","traningProgramId","duration","startAt","endAt","status","rejectCause","volume","progress","Date","map","exercise","set","GetWorkoutById","find","ById","SaveWorkout","workout","CompleteWorkout","from","to","concat","Math","floor","getTime","reduce","result","CalcExerciseVolume","CalcProgressInPercent","IsNew","IsActive","IsCompleted","workoutExercise","filter","sum","countOfSets","GetWorkoutSetsCount","completedSets","CalcCompletedSets","toFixed","GetTraningProgramById","TextWithIcon","alignItems","justifyContent","icon","gutterBottom","mr","mb","lineHeight","CustomCard","backgroundImage","CardActions","Box_Box","flexDirection","flex","base_TextWithIcon","CalendarMonth_default","AccessTime_default","TraningCard","TraningCard_CustomCard","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","EmptyResult","TraningScene","_useState","useState","_useState2","slicedToArray","todayTranings","setTodayTranings","_useState3","_useState4","traningHistory","setTraningHistory","_useState5","_useState6","isOpen","setIsOpen","navigate","useNavigate","useEffect","now","GetTodayWorkouts","GetWorkoutHistory","onStart","asyncToGenerator","_callee","modaType","traningProgram","_context","navigateToWorkout","_x","_x2","_x3","apply","arguments","handleChangeOpen","onChangeModal","overflow","Grid","container","spacing","idx","xs","traning_TraningCard","TraningScene_EmptyResult","Divider","mt","base_Modal","program_TraningProgramCard","base_MainButton","GetExercises","SetExercises","GetExercisesByMuscle","GetExerciseById","MenuProps","style","maxHeight","ITEM_HEIGHT","ExerciseFrom","TextField","onChange","label","pt","FormControl","ml","InputLabel","Select","labelId","MenuItem","CreateExercise","flexWrap","ExerciseForm","onSave","RemoveEntityButton","disableRipple","ExerciseInfo","base_RemoveEntityButton","onRemove","Accordion","&:not(:last-child)","borderBottom","AccordionSummary","expandIcon","ArrowForwardIosSharp_default","fontSize","padding","& .MuiAccordionSummary-expandIconWrapper.Mui-expanded","transform","& .MuiAccordionSummary-content","marginLeft","AccordionDetails","MuiAccordionDetails","_ref3","borderTop","ExerciseList","expanded","setExpanded","calcCount","CountExercisesByMuscle","ExerciseList_Accordion","panel","event","newExpanded","ExerciseList_AccordionSummary","ExpandMore_default","aria-controls","Badge","showZero","badgeContent","ExerciseList_AccordionDetails","index","stopPropagation","onClickToExercise","textAlign","defaultModalState","ExercisesScene","modalInfo","setModalInfo","selectedItem","setSelectedItem","handleChangeExercise","field","target","closeModal","exercise_ExerciseList","exercise_ExerciseInfo","RemoveExercises","UpdateExercise","exercise_CreateExercise","AddExercises","ExercisesSelector","ExercisesSelector_AccordionSummary","endIcon","isSelected","Check_default","handleCheckItem","AddSetButton","size","SetsTable","handleChangeInput","handleChangeCompleted","addSet","disableWeigth","disableCompleted","infoMode","inputMode","useTheme","Paper","TableContainer","Table","tableLayout","TableHead","TableRow","TableCell","align","TableBody","inputProps","Checkbox","disabled","checked","base_AddSetButton","GenerateExercise","TraningProgramForm","selected","setSelected","setOpen","toConsumableArray","handleChangeRepeats","parseInt","program_SetsTable","exercise_ExercisesSelector","selectedExercises","setExercises","CreateTraningProgram","program_TraningProgramForm","TraningProgramInfo","TraningProgramList","program","TraningProgramScene","handleChangeItem","program_TraningProgramList","program_TraningProgramInfo","RemoveTraningProgram","UpdateTraningProgram","program_CreateTraningProgram","AddTraningProgram","Navigation","BottomNavigation","activeScene","handleChange","showLabels","BottomNavigationAction","ListAlt_default","FitnessCenter_default","QueryStats_default","Fitbit_default","darkTheme","createTheme","main","dark","contrastText","secondary","background","default","shape","borderRadius","typography","fontFamily","Layout","scene","setScene","location","useLocation","path","pathname","substring","includes","CssBaseline","ThemeProvider","component","overflowY","react_router_dist","base_Navigation","newValue","WorkoutProcessScene","workoutId","useParams","updateWorkout","getTargetExerciseById","updateWorkoutFilling","StartWorkout","ProgressScene","router","createHashRouter","createRoutesFromElements","element","base_Layout","scenes_TraningScene","scenes_ExercisesScene","scenes_TraningProgramScene","TraningProcessScene","scenes_ProgressScene","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0","URL","process","href","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.9633eefe.chunk.js","sourcesContent":["import {v4 as uuidv4} from 'uuid';\r\n\r\nexport const MuscleGroupsInfo = {\r\n    \"BICEPS\": {\r\n        \"locale\": \"Бицепс\"\r\n    },\r\n    \"TRICEPS\": {\r\n        \"locale\": \"Трицепс\"\r\n    },\r\n    \"QUADS\": {\r\n        \"locale\": \"Передняя поверхность бедра\"\r\n    },\r\n    \"GLUTES\": {\r\n        \"locale\": \"Ягодицы\"\r\n    },\r\n    \"ABS\": {\r\n        \"locale\": \"Пресс\"\r\n    },\r\n    \"CHEST\": {\r\n        \"locale\": \"Грудь\"\r\n    },\r\n    \"SHOULDERS\": {\r\n        \"locale\": \"Плечи\"\r\n    },\r\n    \"HAMSTRINGS\": {\r\n        \"locale\": \"Задняя поверхность бедра\"\r\n    },\r\n    \"FOREARMS\": {\r\n        \"locale\": \"Предплечья\"\r\n    },\r\n    \"NECK\": {\r\n        \"locale\": \"Шея\"\r\n    },\r\n    \"LATS\": {\r\n        \"locale\": \"Широчайшие\"\r\n    },\r\n    \"LOWER_BACK\": {\r\n        \"locale\": \"Разгибатели спины/Поясница\"\r\n    },\r\n    \"MIDDLE_BACK\": {\r\n        \"locale\": \"Середина спины\"\r\n    },\r\n    \"TRAPS\": {\r\n        \"locale\": \"Трапеции\"\r\n    }\r\n};\r\n\r\nexport const MuscleGroupsEnum = [\r\n    \"BICEPS\", \r\n    \"TRICEPS\", \r\n    \"QUADS\", \r\n    \"GLUTES\", \r\n    \"ABS\", \r\n    \"CHEST\", \r\n    \"SHOULDERS\", \r\n    \"HAMSTRINGS\", \r\n    \"FOREARMS\", \r\n    \"NECK\", \r\n    \"LATS\", \r\n    \"LOWER_BACK\", \r\n    \"MIDDLE_BACK\", \r\n    \"TRAPS\"\r\n];\r\n\r\nexport const DefaultExercises = [\r\n    {\r\n        \"id\": \"1\",\r\n        \"title\": \"Подъем штанги на бицепс\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"18\",\r\n        \"title\": \"Подтягивания обратным хватом\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"19\",\r\n        \"title\": \"Подъем гантелей в скамье Скотта\",\r\n        \"muscle\": \"BICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"15\",\r\n        \"title\": \"Молотки с гантелями\",\r\n        \"muscle\": \"BICEPS\"\r\n    }, \r\n    {\r\n        \"id\": \"2\",\r\n        \"title\": \"Французский жим со штангой\",\r\n        \"muscle\": \"TRICEPS\"\r\n    }, \r\n    {\r\n        \"id\": \"20\",\r\n        \"title\": \"Французский со штангой\",\r\n        \"muscle\": \"TRICEPS\"\r\n    }, \r\n    {\r\n        \"id\": \"21\",\r\n        \"title\": \"Жим лежа узким хватом\",\r\n        \"muscle\": \"TRICEPS\"\r\n    },\r\n    {\r\n        \"id\": \"22\",\r\n        \"title\": \"Разгибания на трицепс в верхнем блоке\",\r\n        \"muscle\": \"TRICEPS\"\r\n    }, \r\n    {\r\n        \"id\": \"3\",\r\n        \"title\": \"Приседания со штангой\",\r\n        \"muscle\": \"QUADS\"\r\n    }, \r\n    {\r\n        \"id\": \"23\",\r\n        \"title\": \"Жим ногами\",\r\n        \"muscle\": \"QUADS\"\r\n    }, \r\n    {\r\n        \"id\": \"24\",\r\n        \"title\": \"Разгибания в блоке на квадрицепс\",\r\n        \"muscle\": \"QUADS\"\r\n    },\r\n    {\r\n        \"id\": \"25\",\r\n        \"title\": \"Выпады с гантелей\",\r\n        \"muscle\": \"QUADS\"\r\n    },  \r\n    {\r\n        \"id\": \"4\",\r\n        \"title\": \"Отведения ноги в блоке\",\r\n        \"muscle\": \"GLUTES\"\r\n    }, \r\n    {\r\n        \"id\": \"26\",\r\n        \"title\": \"Ягодичный мост\",\r\n        \"muscle\": \"GLUTES\"\r\n    }, \r\n    {\r\n        \"id\": \"27\",\r\n        \"title\": \"Глубокие приседания с широкой постановкой ног\",\r\n        \"muscle\": \"GLUTES\"\r\n    }, \r\n    {\r\n        \"id\": \"28\",\r\n        \"title\": \"Отведение ног в стороны в тренажере\",\r\n        \"muscle\": \"GLUTES\"\r\n    }, \r\n    {\r\n        \"id\": \"5\",\r\n        \"title\": \"Скручивания в римском стуле\",\r\n        \"muscle\": \"ABS\"\r\n    }, \r\n    {\r\n        \"id\": \"29\",\r\n        \"title\": \"Скручивания в висе на перекладине\",\r\n        \"muscle\": \"ABS\"\r\n    }, \r\n    {\r\n        \"id\": \"6\",\r\n        \"title\": \"Жим со штангой лежа\",\r\n        \"muscle\": \"CHEST\"\r\n    }, \r\n    {\r\n        \"id\": \"30\",\r\n        \"title\": \"Жим со штангой лежа на наклонной скамье\",\r\n        \"muscle\": \"CHEST\"\r\n    }, \r\n    {\r\n        \"id\": \"31\",\r\n        \"title\": \"Бабочка\",\r\n        \"muscle\": \"CHEST\"\r\n    }, \r\n    {\r\n        \"id\": \"7\",\r\n        \"title\": \"Махи с шагтелями в стороны\",\r\n        \"muscle\": \"SHOULDERS\"\r\n    },\r\n    {\r\n        \"id\": \"16\",\r\n        \"title\": \"Армейский жим\",\r\n        \"muscle\":\"SHOULDERS\"\r\n    },\r\n    {\r\n        \"id\": \"17\",\r\n        \"title\": \"Жим гантелей сидя\",\r\n        \"muscle\": \"SHOULDERS\"\r\n    }, \r\n    {\r\n        \"id\": \"8\",\r\n        \"title\": \"Румынская тяга\",\r\n        \"muscle\": \"HAMSTRINGS\"\r\n    }, \r\n    {\r\n        \"id\": \"9\",\r\n        \"title\": \"Обезьяний хват\",\r\n        \"muscle\": \"FOREARMS\"\r\n    }, \r\n    {\r\n        \"id\": \"10\",\r\n        \"title\": \"Скричивания шеи с блином\",\r\n        \"muscle\": \"NECK\"\r\n    }, \r\n    {\r\n        \"id\": \"11\",\r\n        \"title\": \"Подтягивания\",\r\n        \"muscle\": \"LATS\"\r\n    }, \r\n    {\r\n        \"id\": \"12\",\r\n        \"title\": \"Экстензия\",\r\n        \"muscle\": \"LOWER_BACK\"\r\n    }, \r\n    {\r\n        \"id\": \"13\",\r\n        \"title\": \"Тяга нижнего блока\",\r\n        \"muscle\": \"MIDDLE_BACK\"\r\n    }, \r\n    {\r\n        \"id\": \"14\",\r\n        \"title\": \"Шраги с гантелями\",\r\n        \"muscle\": \"TRAPS\"\r\n    }\r\n]\r\n\r\nexport const ModalTypeInfo = \"INFO\";\r\nexport const ModalTypeAdd = \"ADD\";\r\n\r\nexport const DefaultExercise = () => {\r\n    return {\r\n        \"id\": uuidv4(),\r\n        title: \"\",\r\n        muscle: \"BICEPS\"\r\n    }\r\n}\r\n\r\nexport const DefaultModalState = {\r\n    open: false,\r\n    type: null,\r\n    title: null\r\n};\r\n\r\nexport const DefaultTraningProgram = () => {\r\n    return {\r\n        \"id\": uuidv4(),\r\n        \"title\": \"\",\r\n        \"description\": \"\",\r\n        \"exercises\": []\r\n    }\r\n}\r\n\r\nexport const DefaultTraningPrograms = [\r\n    {\r\n        \"id\": \"1\",\r\n        \"title\": \"Грудь-бицепс\",\r\n        \"description\": \"\",\r\n        \"exercises\": [\r\n            {\r\n                \"id\": \"1\",\r\n                \"sets\": [\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    },\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    },\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    },\r\n                    {\r\n                        repeats: 10,\r\n                        weight: 0,\r\n                        complited: false\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \r\n]\r\n\r\nexport const DefaultTraning = () =>  {\r\n    return {\r\n        \"id\": uuidv4(),\r\n        \"notes\": \"\",\r\n        \"traningProgramId\": \"\",\r\n        \"duration\": \"\",\r\n        \"startAt\": \"\",\r\n        \"endAt\": \"\",\r\n        \"exercises\": [],\r\n        \"status\": \"ACTIVE\",\r\n        \"rejectCause\": \"\",\r\n        \"volume\": 0,\r\n        \"progress\": 0\r\n    }\r\n}\r\n\r\nexport const Statuses = [\r\n    \"NEW\", \"ACTIVE\", \"COMPLETED\", \"REJECTED\"\r\n]\r\n\r\nexport const DefaultSet =() => {\r\n    return {\r\n        repeats: 10,\r\n        weight: 0,\r\n        completed: false\r\n    } \r\n}\r\n\r\nexport const GenerateProgramExercise = id => {\r\n    let setCount = 4;\r\n    let sets = [];\r\n    for (let i = 0; i<setCount; i++) {\r\n        sets.push(DefaultSet())\r\n    }\r\n    return {\r\n        id: id,\r\n        sets: sets\r\n    }\r\n}","export const GetTraningPrograms = () => {\r\n    var items = localStorage.getItem(\"traning_programs\");\r\n    return items != null ? JSON.parse(items) : [];\r\n}\r\n\r\nexport const SetTraningPrograms = (traningPrograms) => {\r\n    console.log(\"Update traning program in local storage...\")\r\n    localStorage.setItem(\"traning_programs\", JSON.stringify(traningPrograms))\r\n}\r\n\r\nexport const AddTraningProgram = exercise => {\r\n    const items = GetTraningPrograms();\r\n    items.push(exercise);\r\n    SetTraningPrograms(items);\r\n}\r\n\r\nexport const RemoveTraningProgram = id => {\r\n    const items = GetTraningPrograms().filter(exercise => exercise.id != id);\r\n    SetTraningPrograms(items);\r\n}\r\n\r\nexport const UpdateTraningProgram = exercise => {\r\n    const items = GetTraningPrograms().map(e => {\r\n        if(e.id == exercise.id) {\r\n            \r\n            return exercise;\r\n        }\r\n\r\n        return e;\r\n    })\r\n    SetTraningPrograms(items);\r\n}\r\n\r\n\r\nexport const GetTraningProgramById = id => {\r\n    const exercises = GetTraningPrograms();\r\n    return exercises.find(e => e.id == id); \r\n}","import React from \"react\";\r\nimport { Box, Button } from \"@mui/material\"\r\n\r\nconst MainButton = ({isBottom, onClick, text, sx}) => {\r\n    return <Box sx={{\r\n        position: 'fixed', \r\n        width: \"100%\", \r\n        bottom: isBottom ? 0 : 40, \r\n        left: 0, \r\n        right: 0, \r\n        pl: 1, \r\n        pr: 1,\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }} elevation={3}>\r\n        <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"secondary\"\r\n            sx={{\r\n                p: 2,\r\n                ...sx\r\n            }}\r\n            onClick={onClick}>\r\n            {text}\r\n        </Button>\r\n    </Box>\r\n}\r\n\r\nexport default MainButton;","import { Dialog, DialogContent, DialogTitle, IconButton, Slide, Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst Transition = React.forwardRef((props, ref) => {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Modal = (props) => {\r\n    return <Dialog\r\n        open={props.open}\r\n        TransitionComponent={Transition}\r\n        PaperProps={{\r\n            sx: {\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                m: 0,\r\n                position: \"fixed\",\r\n                bottom: 0,\r\n                borderBottomRightRadius: 0,\r\n                borderBottomLeftRadius: 0\r\n            }\r\n        }}>\r\n        <DialogTitle sx={{pb:4}}>\r\n            {props.title}\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                onClick={props.onClose}\r\n                sx={{\r\n                    position: 'absolute',\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                }}\r\n            >\r\n                <CloseIcon />\r\n            </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent sx={{}}>\r\n            {props.children}\r\n        </DialogContent>\r\n    </Dialog>\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { Card as MuiCard, CardActionArea, CardContent, CardHeader, styled, Typography } from \"@mui/material\"\r\nimport { ModalTypeInfo } from '../Constants';\r\n\r\nconst Card = styled((props) => (\r\n    <MuiCard sx={{ display: \"flex\", minHeight: \"180px\", ...props.sx }} {...props} />\r\n))(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light\r\n}))\r\n\r\nconst TraningProgramCard = (props) => {\r\n\r\n    return <Card sx={props.sx}\r\n        onClick={(e) => props.onClick(e, ModalTypeInfo, props.item)}>\r\n        <CardActionArea>\r\n            <CardHeader title={props.item.title}>\r\n            </CardHeader>\r\n            \r\n            {props.showCount && <CardContent>\r\n                <Typography variant='caption'>Кол-во упражнений: {props.item.exercises.length || 0}</Typography>\r\n            </CardContent>}\r\n        </CardActionArea>\r\n    </Card>\r\n}\r\n\r\nexport default TraningProgramCard;","const DatabaseName = \"workout\";\r\n\r\nexport const GetWorkouts = () => {\r\n    var items = localStorage.getItem(DatabaseName);\r\n    return items ? JSON.parse(items) : [];\r\n}\r\n\r\n\r\nexport const SetWorkouts = items => {\r\n    localStorage.setItem(DatabaseName, JSON.stringify(items))\r\n}\r\n\r\nexport const GetWorkoutById = id => {\r\n    return GetWorkouts().find(e => e.id == id);\r\n}","const PadTo2Digits = (num) => {\r\n    return num.toString().padStart(2, '0');\r\n}\r\n\r\nexport const FormatDateTime = (date) => {\r\n    return (\r\n        [\r\n            date.getFullYear(),\r\n            PadTo2Digits(date.getUTCMonth() + 1),\r\n            PadTo2Digits(date.getUTCDate()),\r\n        ].join('-') +\r\n        ' ' +\r\n        [\r\n            PadTo2Digits(date.getUTCHours()),\r\n            PadTo2Digits(date.getUTCMinutes()),\r\n            PadTo2Digits(date.getUTCSeconds()),\r\n        ].join(':')\r\n    );\r\n}\r\n\r\nexport const FormatDate = (date) => {\r\n    return (\r\n        [\r\n            date.getFullYear(),\r\n            PadTo2Digits(date.getUTCMonth() + 1),\r\n            PadTo2Digits(date.getUTCDate()),\r\n        ].join('-')\r\n    );\r\n}\r\n\r\nexport const MinutesBetweenDates = (from, to) => {\r\n    console.log(`From ${from} - to ${to}`)\r\n    return Math.floor((to.getTime() - from.getTime())/1000/60);\r\n}","import { GetWorkouts, SetWorkouts, GetWorkoutById as ById } from \"../../api/WorkoutAPI\";\r\nimport { FormatDate, MinutesBetweenDates } from \"../../utils/DateUtils\";\r\nimport { DefaultTraning } from \"../Constants\"\r\n\r\nexport const CreateWorkout = (selectedProgram) => {\r\n    const traning = DefaultTraning();\r\n    traning.traningProgramId = selectedProgram.id;\r\n    traning.startAt = new Date();\r\n\r\n    traning.exercises = selectedProgram.exercises.map(exercise => {\r\n\r\n        return {\r\n            id: exercise.id,\r\n            sets: exercise.sets.map(set => {\r\n                return {\r\n                    repeats: set.repeats,\r\n                    weight: 0,\r\n                    completed: false\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    const items = GetWorkouts();\r\n    items.push(traning);\r\n    SetWorkouts(items);\r\n    return traning;\r\n}\r\n\r\nexport const GetTodayWorkouts = () => {\r\n    var now = new Date();\r\n    return GetWorkouts()\r\n        .filter(e => FormatDate(new Date(e.startAt)) == FormatDate(now))\r\n}\r\n\r\nexport const GetWorkoutHistory = () => {\r\n    var now = new Date();\r\n    return GetWorkouts()\r\n        .filter(e => FormatDate(new Date(e.startAt)) != FormatDate(now))\r\n}\r\n\r\nexport const GetWorkoutById = id => {\r\n    return ById(id);\r\n}\r\n\r\nexport const SaveWorkout = workout => {\r\n    const items = GetWorkouts();\r\n    SetWorkouts(items.map(item => {\r\n        return item.id == workout.id ? workout : item\r\n    }));\r\n}\r\n\r\nexport const StartWorkout = workout => {\r\n    workout.startAt = new Date();\r\n    workout.status = \"ACTIVE\";\r\n    SaveWorkout(workout)\r\n    return workout;\r\n}\r\n\r\nexport const CompleteWorkout = workout => {\r\n    workout.endAt = new Date();\r\n    workout.status = \"COMPLETED\";\r\n    workout.duration = MinutesBetweenDates(new Date(workout.startAt), workout.endAt);\r\n    workout.volume = workout.exercises\r\n        .reduce((result, exercise) => result + CalcExerciseVolume(exercise), 0);\r\n    workout.progress = CalcProgressInPercent(workout);\r\n    SaveWorkout(workout)\r\n    return workout;\r\n}\r\n\r\nexport const RejectWorkout = (workout, cause) => {\r\n    workout.endAt = new Date();\r\n    workout.status = \"REJECTED\";\r\n    workout.rejectCause = cause\r\n    SaveWorkout(workout)\r\n    return workout;\r\n}\r\n\r\nexport const IsNew = workout => {\r\n    return workout.status == \"NEW\";\r\n}\r\n\r\nexport const IsActive = workout => {\r\n    return workout.status == \"ACTIVE\";\r\n}\r\n\r\nexport const IsCompleted = workout => {\r\n    return workout.status == \"COMPLETED\";\r\n}\r\n\r\nexport const CalcExerciseVolume = workoutExercise => {\r\n    let result = workoutExercise.sets\r\n        .filter(set => set.completed)\r\n        .reduce((sum, set) => sum + set.repeats * set.weight, 0);\r\n    return result;\r\n}\r\n\r\nexport const CalcProgressInPercent = workout => {\r\n    let countOfSets = GetWorkoutSetsCount(workout);\r\n    let completedSets = workout.exercises.reduce((result, exercise) => result+ CalcCompletedSets(exercise), 0)\r\n    console.log(`${countOfSets} - ${completedSets}`)\r\n    return ((completedSets / countOfSets) * 100).toFixed(0)\r\n}\r\n\r\nexport const CalcCompletedSets = workoutExercise => {\r\n    return workoutExercise.sets.filter(set => set.completed).length\r\n}\r\n\r\nexport const GetWorkoutSetsCount = workout => {\r\n    return workout.exercises.reduce((result, exercise) => result + exercise.sets.length, 0)\r\n}","import { GetTraningPrograms } from \"../../api/TraningProgramAPI\"\r\n\r\nexport const GetTraningProgramById = id => {\r\n    return GetTraningPrograms().find(e => e.id == id);\r\n}","import { Box, Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst TextWithIcon = (props) => {\r\n    return <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n        {props.icon}\r\n        <Typography variant=\"caption\" gutterBottom sx={{ mr: 1, mb: 0, lineHeight: 0 }}>{props.text}</Typography>\r\n    </Box>\r\n}\r\n\r\nexport default TextWithIcon;","import React from 'react';\r\nimport { Card, CardActionArea, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\r\nimport Tag from '../base/Tag';\r\nimport { Box } from '@mui/system';\r\n\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport TextWithIcon from '../base/TextWithIcon';\r\nimport { FormatDate } from '../../utils/DateUtils';\r\n\r\nconst defailtSx = {\r\n    display: 'flex'\r\n}\r\n\r\nconst TraningCard = (props) => {\r\n    if (props.status == \"REJECTED\")\r\n        return <CustomCard {...props} sx={{\r\n            backgroundColor: \"#93291E\",\r\n            backgroundImage: 'linear-gradient(62deg, #ED213A 0%, #93291E 100%)',\r\n\r\n        }} />\r\n    if (props.status == \"COMPLETED\")\r\n        return <CustomCard {...props} sx={{\r\n            backgroundColor: \"#E2E2E2\",\r\n            backgroundImage: 'linear-gradient(62deg, #C9D6FF 0%, #E2E2E2 100%)',\r\n\r\n        }} />\r\n\r\n    return <CustomCard {...props} />\r\n}\r\n\r\nconst CustomCard = props => {\r\n    return <Card\r\n        onClick={props.onClick}\r\n        sx={{\r\n            display: 'flex',\r\n            backgroundColor: \"#FBAB7E\",\r\n            backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\r\n            ...props.sx\r\n        }}>\r\n        <CardActionArea>\r\n            <CardHeader title={props.title}>\r\n            </CardHeader>\r\n            <CardActions sx={{ justifyContent: \"flex-end\", p: 2 }}>\r\n                <Box sx={{ display: 'flex', flexDirection: \"column\", flex: \"1 0 auto\" }}>\r\n                </Box>\r\n                <Box sx={{ display: \"flex\", alignItems: 'center', pl: 1 }}>\r\n                    <TextWithIcon\r\n                        icon={<CalendarMonthIcon />}\r\n                        text={FormatDate(new Date(props.date))} />\r\n                    <TextWithIcon\r\n                        icon={<AccessTimeIcon />}\r\n                        text={`${props.duration} мин.`} />\r\n                </Box>\r\n            </CardActions>\r\n        </CardActionArea>\r\n    </Card>\r\n}\r\n\r\nexport default TraningCard;","import { Box, Card, CardActionArea, CardHeader, Divider, Grid, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GetTraningPrograms } from \"../../api/TraningProgramAPI\";\r\nimport MainButton from \"../base/MainButton\";\r\nimport Modal from \"../base/Modal\";\r\nimport TraningProgramCard from \"../program/TraningProgramCard\";\r\nimport { CreateWorkout, GetTodayWorkouts, GetWorkoutHistory } from \"../service/WorkoutService\";\r\nimport { GetTraningProgramById } from \"../service/TraningProgramService\";\r\nimport TraningCard from \"../traning/TraningCard\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst EmptyResult = () => <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\r\n    <Typography variant=\"caption\">Пока тренировок нет</Typography>\r\n</Box>\r\n\r\nexport const TraningScene = props => {\r\n    const [todayTranings, setTodayTranings] = useState([])\r\n    const [traningHistory, setTraningHistory] = useState([])\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const todayTranings = GetTodayWorkouts();\r\n        setTodayTranings(todayTranings);\r\n        const traningHistory = GetWorkoutHistory();\r\n        setTraningHistory(traningHistory)\r\n    }, [])\r\n\r\n    const onStart = async (e, modaType, traningProgram) => {\r\n        const workout = await CreateWorkout(traningProgram);\r\n        navigateToWorkout(workout.id)\r\n    }\r\n\r\n    const handleChangeOpen = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const onChangeModal = () => {\r\n        if (isOpen) {\r\n            closeModal();\r\n        } else {\r\n            handleChangeOpen();\r\n        }\r\n    }\r\n\r\n    const navigateToWorkout = id => {\r\n        navigate(`/workout-process/${id}`)\r\n    }\r\n\r\n    return <Box sx={{\r\n        height: \"100%\", overflow: \"scroll\",\r\n    }}>\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\r\n            <Typography>Сегодня</Typography>\r\n        </Box>\r\n        {todayTranings.length > 0\r\n            ? <Grid container spacing={2}>\r\n                {todayTranings.map((traning, idx) =>\r\n                    <Grid item key={idx} xs={12}>\r\n                        <TraningCard\r\n                            status={traning.status}\r\n                            onClick={() => {navigateToWorkout(traning.id)}}\r\n                            title={GetTraningProgramById(traning.traningProgramId).title}\r\n                            date={traning.startAt}\r\n                            duration={traning.duration} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            : <EmptyResult />}\r\n\r\n\r\n\r\n        <Divider light sx={{ mt: 2, mb: 2 }}></Divider>\r\n\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 1 }}>\r\n            <Typography>История</Typography>\r\n        </Box>\r\n\r\n        {traningHistory.length > 0\r\n            ? <Grid container spacing={2}>\r\n                {traningHistory.map((traning, idx) =>\r\n                    <Grid item key={idx} xs={12}>\r\n                        <TraningCard\r\n                            title={GetTraningProgramById(traning.traningProgramId).title}\r\n                            date={traning.startAt}\r\n                            duration={traning.duration} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            : <EmptyResult />}\r\n\r\n\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={() => onChangeModal(null)}\r\n            title=\"Выбери программу тренировок\">\r\n            <Grid container spacing={2}>\r\n                {GetTraningPrograms().map((item, idx) => <Grid item xs={12} key={idx}>\r\n                    <TraningProgramCard\r\n                        onClick={onStart}\r\n                        key={idx}\r\n                        item={item}\r\n                        showCount={false}\r\n                        sx={{ minHeight: \"80px\" }} />\r\n                </Grid>\r\n                )}\r\n            </Grid>\r\n\r\n\r\n        </Modal>\r\n\r\n        <MainButton text=\"Начать тренировку!\" onClick={onChangeModal} />\r\n    </Box>\r\n}\r\n\r\nexport default TraningScene;","export const GetExercises = () => {\r\n    var items = localStorage.getItem(\"exercises\");\r\n    return JSON.parse(items);\r\n}\r\n\r\nexport const SetExercises = exercises => {\r\n    console.log(\"Update exercises in local storage...\")\r\n    localStorage.setItem(\"exercises\", JSON.stringify(exercises))\r\n}\r\n\r\nexport const GetExercisesByMuscle = muscle => {\r\n    const items = GetExercises();\r\n    return items.filter(exercise => exercise.muscle == muscle);\r\n}\r\n\r\nexport const AddExercises = exercise => {\r\n    const items = GetExercises();\r\n    items.push(exercise);\r\n    SetExercises(items);\r\n}\r\n\r\nexport const RemoveExercises = id => {\r\n    const items = GetExercises().filter(exercise => exercise.id != id);\r\n    SetExercises(items);\r\n}\r\n\r\nexport const UpdateExercise = exercise => {\r\n    const items = GetExercises().map(e => {\r\n        if(e.id == exercise.id) {\r\n            return exercise;\r\n        }\r\n\r\n        return e;\r\n    })\r\n    SetExercises(items);\r\n}\r\n\r\nexport const CountExercisesByMuscle = muscle => {\r\n    return GetExercisesByMuscle(muscle).length;\r\n}\r\n\r\nexport const GetExerciseById = id => {\r\n    const exercises = GetExercises();\r\n    return exercises.find(e => e.id == id); \r\n}","import { Box, FormControl, InputLabel, MenuItem, Select, TextField } from '@mui/material';\r\nimport React from 'react';\r\nimport { MuscleGroupsEnum } from '../Constants';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst ExerciseFrom = (props) => {\r\n    return <Box>\r\n        <TextField\r\n            onChange={(e) => { props.onChange(e, \"title\") }}\r\n            fullWidth\r\n            id=\"exercise-title\"\r\n            label=\"Название\"\r\n            variant=\"standard\"\r\n            value={props.exercise.title}\r\n            sx={{ pt: 1, pb: 1 }} />\r\n\r\n        <FormControl\r\n            variant='standard'\r\n            sx={{ m: 1, ml: 0, mr: 0, pt: 1, pb: 1 }}\r\n            fullWidth>\r\n            <InputLabel id=\"demo-multiple-name-label\">Мышечные группы</InputLabel>\r\n            <Select\r\n                onChange={(e) => { props.onChange(e, \"muscle\") }}\r\n                labelId=\"demo-multiple-name-label\"\r\n                id=\"demo-multiple-name\"\r\n                value={props.exercise.muscle}\r\n                MenuProps={MenuProps}>\r\n                {MuscleGroupsEnum.map((name) => (\r\n                    <MenuItem\r\n                        key={name}\r\n                        value={name}>\r\n                        {name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    </Box>\r\n}\r\n\r\nexport default ExerciseFrom;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport ExerciseFrom from './ExerciseForm';\r\n\r\nconst CreateExercise = (props) => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\" }}>\r\n            <ExerciseFrom\r\n                exercise={props.exercise}\r\n                onChange={props.onChange} />\r\n\r\n            <MainButton text=\"Создать\" onClick={props.onSave} isBottom={true} />\r\n        </Box>\r\n    </div>\r\n};\r\n\r\nexport default CreateExercise;","import { Button } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst RemoveEntityButton = props => {\r\n    return <Button\r\n        onClick={props.onClick}\r\n        fullWidth\r\n        color=\"error\"\r\n        sx={{ mt: 1, pl: 0 }}\r\n        disableRipple>\r\n            {props.text}\r\n    </Button>\r\n}\r\n\r\nexport default RemoveEntityButton;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport RemoveEntityButton from '../base/RemoveEntityButton';\r\nimport ExerciseFrom from './ExerciseForm';\r\n\r\nconst ExerciseInfo = (props) => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\"}}>\r\n            <ExerciseFrom\r\n                exercise={props.exercise}\r\n                onChange={props.onChange} />\r\n\r\n            <RemoveEntityButton onClick={props.onRemove} text=\"Удалить упражнение\"/>\r\n\r\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\r\n        </Box>\r\n    </div>\r\n};\r\n\r\nexport default ExerciseInfo;","import { Accordion as MuiAccordion, AccordionDetails as MuiAccordionDetails, AccordionSummary as MuiAccordionSummary, Badge, Button } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\r\nimport { Box, styled } from \"@mui/system\";\r\nimport { ModalTypeInfo, MuscleGroupsEnum, MuscleGroupsInfo } from \"../Constants\";\r\nimport { CountExercisesByMuscle, GetExercisesByMuscle } from \"../../api/ExercisesAPI\";\r\n\r\nconst Accordion = styled((props) => (\r\n    <MuiAccordion elevation={0} {...props} />\r\n))(({ theme }) => ({\r\n    '&:not(:last-child)': {\r\n        borderBottom: 0,\r\n    }\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n    <MuiAccordionSummary\r\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.light,\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    '& .MuiAccordionSummary-content': {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\r\n}));\r\n\r\nconst ExerciseList = (props) => {\r\n    const [expanded, setExpanded] = useState(null)\r\n\r\n    const handleChangeExpanded = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    const onClickToExercise = (e, exercise) => {\r\n        e.stopPropagation();\r\n        props.onClick(e, ModalTypeInfo, exercise);\r\n    }\r\n\r\n    const calcCount = (muscle) => {\r\n        return CountExercisesByMuscle(muscle);\r\n    }\r\n\r\n    return <div>\r\n        {MuscleGroupsEnum.map((muscle, idx) => <Accordion\r\n            key={idx}\r\n            expanded={expanded == muscle}\r\n            onChange={handleChangeExpanded(muscle)}>\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1bh-content\"\r\n                id=\"panel1bh-header\">\r\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", pr: 2 }}>\r\n                    {MuscleGroupsInfo[muscle].locale}\r\n                    <Badge showZero badgeContent={calcCount(muscle)} color=\"secondary\"></Badge>\r\n                </Box>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        onClick={(e) => onClickToExercise(e, exercise)}\r\n                        fullWidth\r\n                        sx={{ justifyContent: \"flex-start\", textAlign: \"left\" }}\r\n                        disableRipple>\r\n                        {exercise.title}\r\n                    </Button>\r\n                </Box>)}\r\n            </AccordionDetails>\r\n        </Accordion>)\r\n        }\r\n    </div >\r\n}\r\n\r\nexport default ExerciseList;","import { Box } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { AddExercises, RemoveExercises, UpdateExercise } from \"../../api/ExercisesAPI\";\r\nimport MainButton from \"../base/MainButton\";\r\nimport Modal from \"../base/Modal\";\r\nimport { DefaultExercise, ModalTypeAdd, ModalTypeInfo } from \"../Constants\";\r\nimport CreateExercise from \"../exercise/CreateExercise\";\r\nimport ExerciseInfo from \"../exercise/ExerciseInfo\";\r\nimport ExerciseList from \"../exercise/ExerciseList\";\r\n\r\nconst defaultModalState = {\r\n    open: false,\r\n    type: null,\r\n    title: null\r\n};\r\n\r\nconst ExercisesScene = props => {\r\n    const [modalInfo, setModalInfo] = useState(defaultModalState);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    const handleChangeExercise = (e, field) => {\r\n        var item = selectedItem;\r\n        item[field] = e.target.value;\r\n        setSelectedItem({ ...item });\r\n    }\r\n\r\n    const removeExercise = () => {\r\n        RemoveExercises(selectedItem.id)\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalInfo(defaultModalState);\r\n        setSelectedItem(null)\r\n    }\r\n\r\n    const onChangeModal = (e, type, item) => {\r\n        if (modalInfo.open) {\r\n            closeModal();\r\n        } else {\r\n            setModalInfo({\r\n                open: true,\r\n                type: type,\r\n                title: type == ModalTypeAdd ? \"Создание упражнения\" : null\r\n            });\r\n            setSelectedItem({ ...item });\r\n        }\r\n    }\r\n\r\n    const saveExercise = (e) => {\r\n        UpdateExercise(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    const addExeecise = (e) => {\r\n        AddExercises(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    return <Box sx={{\r\n        height: \"100%\", overflow: \"scroll\",\r\n    }}>\r\n        <ExerciseList onClick={onChangeModal} />\r\n        <Modal\r\n            open={modalInfo.open}\r\n            onClose={(e) => onChangeModal(e, null, null)}\r\n            title={modalInfo.title}>\r\n            {modalInfo.type == ModalTypeInfo && <ExerciseInfo\r\n                onChange={handleChangeExercise}\r\n                exercise={selectedItem}\r\n                onRemove={removeExercise}\r\n                onSave={saveExercise} />}\r\n            {modalInfo.type == ModalTypeAdd && <CreateExercise\r\n                onChange={handleChangeExercise}\r\n                exercise={selectedItem}\r\n                onSave={addExeecise} />}\r\n        </Modal>\r\n\r\n        <MainButton text=\"Создать упражнение\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultExercise())} />\r\n    </Box>\r\n}\r\n\r\nexport default ExercisesScene;","import { Accordion, AccordionDetails, AccordionSummary as MuiAccordionSummary, Box, Button, styled } from '@mui/material';\r\nimport React from 'react';\r\nimport { GetExercisesByMuscle } from '../../api/ExercisesAPI';\r\nimport MainButton from '../base/MainButton';\r\nimport { MuscleGroupsEnum, MuscleGroupsInfo } from '../Constants';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nconst AccordionSummary = styled((props) => (\r\n    <MuiAccordionSummary\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.light,\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    '& .MuiAccordionSummary-content': {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst ExercisesSelector = (props) => {\r\n    return <div>\r\n        <Box sx={{ pb: 14 }}>\r\n            {MuscleGroupsEnum.map((muscle, idx) => <Accordion\r\n                key={idx}\r\n                expanded={true}>\r\n                <AccordionSummary\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\">\r\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", alignItems: \"center\", p: 1 }}>\r\n                        {MuscleGroupsInfo[muscle].locale}\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    {GetExercisesByMuscle(muscle).map((exercise, index) => <Box key={index}>\r\n                        <Button\r\n                            endIcon={props.isSelected(exercise.id) ? <CheckIcon /> : <div></div>}\r\n                            color=\"secondary\"\r\n                            onClick={(e) => props.handleCheckItem(exercise.id)}\r\n                            fullWidth\r\n                            sx={{ justifyContent: \"space-between\", textAlign: \"left\" }}\r\n                            disableRipple>\r\n                            {exercise.title}\r\n                        </Button>\r\n                    </Box>)}\r\n                </AccordionDetails>\r\n            </Accordion>)}\r\n        </Box>\r\n\r\n        <MainButton text={`Применить`} onClick={props.onSave} isBottom={true} />\r\n    </div>\r\n}\r\n\r\nexport default ExercisesSelector;","import React from 'react';\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst AddSetButton = (props) => {\r\n    return <Button\r\n        size='small'\r\n        variant='contained'\r\n        color=\"secondary\"\r\n        onClick={props.onClick}>\r\n        {props.text}\r\n    </Button>\r\n}\r\n\r\nexport default AddSetButton;","import { Checkbox, Divider, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from '@mui/material';\r\nimport { Box, useTheme } from '@mui/system';\r\nimport React from 'react';\r\nimport AddSetButton from '../base/AddSetButton';\r\nimport { MuscleGroupsInfo } from '../Constants';\r\n\r\nconst SetsTable = ({ item, sets, handleChangeInput, handleChangeCompleted, addSet, disableWeigth, disableCompleted, infoMode, inputMode }) => {\r\n    const theme = useTheme();\r\n    console.log(sets);\r\n\r\n    return <Paper sx={{ p: 1, mb: 2, mt: 1, backgroundColor: theme.palette.primary.light }}>\r\n        <Box sx={{ display: 'flex' }}>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', pl: 2, pr: 2 }}>\r\n                <Typography>{item.title}</Typography>\r\n                <Typography variant='caption'>{MuscleGroupsInfo[item.muscle].locale}</Typography>\r\n            </Box>\r\n        </Box>\r\n\r\n        <Divider />\r\n\r\n        <Box>\r\n            <TableContainer>\r\n                <Table sx={{ width: \"100%\", tableLayout: 'fixed' }} size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Подход</TableCell>\r\n                            <TableCell align='center'>Повторы</TableCell>\r\n                            {!disableWeigth && <TableCell align='center'>Вес</TableCell>}\r\n                            {!disableCompleted && <TableCell>Выполнен</TableCell>}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {sets.map((set, index) =>\r\n                            <TableRow key={index}>\r\n                                <TableCell>{index + 1}</TableCell>\r\n                                <TableCell align='center'>\r\n                                    {inputMode && <TextField\r\n                                        inputProps={{\r\n                                            sx: { textAlign: \"center\" }\r\n                                        }}\r\n                                        size='small'\r\n                                        name=\"repeats\"\r\n                                        type={\"number\"}\r\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\r\n                                        fullWidth\r\n                                        value={set.repeats} />}\r\n                                    {infoMode && set.repeats}\r\n                                </TableCell>\r\n                                {!disableWeigth && <TableCell align='center'>\r\n                                    {inputMode && <TextField\r\n                                        inputProps={{\r\n                                            sx: { textAlign: \"center\" }\r\n                                        }}\r\n                                        size='small'\r\n                                        name=\"weight\"\r\n                                        type={\"number\"}\r\n                                        onChange={(e) => { handleChangeInput(e, item, index) }}\r\n                                        fullWidth\r\n                                        value={set.weight} />}\r\n                                    {infoMode && set.weight}\r\n                                </TableCell>}\r\n                                {!disableCompleted && <TableCell align='right'>\r\n                                    <Checkbox\r\n                                        disabled={infoMode}\r\n                                        name=\"completed\"\r\n                                        color='secondary'\r\n                                        checked={set.completed}\r\n                                        onChange={(e) => handleChangeCompleted(e, item, index)} />\r\n                                </TableCell>}\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {inputMode && <Box sx={{ display: 'flex', justifyContent: 'flex-end', pt: 1 }}>\r\n                <AddSetButton text=\"Добавить подход\" onClick={e => addSet(item)} />\r\n            </Box>}\r\n        </Box>\r\n    </Paper>\r\n}\r\n\r\nexport default SetsTable;","import { Box, Button, Grid, TextField, Typography, useTheme } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { GetExerciseById } from '../../api/ExercisesAPI';\r\nimport Modal from '../base/Modal';\r\nimport { DefaultSet } from '../Constants';\r\nimport ExercisesSelector from '../exercise/ExercisesSelector';\r\nimport SetsTable from './SetsTable';\r\n\r\nconst GenerateExercise = id => {\r\n    return {\r\n        id: id,\r\n        sets: [\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            },\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            },\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            },\r\n            {\r\n                repeats: 10,\r\n                completed: false\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nconst TraningProgramForm = props => {\r\n    const [selected, setSelected] = useState([]);\r\n    const [isOpen, setOpen] = useState(false)\r\n    const theme = useTheme();\r\n\r\n    useEffect(() => {\r\n        setSelected([...props.item.exercises])\r\n    }, [])\r\n\r\n    const isSelected = id => {\r\n        return selected.find(e => e.id == id) || false\r\n    }\r\n\r\n    const handleCheckItem = id => {\r\n        if (!isSelected(id)) {\r\n            setSelected([...selected, GenerateExercise(id)])\r\n        } else {\r\n            setSelected(selected.filter(e => e.id != id))\r\n        }\r\n    }\r\n\r\n    const onClose = () => {\r\n        setSelected(props.item.exercises)\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const handleChangeOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const onSaveExercises = () => {\r\n        props.setExercises(selected);\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const handleChangeRepeats = (e, exercise, index) => {\r\n        let target = selected.find(e => e.id == exercise.id);\r\n        target.sets[index].repeats = parseInt(e.target.value)\r\n        setSelected(selected.map(e => {\r\n            if (e.id == target.id)\r\n                return target;\r\n\r\n            return e;\r\n        }))\r\n    }\r\n\r\n    const addSet = (exercise) => {\r\n        let target = selected.find(e => e.id == exercise.id);\r\n        target.sets.push(DefaultSet());\r\n        setSelected(selected.map(e => {\r\n            if (e.id == target.id)\r\n                return target;\r\n\r\n            return e;\r\n        }))\r\n    }\r\n\r\n    return <Box>\r\n        <TextField\r\n            onChange={(e) => { props.onChange(e, \"title\") }}\r\n            fullWidth\r\n            id=\"exercise-title\"\r\n            label=\"Название\"\r\n            variant=\"standard\"\r\n            value={props.item.title}\r\n            sx={{ pt: 1, pb: 1 }} />\r\n\r\n        {props.item.exercises.length == 0 && <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", p: 2 }}>\r\n            <Typography variant='caption'>Упражнения не добавлены</Typography>\r\n        </Box>}\r\n\r\n\r\n        {props.item.exercises.length > 0 && <Grid container spacing={2}>\r\n            {props.item.exercises.map((exercise, idx) => {\r\n                const item = GetExerciseById(exercise.id);\r\n                return <Grid item xs={12} key={idx}>\r\n                    <SetsTable\r\n                        item={item}\r\n                        sets={exercise.sets}\r\n                        handleChangeInput={handleChangeRepeats}\r\n                        disableWeigth disableCompleted infoMode\r\n                        addSet={addSet}\r\n                    />\r\n                </Grid>\r\n            })}\r\n        </Grid>\r\n        }\r\n\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={onClose}\r\n            title=\"Добавление упражнений\">\r\n            <ExercisesSelector\r\n                handleCheckItem={handleCheckItem}\r\n                selectedExercises={props.item.exercises}\r\n                isSelected={isSelected}\r\n                selected={selected}\r\n                onSave={onSaveExercises} />\r\n        </Modal>\r\n\r\n        <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={handleChangeOpen}>\r\n           Изменить упражнения\r\n        </Button>\r\n    </Box >\r\n}\r\n\r\nexport default TraningProgramForm;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport TraningProgramForm from './TraningProgramForm';\r\n\r\nconst CreateTraningProgram = props => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\r\n            <TraningProgramForm\r\n                item={props.item}\r\n                onChange={props.onChange}\r\n                setExercises={props.setExercises}\r\n                onSave={props.setExercises}/>\r\n\r\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true} />\r\n        </Box>\r\n    </div>\r\n}\r\n \r\nexport default CreateTraningProgram;","import { Button } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport MainButton from '../base/MainButton';\r\nimport TraningProgramForm from './TraningProgramForm';\r\n\r\nconst TraningProgramInfo = props => {\r\n    return <div>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: \"column\", pb: 16 }}>\r\n            <TraningProgramForm\r\n                item={props.item}\r\n                onChange={props.onChange}\r\n                setExercises={props.setExercises}\r\n                onSave={props.setExercises}/>\r\n\r\n            <Button\r\n                onClick={props.onRemove}\r\n                fullWidth\r\n                color=\"error\"\r\n                sx={{  mt: 1, pl: 0 }}\r\n                disableRipple>\r\n                Удалить программу\r\n            </Button>\r\n\r\n            <MainButton text=\"Сохранить\" onClick={props.onSave} isBottom={true}/>\r\n        </Box>\r\n    </div>\r\n}\r\n \r\nexport default TraningProgramInfo;","import { Grid } from '@mui/material';\r\nimport React from 'react';\r\nimport { GetTraningPrograms } from '../../api/TraningProgramAPI';\r\nimport TraningProgramCard from \"../program/TraningProgramCard\";\r\n\r\nconst TraningProgramList = (props) => {\r\n    return <Grid container spacing={2}>\r\n        {GetTraningPrograms().map((program, idx) => <Grid key={idx} item xs={12}>\r\n            <TraningProgramCard item={program} onClick={props.onClick}/>\r\n        </Grid>)}\r\n    </Grid>\r\n}\r\n \r\nexport default TraningProgramList;","import { Box } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { AddTraningProgram, RemoveTraningProgram, UpdateTraningProgram } from '../../api/TraningProgramAPI';\r\nimport MainButton from '../base/MainButton';\r\nimport Modal from '../base/Modal';\r\nimport { DefaultModalState, DefaultTraningProgram, ModalTypeAdd, ModalTypeInfo } from '../Constants';\r\nimport CreateTraningProgram from '../program/CreateTraningProgram';\r\nimport TraningProgramInfo from '../program/TraningProgramInfo';\r\nimport TraningProgramList from '../program/TraningProgramList';\r\n \r\nexport const TraningProgramScene = (props) => {\r\n    const [modalInfo, setModalInfo] = useState(DefaultModalState);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    const handleChangeItem = (e, field) => {\r\n        var item = selectedItem;\r\n        item[field] = e.target.value;\r\n        setSelectedItem({ ...item });\r\n    }\r\n\r\n    const removeItem = () => {\r\n        RemoveTraningProgram(selectedItem.id)\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalInfo(DefaultModalState);\r\n        setSelectedItem(null)\r\n    }\r\n\r\n    const onChangeModal = (e, type, item) => {\r\n        if (modalInfo.open) {\r\n            closeModal();\r\n        } else {\r\n            setModalInfo({\r\n                open: true,\r\n                type: type,\r\n                title: type == ModalTypeAdd ? \"Создание программы\" : null\r\n            });\r\n            setSelectedItem({ ...item });\r\n        }\r\n    }\r\n\r\n    const saveItem = (e) => {\r\n        \r\n        UpdateTraningProgram(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    const addItem = (e) => {\r\n        AddTraningProgram(selectedItem);\r\n        closeModal();\r\n    }\r\n\r\n    const setExercises = (exercises) => {\r\n        console.log(\"Exercises\", exercises);\r\n        setSelectedItem({...selectedItem, exercises: exercises})\r\n    }\r\n\r\n    return <Box sx={{\r\n        height: \"100%\", overflow: \"scroll\",\r\n    }}>\r\n        <TraningProgramList onClick={onChangeModal}/>\r\n        <Modal\r\n            open={modalInfo.open}\r\n            onClose={(e) => onChangeModal(e, null, null)}\r\n            title={modalInfo.title}>\r\n            {modalInfo.type == ModalTypeInfo && <TraningProgramInfo\r\n                onChange={handleChangeItem}\r\n                item={selectedItem}\r\n                onRemove={removeItem}\r\n                onSave={saveItem}\r\n                setExercises={setExercises} />}\r\n            {modalInfo.type == ModalTypeAdd && <CreateTraningProgram\r\n                onChange={handleChangeItem}\r\n                item={selectedItem}\r\n                onSave={addItem}\r\n                setExercises={setExercises} />}\r\n        </Modal>\r\n\r\n\r\n        <MainButton text=\"Создать программу\" onClick={(e) => onChangeModal(e, ModalTypeAdd, DefaultTraningProgram())}/>\r\n    </Box>\r\n}\r\n \r\nexport default TraningProgramScene;","import React from \"react\";\r\nimport { BottomNavigation, BottomNavigationAction, Paper } from \"@mui/material\";\r\n\r\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\r\nimport FitbitIcon from '@mui/icons-material/Fitbit';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport QueryStatsIcon from '@mui/icons-material/QueryStats';\r\n\r\nconst Navigation = props => {\r\n    return <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\r\n        <BottomNavigation value={props.activeScene} onChange={props.handleChange} showLabels>\r\n            <BottomNavigationAction value=\"traning-programs\" label=\"Программы\" icon={<ListAltIcon />} />\r\n            <BottomNavigationAction value=\"traning\" label=\"Тренировки\" icon={<FitnessCenterIcon />} />\r\n            <BottomNavigationAction value=\"progress\" label=\"Прогресс\" icon={<QueryStatsIcon />} />\r\n            <BottomNavigationAction value=\"exercises\" label=\"Упражнения\" icon={<FitbitIcon />} />\r\n        </BottomNavigation>\r\n    </Paper>\r\n}\r\n\r\nexport default Navigation;","import { Box, createTheme, CssBaseline, ThemeProvider } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\r\nimport Navigation from './Navigation'\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#EAE1DF\",\r\n            light: \"#f7f3f3\",\r\n            dark: \"#be9d9d\",\r\n            contrastText: \"#322E18\"\r\n        },\r\n        secondary: {\r\n            main: \"#545E56\",\r\n            light: \"#EAECEA\",\r\n            dark: \"#A9B1A9\"\r\n        },\r\n        background: {\r\n            default: \"#f7f3f3\"\r\n        }\r\n    },\r\n    shape: {\r\n        borderRadius: '8px'\r\n    },\r\n    typography: {\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n    }\r\n});\r\n\r\nconst Layout = ({ children }) => {\r\n    const [scene, setScene] = useState(\"traning\")\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        const path = location.pathname.substring(1);\r\n        if (path.length == 0 || path.includes('workout-process')) {\r\n            setScene(\"traning\")\r\n        } else {\r\n            setScene(path)\r\n        }\r\n    }, [location])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        navigate(`/${newValue}`)\r\n    };\r\n\r\n    return <Box sx={{ display: 'flex', height: '100%', justifyContent: 'center', pb: 7, pt: 0 }}>\r\n        <CssBaseline />\r\n        <ThemeProvider theme={darkTheme}>\r\n            <Box component={\"main\"} sx={{ p: 1, width: '100%', height: '100%', overflowY: \"scroll\", pb: 10 }}>\r\n                <Outlet />\r\n                <Navigation activeScene={scene} handleChange={handleChange} />\r\n            </Box>\r\n        </ThemeProvider>\r\n    </Box>\r\n}\r\n\r\nexport default Layout;","import { Box, Button, Grid, Paper, Typography } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { GetExerciseById } from '../../api/ExercisesAPI';\r\nimport MainButton from '../base/MainButton';\r\nimport Modal from '../base/Modal';\r\nimport { DefaultSet, GenerateProgramExercise } from '../Constants';\r\nimport ExercisesSelector from '../exercise/ExercisesSelector';\r\nimport SetsTable from '../program/SetsTable';\r\nimport { CompleteWorkout, GetWorkoutById, IsActive, IsCompleted, IsNew, SaveWorkout, StartWorkout } from '../service/WorkoutService';\r\n\r\nconst WorkoutProcessScene = (props) => {\r\n    const { workoutId } = useParams();\r\n\r\n    const [selected, setSelected] = useState([]);\r\n    const [isOpen, setOpen] = useState(false)\r\n    const [workout, updateWorkout] = useState({ exercises: [] });\r\n    useEffect(() => {\r\n        let result = GetWorkoutById(workoutId)\r\n        updateWorkout(result)\r\n        setSelected(result.exercises);\r\n    }, [workoutId])\r\n\r\n    useEffect(() => {\r\n        setSelected(workout.exercises)\r\n    }, [workout])\r\n\r\n\r\n    const handleChangeOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const onClose = () => {\r\n        setSelected(workout.exercises)\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const handleChangeInput = (e, exercise, index) => {\r\n        let target = getTargetExerciseById(exercise.id)\r\n        let newValue = e.target.value == \"\" ? \"\" : parseInt(e.target.value);\r\n        target.sets[index][e.target.name] = newValue\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const handleChangeCompleted = (e, exercise, index) => {\r\n        let target = getTargetExerciseById(exercise.id)\r\n        target.sets[index].completed = !target.sets[index].completed;\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const getTargetExerciseById = id => {\r\n        return workout.exercises.find(e => e.id == id);\r\n    }\r\n\r\n    const updateWorkoutFilling = (target) => {\r\n        updateWorkout({\r\n            ...workout,\r\n            exercises: workout.exercises.map(e => {\r\n                return e.id == target.id ? target : e;\r\n            })\r\n        })\r\n        SaveWorkout(workout)\r\n    }\r\n\r\n    const addSet = (exercise) => {\r\n        let target = getTargetExerciseById(exercise.id);\r\n        target.sets.push(DefaultSet());\r\n        updateWorkoutFilling(target)\r\n    }\r\n\r\n    const startWorkout = () => {\r\n        updateWorkoutFilling(StartWorkout(workout))\r\n    }\r\n\r\n    const completeWorkout = () => {\r\n        updateWorkoutFilling(CompleteWorkout(workout));\r\n    }\r\n\r\n    const handleCheckItem = id => {\r\n        if (!isSelected(id)) {\r\n            setSelected([...selected, GenerateProgramExercise(id)])\r\n        } else {\r\n            setSelected(selected.filter(e => e.id != id))\r\n        }\r\n    }\r\n\r\n    const onSaveExercises = () => {\r\n        workout.exercises = selected;\r\n        updateWorkoutFilling(workout);\r\n        handleChangeOpen();\r\n    }\r\n\r\n    const isSelected = id => {\r\n        return selected.find(e => e.id == id) || false\r\n    }\r\n\r\n    return <Box sx={{\r\n        height: \"100%\", overflow: \"scroll\"\r\n    }}>\r\n        <Grid container spacing={2}>\r\n            {IsCompleted(workout) && <Grid item xs={12}>\r\n                <Paper sx={{\r\n                    p: 2\r\n                }}>\r\n                    <Typography variant='h6'>{`Тоннаж: ${workout.volume} кг`}</Typography>\r\n                    <Typography variant='h6'>{`Выполнено на ${workout.progress}%`}</Typography>\r\n                </Paper>\r\n                </Grid>}\r\n            {workout.exercises.map((exercise, idx) => {\r\n                const item = GetExerciseById(exercise.id);\r\n                return <Grid item xs={12} key={idx}>\r\n                    <SetsTable\r\n                        infoMode={IsCompleted(workout) || IsNew(workout)}\r\n                        inputMode={IsActive(workout)}\r\n                        item={item}\r\n                        sets={exercise.sets}\r\n                        handleChangeCompleted={handleChangeCompleted}\r\n                        handleChangeInput={handleChangeInput}\r\n                        addSet={addSet} />\r\n                </Grid>\r\n            })}\r\n        </Grid>\r\n\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={onClose}\r\n            title=\"Изменить упражнения\">\r\n            <ExercisesSelector\r\n                handleCheckItem={handleCheckItem}\r\n                selectedExercises={workout.exercises}\r\n                isSelected={isSelected}\r\n                selected={selected}\r\n                onSave={onSaveExercises} />\r\n        </Modal>\r\n\r\n       {(IsNew(workout) || IsActive(workout)) && <Button onClick={handleChangeOpen}>Изменить упражнения</Button>}\r\n\r\n        {IsNew(workout) && <MainButton\r\n            text={\"Go!\"}\r\n            onClick={startWorkout}\r\n            sx={{\r\n                backgroundColor: \"#FBAB7E\",\r\n                backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\r\n                color: 'black'\r\n            }} />}\r\n        {IsActive(workout) && <MainButton\r\n            text={\"Завершить\"}\r\n            onClick={completeWorkout}\r\n            sx={{\r\n                backgroundColor: \"#FBAB7E\",\r\n                backgroundImage: 'linear-gradient(62deg, #FBAB7E 0%, #F7CE68 100%)',\r\n                color: 'black'\r\n            }} />}\r\n    </Box>\r\n}\r\n\r\nexport default WorkoutProcessScene;","import React from 'react';\r\n\r\nconst ProgressScene = () => {\r\n    return <div>\r\n        Прогресс\r\n    </div>\r\n}\r\n \r\nexport default ProgressScene;","import React from \"react\";\r\nimport './App.css';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\n\r\nimport { DefaultExercises, DefaultTraningPrograms } from \"./components/Constants\";\r\nimport { createHashRouter, createRoutesFromElements, Route, RouterProvider } from \"react-router-dom\";\r\n\r\nimport TraningScene from \"./components/scenes/TraningScene\";\r\nimport ExercisesScene from \"./components/scenes/ExercisesScene\";\r\nimport TraningProgramScene from \"./components/scenes/TraningProgramScene\";\r\nimport Layout from \"./components/base/Layout\";\r\nimport WorkoutProcessScene from \"./components/scenes/TraningProcessScene\";\r\nimport ProgressScene from \"./components/scenes/ProgressScene\";\r\n\r\nconst initExercises = () => {\r\n  if (localStorage.getItem(\"exercises\") == null)\r\n    localStorage.setItem(\"exercises\", JSON.stringify(DefaultExercises))\r\n  if (localStorage.getItem(\"traning_programs\") == null)\r\n    localStorage.setItem(\"traning_programs\", JSON.stringify(DefaultTraningPrograms))\r\n}\r\n\r\nconst router = createHashRouter(\r\n  createRoutesFromElements(\r\n    <Route path=\"/\" element={<Layout />}>\r\n      <Route index element={<TraningScene />} />\r\n      <Route path=\"exercises\" element={<ExercisesScene />} />\r\n      <Route path=\"traning-programs\" element={<TraningProgramScene />} />\r\n      <Route path=\"traning\" element={<TraningScene />} />\r\n      <Route path=\"workout-process/:workoutId\" element={<WorkoutProcessScene />} />\r\n      <Route path=\"progress\" element={<ProgressScene/>} />\r\n    </Route>\r\n  )\r\n);\r\n\r\nconst App = () => {\r\n  initExercises();\r\n  return (<RouterProvider router={router} />);\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if ('serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}